/*
 * generated by Xtext 2.10.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGreetingsAssignment()); }
		(rule__Model__GreetingsAssignment)*
		{ after(grammarAccess.getModelAccess().getGreetingsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFLOAT_LIT
entryRuleFLOAT_LIT
:
{ before(grammarAccess.getFLOAT_LITRule()); }
	 ruleFLOAT_LIT
{ after(grammarAccess.getFLOAT_LITRule()); } 
	 EOF 
;

// Rule FLOAT_LIT
ruleFLOAT_LIT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFLOAT_LITAccess().getAlternatives()); }
		(rule__FLOAT_LIT__Alternatives)
		{ after(grammarAccess.getFLOAT_LITAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIMAGINARY_LIT
entryRuleIMAGINARY_LIT
:
{ before(grammarAccess.getIMAGINARY_LITRule()); }
	 ruleIMAGINARY_LIT
{ after(grammarAccess.getIMAGINARY_LITRule()); } 
	 EOF 
;

// Rule IMAGINARY_LIT
ruleIMAGINARY_LIT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIMAGINARY_LITAccess().getGroup()); }
		(rule__IMAGINARY_LIT__Group__0)
		{ after(grammarAccess.getIMAGINARY_LITAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeName
entryRuleTypeName
:
{ before(grammarAccess.getTypeNameRule()); }
	 ruleTypeName
{ after(grammarAccess.getTypeNameRule()); } 
	 EOF 
;

// Rule TypeName
ruleTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeNameAccess().getIdAssignment()); }
		(rule__TypeName__IdAssignment)
		{ after(grammarAccess.getTypeNameAccess().getIdAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeLit
entryRuleTypeLit
:
{ before(grammarAccess.getTypeLitRule()); }
	 ruleTypeLit
{ after(grammarAccess.getTypeLitRule()); } 
	 EOF 
;

// Rule TypeLit
ruleTypeLit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeLitAccess().getAlternatives()); }
		(rule__TypeLit__Alternatives)
		{ after(grammarAccess.getTypeLitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeLitLinha
entryRuleTypeLitLinha
:
{ before(grammarAccess.getTypeLitLinhaRule()); }
	 ruleTypeLitLinha
{ after(grammarAccess.getTypeLitLinhaRule()); } 
	 EOF 
;

// Rule TypeLitLinha
ruleTypeLitLinha 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeLitLinhaAccess().getAlternatives()); }
		(rule__TypeLitLinha__Alternatives)
		{ after(grammarAccess.getTypeLitLinhaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayLength
entryRuleArrayLength
:
{ before(grammarAccess.getArrayLengthRule()); }
	 ruleArrayLength
{ after(grammarAccess.getArrayLengthRule()); } 
	 EOF 
;

// Rule ArrayLength
ruleArrayLength 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayLengthAccess().getExpressionAssignment()); }
		(rule__ArrayLength__ExpressionAssignment)
		{ after(grammarAccess.getArrayLengthAccess().getExpressionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementType
entryRuleElementType
:
{ before(grammarAccess.getElementTypeRule()); }
	 ruleElementType
{ after(grammarAccess.getElementTypeRule()); } 
	 EOF 
;

// Rule ElementType
ruleElementType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementTypeAccess().getTypeAssignment()); }
		(rule__ElementType__TypeAssignment)
		{ after(grammarAccess.getElementTypeAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructType
entryRuleStructType
:
{ before(grammarAccess.getStructTypeRule()); }
	 ruleStructType
{ after(grammarAccess.getStructTypeRule()); } 
	 EOF 
;

// Rule StructType
ruleStructType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructTypeAccess().getGroup()); }
		(rule__StructType__Group__0)
		{ after(grammarAccess.getStructTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldDecl
entryRuleFieldDecl
:
{ before(grammarAccess.getFieldDeclRule()); }
	 ruleFieldDecl
{ after(grammarAccess.getFieldDeclRule()); } 
	 EOF 
;

// Rule FieldDecl
ruleFieldDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldDeclAccess().getGroup()); }
		(rule__FieldDecl__Group__0)
		{ after(grammarAccess.getFieldDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmbeddedField
entryRuleEmbeddedField
:
{ before(grammarAccess.getEmbeddedFieldRule()); }
	 ruleEmbeddedField
{ after(grammarAccess.getEmbeddedFieldRule()); } 
	 EOF 
;

// Rule EmbeddedField
ruleEmbeddedField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmbeddedFieldAccess().getGroup()); }
		(rule__EmbeddedField__Group__0)
		{ after(grammarAccess.getEmbeddedFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTag
entryRuleTag
:
{ before(grammarAccess.getTagRule()); }
	 ruleTag
{ after(grammarAccess.getTagRule()); } 
	 EOF 
;

// Rule Tag
ruleTag 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTagAccess().getString_litAssignment()); }
		(rule__Tag__String_litAssignment)
		{ after(grammarAccess.getTagAccess().getString_litAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePointerType
entryRulePointerType
:
{ before(grammarAccess.getPointerTypeRule()); }
	 rulePointerType
{ after(grammarAccess.getPointerTypeRule()); } 
	 EOF 
;

// Rule PointerType
rulePointerType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointerTypeAccess().getGroup()); }
		(rule__PointerType__Group__0)
		{ after(grammarAccess.getPointerTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBaseType
entryRuleBaseType
:
{ before(grammarAccess.getBaseTypeRule()); }
	 ruleBaseType
{ after(grammarAccess.getBaseTypeRule()); } 
	 EOF 
;

// Rule BaseType
ruleBaseType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBaseTypeAccess().getTypeAssignment()); }
		(rule__BaseType__TypeAssignment)
		{ after(grammarAccess.getBaseTypeAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionType
entryRuleFunctionType
:
{ before(grammarAccess.getFunctionTypeRule()); }
	 ruleFunctionType
{ after(grammarAccess.getFunctionTypeRule()); } 
	 EOF 
;

// Rule FunctionType
ruleFunctionType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionTypeAccess().getGroup()); }
		(rule__FunctionType__Group__0)
		{ after(grammarAccess.getFunctionTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSignature
entryRuleSignature
:
{ before(grammarAccess.getSignatureRule()); }
	 ruleSignature
{ after(grammarAccess.getSignatureRule()); } 
	 EOF 
;

// Rule Signature
ruleSignature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignatureAccess().getGroup()); }
		(rule__Signature__Group__0)
		{ after(grammarAccess.getSignatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResult
entryRuleResult
:
{ before(grammarAccess.getResultRule()); }
	 ruleResult
{ after(grammarAccess.getResultRule()); } 
	 EOF 
;

// Rule Result
ruleResult 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResultAccess().getAlternatives()); }
		(rule__Result__Alternatives)
		{ after(grammarAccess.getResultAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameters
entryRuleParameters
:
{ before(grammarAccess.getParametersRule()); }
	 ruleParameters
{ after(grammarAccess.getParametersRule()); } 
	 EOF 
;

// Rule Parameters
ruleParameters 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParametersAccess().getGroup()); }
		(rule__Parameters__Group__0)
		{ after(grammarAccess.getParametersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterList
entryRuleParameterList
:
{ before(grammarAccess.getParameterListRule()); }
	 ruleParameterList
{ after(grammarAccess.getParameterListRule()); } 
	 EOF 
;

// Rule ParameterList
ruleParameterList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterListAccess().getGroup()); }
		(rule__ParameterList__Group__0)
		{ after(grammarAccess.getParameterListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterDecl
entryRuleParameterDecl
:
{ before(grammarAccess.getParameterDeclRule()); }
	 ruleParameterDecl
{ after(grammarAccess.getParameterDeclRule()); } 
	 EOF 
;

// Rule ParameterDecl
ruleParameterDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterDeclAccess().getGroup()); }
		(rule__ParameterDecl__Group__0)
		{ after(grammarAccess.getParameterDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterfaceType
entryRuleInterfaceType
:
{ before(grammarAccess.getInterfaceTypeRule()); }
	 ruleInterfaceType
{ after(grammarAccess.getInterfaceTypeRule()); } 
	 EOF 
;

// Rule InterfaceType
ruleInterfaceType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceTypeAccess().getGroup()); }
		(rule__InterfaceType__Group__0)
		{ after(grammarAccess.getInterfaceTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodSpec
entryRuleMethodSpec
:
{ before(grammarAccess.getMethodSpecRule()); }
	 ruleMethodSpec
{ after(grammarAccess.getMethodSpecRule()); } 
	 EOF 
;

// Rule MethodSpec
ruleMethodSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodSpecAccess().getAlternatives()); }
		(rule__MethodSpec__Alternatives)
		{ after(grammarAccess.getMethodSpecAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodName
entryRuleMethodName
:
{ before(grammarAccess.getMethodNameRule()); }
	 ruleMethodName
{ after(grammarAccess.getMethodNameRule()); } 
	 EOF 
;

// Rule MethodName
ruleMethodName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodNameAccess().getIdAssignment()); }
		(rule__MethodName__IdAssignment)
		{ after(grammarAccess.getMethodNameAccess().getIdAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterfaceTypeName
entryRuleInterfaceTypeName
:
{ before(grammarAccess.getInterfaceTypeNameRule()); }
	 ruleInterfaceTypeName
{ after(grammarAccess.getInterfaceTypeNameRule()); } 
	 EOF 
;

// Rule InterfaceTypeName
ruleInterfaceTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceTypeNameAccess().getTypeNameAssignment()); }
		(rule__InterfaceTypeName__TypeNameAssignment)
		{ after(grammarAccess.getInterfaceTypeNameAccess().getTypeNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapType
entryRuleMapType
:
{ before(grammarAccess.getMapTypeRule()); }
	 ruleMapType
{ after(grammarAccess.getMapTypeRule()); } 
	 EOF 
;

// Rule MapType
ruleMapType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapTypeAccess().getGroup()); }
		(rule__MapType__Group__0)
		{ after(grammarAccess.getMapTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKeyType
entryRuleKeyType
:
{ before(grammarAccess.getKeyTypeRule()); }
	 ruleKeyType
{ after(grammarAccess.getKeyTypeRule()); } 
	 EOF 
;

// Rule KeyType
ruleKeyType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyTypeAccess().getTypeAssignment()); }
		(rule__KeyType__TypeAssignment)
		{ after(grammarAccess.getKeyTypeAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChannelType
entryRuleChannelType
:
{ before(grammarAccess.getChannelTypeRule()); }
	 ruleChannelType
{ after(grammarAccess.getChannelTypeRule()); } 
	 EOF 
;

// Rule ChannelType
ruleChannelType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChannelTypeAccess().getGroup()); }
		(rule__ChannelType__Group__0)
		{ after(grammarAccess.getChannelTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChannelTypeLinha
entryRuleChannelTypeLinha
:
{ before(grammarAccess.getChannelTypeLinhaRule()); }
	 ruleChannelTypeLinha
{ after(grammarAccess.getChannelTypeLinhaRule()); } 
	 EOF 
;

// Rule ChannelTypeLinha
ruleChannelTypeLinha 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChannelTypeLinhaAccess().getAlternatives()); }
		(rule__ChannelTypeLinha__Alternatives)
		{ after(grammarAccess.getChannelTypeLinhaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlock
entryRuleBlock
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockAccess().getGroup()); }
		(rule__Block__Group__0)
		{ after(grammarAccess.getBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatementList
entryRuleStatementList
:
{ before(grammarAccess.getStatementListRule()); }
	 ruleStatementList
{ after(grammarAccess.getStatementListRule()); } 
	 EOF 
;

// Rule StatementList
ruleStatementList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementListAccess().getGroup()); }
		(rule__StatementList__Group__0)
		{ after(grammarAccess.getStatementListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaration
entryRuleDeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
		(rule__Declaration__Alternatives)
		{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTopLevelDecl
entryRuleTopLevelDecl
:
{ before(grammarAccess.getTopLevelDeclRule()); }
	 ruleTopLevelDecl
{ after(grammarAccess.getTopLevelDeclRule()); } 
	 EOF 
;

// Rule TopLevelDecl
ruleTopLevelDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTopLevelDeclAccess().getAlternatives()); }
		(rule__TopLevelDecl__Alternatives)
		{ after(grammarAccess.getTopLevelDeclAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstDecl
entryRuleConstDecl
:
{ before(grammarAccess.getConstDeclRule()); }
	 ruleConstDecl
{ after(grammarAccess.getConstDeclRule()); } 
	 EOF 
;

// Rule ConstDecl
ruleConstDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstDeclAccess().getGroup()); }
		(rule__ConstDecl__Group__0)
		{ after(grammarAccess.getConstDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstSpec
entryRuleConstSpec
:
{ before(grammarAccess.getConstSpecRule()); }
	 ruleConstSpec
{ after(grammarAccess.getConstSpecRule()); } 
	 EOF 
;

// Rule ConstSpec
ruleConstSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstSpecAccess().getGroup()); }
		(rule__ConstSpec__Group__0)
		{ after(grammarAccess.getConstSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdentifierList
entryRuleIdentifierList
:
{ before(grammarAccess.getIdentifierListRule()); }
	 ruleIdentifierList
{ after(grammarAccess.getIdentifierListRule()); } 
	 EOF 
;

// Rule IdentifierList
ruleIdentifierList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifierListAccess().getGroup()); }
		(rule__IdentifierList__Group__0)
		{ after(grammarAccess.getIdentifierListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionList
entryRuleExpressionList
:
{ before(grammarAccess.getExpressionListRule()); }
	 ruleExpressionList
{ after(grammarAccess.getExpressionListRule()); } 
	 EOF 
;

// Rule ExpressionList
ruleExpressionList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionListAccess().getGroup()); }
		(rule__ExpressionList__Group__0)
		{ after(grammarAccess.getExpressionListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDecl
entryRuleTypeDecl
:
{ before(grammarAccess.getTypeDeclRule()); }
	 ruleTypeDecl
{ after(grammarAccess.getTypeDeclRule()); } 
	 EOF 
;

// Rule TypeDecl
ruleTypeDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDeclAccess().getGroup()); }
		(rule__TypeDecl__Group__0)
		{ after(grammarAccess.getTypeDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeSpec
entryRuleTypeSpec
:
{ before(grammarAccess.getTypeSpecRule()); }
	 ruleTypeSpec
{ after(grammarAccess.getTypeSpecRule()); } 
	 EOF 
;

// Rule TypeSpec
ruleTypeSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSpecAccess().getAlternatives()); }
		(rule__TypeSpec__Alternatives)
		{ after(grammarAccess.getTypeSpecAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAliasDecl
entryRuleAliasDecl
:
{ before(grammarAccess.getAliasDeclRule()); }
	 ruleAliasDecl
{ after(grammarAccess.getAliasDeclRule()); } 
	 EOF 
;

// Rule AliasDecl
ruleAliasDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAliasDeclAccess().getGroup()); }
		(rule__AliasDecl__Group__0)
		{ after(grammarAccess.getAliasDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDef
entryRuleTypeDef
:
{ before(grammarAccess.getTypeDefRule()); }
	 ruleTypeDef
{ after(grammarAccess.getTypeDefRule()); } 
	 EOF 
;

// Rule TypeDef
ruleTypeDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDefAccess().getGroup()); }
		(rule__TypeDef__Group__0)
		{ after(grammarAccess.getTypeDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarDecl
entryRuleVarDecl
:
{ before(grammarAccess.getVarDeclRule()); }
	 ruleVarDecl
{ after(grammarAccess.getVarDeclRule()); } 
	 EOF 
;

// Rule VarDecl
ruleVarDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarDeclAccess().getGroup()); }
		(rule__VarDecl__Group__0)
		{ after(grammarAccess.getVarDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarSpec
entryRuleVarSpec
:
{ before(grammarAccess.getVarSpecRule()); }
	 ruleVarSpec
{ after(grammarAccess.getVarSpecRule()); } 
	 EOF 
;

// Rule VarSpec
ruleVarSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarSpecAccess().getGroup()); }
		(rule__VarSpec__Group__0)
		{ after(grammarAccess.getVarSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShortVarDecl
entryRuleShortVarDecl
:
{ before(grammarAccess.getShortVarDeclRule()); }
	 ruleShortVarDecl
{ after(grammarAccess.getShortVarDeclRule()); } 
	 EOF 
;

// Rule ShortVarDecl
ruleShortVarDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShortVarDeclAccess().getGroup()); }
		(rule__ShortVarDecl__Group__0)
		{ after(grammarAccess.getShortVarDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionDecl
entryRuleFunctionDecl
:
{ before(grammarAccess.getFunctionDeclRule()); }
	 ruleFunctionDecl
{ after(grammarAccess.getFunctionDeclRule()); } 
	 EOF 
;

// Rule FunctionDecl
ruleFunctionDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionDeclAccess().getGroup()); }
		(rule__FunctionDecl__Group__0)
		{ after(grammarAccess.getFunctionDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionName
entryRuleFunctionName
:
{ before(grammarAccess.getFunctionNameRule()); }
	 ruleFunctionName
{ after(grammarAccess.getFunctionNameRule()); } 
	 EOF 
;

// Rule FunctionName
ruleFunctionName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionNameAccess().getIdAssignment()); }
		(rule__FunctionName__IdAssignment)
		{ after(grammarAccess.getFunctionNameAccess().getIdAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionBody
entryRuleFunctionBody
:
{ before(grammarAccess.getFunctionBodyRule()); }
	 ruleFunctionBody
{ after(grammarAccess.getFunctionBodyRule()); } 
	 EOF 
;

// Rule FunctionBody
ruleFunctionBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getBlockAssignment()); }
		(rule__FunctionBody__BlockAssignment)
		{ after(grammarAccess.getFunctionBodyAccess().getBlockAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodDecl
entryRuleMethodDecl
:
{ before(grammarAccess.getMethodDeclRule()); }
	 ruleMethodDecl
{ after(grammarAccess.getMethodDeclRule()); } 
	 EOF 
;

// Rule MethodDecl
ruleMethodDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodDeclAccess().getGroup()); }
		(rule__MethodDecl__Group__0)
		{ after(grammarAccess.getMethodDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReceiver
entryRuleReceiver
:
{ before(grammarAccess.getReceiverRule()); }
	 ruleReceiver
{ after(grammarAccess.getReceiverRule()); } 
	 EOF 
;

// Rule Receiver
ruleReceiver 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReceiverAccess().getParametersAssignment()); }
		(rule__Receiver__ParametersAssignment)
		{ after(grammarAccess.getReceiverAccess().getParametersAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperand
entryRuleOperand
:
{ before(grammarAccess.getOperandRule()); }
	 ruleOperand
{ after(grammarAccess.getOperandRule()); } 
	 EOF 
;

// Rule Operand
ruleOperand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperandAccess().getAlternatives()); }
		(rule__Operand__Alternatives)
		{ after(grammarAccess.getOperandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicLit
entryRuleBasicLit
:
{ before(grammarAccess.getBasicLitRule()); }
	 ruleBasicLit
{ after(grammarAccess.getBasicLitRule()); } 
	 EOF 
;

// Rule BasicLit
ruleBasicLit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicLitAccess().getAlternatives()); }
		(rule__BasicLit__Alternatives)
		{ after(grammarAccess.getBasicLitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperandName
entryRuleOperandName
:
{ before(grammarAccess.getOperandNameRule()); }
	 ruleOperandName
{ after(grammarAccess.getOperandNameRule()); } 
	 EOF 
;

// Rule OperandName
ruleOperandName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperandNameAccess().getIdAssignment()); }
		(rule__OperandName__IdAssignment)
		{ after(grammarAccess.getOperandNameAccess().getIdAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompositeLit
entryRuleCompositeLit
:
{ before(grammarAccess.getCompositeLitRule()); }
	 ruleCompositeLit
{ after(grammarAccess.getCompositeLitRule()); } 
	 EOF 
;

// Rule CompositeLit
ruleCompositeLit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositeLitAccess().getGroup()); }
		(rule__CompositeLit__Group__0)
		{ after(grammarAccess.getCompositeLitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralType
entryRuleLiteralType
:
{ before(grammarAccess.getLiteralTypeRule()); }
	 ruleLiteralType
{ after(grammarAccess.getLiteralTypeRule()); } 
	 EOF 
;

// Rule LiteralType
ruleLiteralType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getAlternatives()); }
		(rule__LiteralType__Alternatives)
		{ after(grammarAccess.getLiteralTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralTypeLinha
entryRuleLiteralTypeLinha
:
{ before(grammarAccess.getLiteralTypeLinhaRule()); }
	 ruleLiteralTypeLinha
{ after(grammarAccess.getLiteralTypeLinhaRule()); } 
	 EOF 
;

// Rule LiteralTypeLinha
ruleLiteralTypeLinha 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralTypeLinhaAccess().getAlternatives()); }
		(rule__LiteralTypeLinha__Alternatives)
		{ after(grammarAccess.getLiteralTypeLinhaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralValue
entryRuleLiteralValue
:
{ before(grammarAccess.getLiteralValueRule()); }
	 ruleLiteralValue
{ after(grammarAccess.getLiteralValueRule()); } 
	 EOF 
;

// Rule LiteralValue
ruleLiteralValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralValueAccess().getGroup()); }
		(rule__LiteralValue__Group__0)
		{ after(grammarAccess.getLiteralValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementList
entryRuleElementList
:
{ before(grammarAccess.getElementListRule()); }
	 ruleElementList
{ after(grammarAccess.getElementListRule()); } 
	 EOF 
;

// Rule ElementList
ruleElementList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementListAccess().getGroup()); }
		(rule__ElementList__Group__0)
		{ after(grammarAccess.getElementListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKeyedElement
entryRuleKeyedElement
:
{ before(grammarAccess.getKeyedElementRule()); }
	 ruleKeyedElement
{ after(grammarAccess.getKeyedElementRule()); } 
	 EOF 
;

// Rule KeyedElement
ruleKeyedElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyedElementAccess().getGroup()); }
		(rule__KeyedElement__Group__0)
		{ after(grammarAccess.getKeyedElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKey
entryRuleKey
:
{ before(grammarAccess.getKeyRule()); }
	 ruleKey
{ after(grammarAccess.getKeyRule()); } 
	 EOF 
;

// Rule Key
ruleKey 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyAccess().getAlternatives()); }
		(rule__Key__Alternatives)
		{ after(grammarAccess.getKeyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldName
entryRuleFieldName
:
{ before(grammarAccess.getFieldNameRule()); }
	 ruleFieldName
{ after(grammarAccess.getFieldNameRule()); } 
	 EOF 
;

// Rule FieldName
ruleFieldName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldNameAccess().getIdAssignment()); }
		(rule__FieldName__IdAssignment)
		{ after(grammarAccess.getFieldNameAccess().getIdAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionLit
entryRuleFunctionLit
:
{ before(grammarAccess.getFunctionLitRule()); }
	 ruleFunctionLit
{ after(grammarAccess.getFunctionLitRule()); } 
	 EOF 
;

// Rule FunctionLit
ruleFunctionLit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionLitAccess().getGroup()); }
		(rule__FunctionLit__Group__0)
		{ after(grammarAccess.getFunctionLitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpr
entryRulePrimaryExpr
:
{ before(grammarAccess.getPrimaryExprRule()); }
	 rulePrimaryExpr
{ after(grammarAccess.getPrimaryExprRule()); } 
	 EOF 
;

// Rule PrimaryExpr
rulePrimaryExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getAlternatives()); }
		(rule__PrimaryExpr__Alternatives)
		{ after(grammarAccess.getPrimaryExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExprLinha
entryRulePrimaryExprLinha
:
{ before(grammarAccess.getPrimaryExprLinhaRule()); }
	 rulePrimaryExprLinha
{ after(grammarAccess.getPrimaryExprLinhaRule()); } 
	 EOF 
;

// Rule PrimaryExprLinha
rulePrimaryExprLinha 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getGroup()); }
		(rule__PrimaryExprLinha__Group__0)
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelector
entryRuleSelector
:
{ before(grammarAccess.getSelectorRule()); }
	 ruleSelector
{ after(grammarAccess.getSelectorRule()); } 
	 EOF 
;

// Rule Selector
ruleSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectorAccess().getGroup()); }
		(rule__Selector__Group__0)
		{ after(grammarAccess.getSelectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndex
entryRuleIndex
:
{ before(grammarAccess.getIndexRule()); }
	 ruleIndex
{ after(grammarAccess.getIndexRule()); } 
	 EOF 
;

// Rule Index
ruleIndex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexAccess().getGroup()); }
		(rule__Index__Group__0)
		{ after(grammarAccess.getIndexAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSlice
entryRuleSlice
:
{ before(grammarAccess.getSliceRule()); }
	 ruleSlice
{ after(grammarAccess.getSliceRule()); } 
	 EOF 
;

// Rule Slice
ruleSlice 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSliceAccess().getGroup()); }
		(rule__Slice__Group__0)
		{ after(grammarAccess.getSliceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeAssertion
entryRuleTypeAssertion
:
{ before(grammarAccess.getTypeAssertionRule()); }
	 ruleTypeAssertion
{ after(grammarAccess.getTypeAssertionRule()); } 
	 EOF 
;

// Rule TypeAssertion
ruleTypeAssertion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAssertionAccess().getGroup()); }
		(rule__TypeAssertion__Group__0)
		{ after(grammarAccess.getTypeAssertionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArguments
entryRuleArguments
:
{ before(grammarAccess.getArgumentsRule()); }
	 ruleArguments
{ after(grammarAccess.getArgumentsRule()); } 
	 EOF 
;

// Rule Arguments
ruleArguments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentsAccess().getGroup()); }
		(rule__Arguments__Group__0)
		{ after(grammarAccess.getArgumentsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodExpr
entryRuleMethodExpr
:
{ before(grammarAccess.getMethodExprRule()); }
	 ruleMethodExpr
{ after(grammarAccess.getMethodExprRule()); } 
	 EOF 
;

// Rule MethodExpr
ruleMethodExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodExprAccess().getGroup()); }
		(rule__MethodExpr__Group__0)
		{ after(grammarAccess.getMethodExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReceiverType
entryRuleReceiverType
:
{ before(grammarAccess.getReceiverTypeRule()); }
	 ruleReceiverType
{ after(grammarAccess.getReceiverTypeRule()); } 
	 EOF 
;

// Rule ReceiverType
ruleReceiverType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReceiverTypeAccess().getTypeAssignment()); }
		(rule__ReceiverType__TypeAssignment)
		{ after(grammarAccess.getReceiverTypeAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression_Linha
entryRuleExpression_Linha
:
{ before(grammarAccess.getExpression_LinhaRule()); }
	 ruleExpression_Linha
{ after(grammarAccess.getExpression_LinhaRule()); } 
	 EOF 
;

// Rule Expression_Linha
ruleExpression_Linha 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpression_LinhaAccess().getGroup()); }
		(rule__Expression_Linha__Group__0)
		{ after(grammarAccess.getExpression_LinhaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr
:
{ before(grammarAccess.getUnaryExprRule()); }
	 ruleUnaryExpr
{ after(grammarAccess.getUnaryExprRule()); } 
	 EOF 
;

// Rule UnaryExpr
ruleUnaryExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExprAccess().getAlternatives()); }
		(rule__UnaryExpr__Alternatives)
		{ after(grammarAccess.getUnaryExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBINARY_OP
entryRuleBINARY_OP
:
{ before(grammarAccess.getBINARY_OPRule()); }
	 ruleBINARY_OP
{ after(grammarAccess.getBINARY_OPRule()); } 
	 EOF 
;

// Rule BINARY_OP
ruleBINARY_OP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBINARY_OPAccess().getAlternatives()); }
		(rule__BINARY_OP__Alternatives)
		{ after(grammarAccess.getBINARY_OPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConversion
entryRuleConversion
:
{ before(grammarAccess.getConversionRule()); }
	 ruleConversion
{ after(grammarAccess.getConversionRule()); } 
	 EOF 
;

// Rule Conversion
ruleConversion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConversionAccess().getGroup()); }
		(rule__Conversion__Group__0)
		{ after(grammarAccess.getConversionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleStmt
entryRuleSimpleStmt
:
{ before(grammarAccess.getSimpleStmtRule()); }
	 ruleSimpleStmt
{ after(grammarAccess.getSimpleStmtRule()); } 
	 EOF 
;

// Rule SimpleStmt
ruleSimpleStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getAlternatives()); }
		(rule__SimpleStmt__Alternatives)
		{ after(grammarAccess.getSimpleStmtAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleStmtLinha
entryRuleSimpleStmtLinha
:
{ before(grammarAccess.getSimpleStmtLinhaRule()); }
	 ruleSimpleStmtLinha
{ after(grammarAccess.getSimpleStmtLinhaRule()); } 
	 EOF 
;

// Rule SimpleStmtLinha
ruleSimpleStmtLinha 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleStmtLinhaAccess().getAlternatives()); }
		(rule__SimpleStmtLinha__Alternatives)
		{ after(grammarAccess.getSimpleStmtLinhaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmptyStmt
entryRuleEmptyStmt
:
{ before(grammarAccess.getEmptyStmtRule()); }
	 ruleEmptyStmt
{ after(grammarAccess.getEmptyStmtRule()); } 
	 EOF 
;

// Rule EmptyStmt
ruleEmptyStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptyStmtAccess().getANY_OTHERAssignment()); }
		(rule__EmptyStmt__ANY_OTHERAssignment)
		{ after(grammarAccess.getEmptyStmtAccess().getANY_OTHERAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLabeledStmt
entryRuleLabeledStmt
:
{ before(grammarAccess.getLabeledStmtRule()); }
	 ruleLabeledStmt
{ after(grammarAccess.getLabeledStmtRule()); } 
	 EOF 
;

// Rule LabeledStmt
ruleLabeledStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabeledStmtAccess().getGroup()); }
		(rule__LabeledStmt__Group__0)
		{ after(grammarAccess.getLabeledStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLabel
entryRuleLabel
:
{ before(grammarAccess.getLabelRule()); }
	 ruleLabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule Label
ruleLabel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabelAccess().getIdAssignment()); }
		(rule__Label__IdAssignment)
		{ after(grammarAccess.getLabelAccess().getIdAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleassign_op
entryRuleassign_op
:
{ before(grammarAccess.getAssign_opRule()); }
	 ruleassign_op
{ after(grammarAccess.getAssign_opRule()); } 
	 EOF 
;

// Rule assign_op
ruleassign_op 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssign_opAccess().getGroup()); }
		(rule__Assign_op__Group__0)
		{ after(grammarAccess.getAssign_opAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStmt
entryRuleIfStmt
:
{ before(grammarAccess.getIfStmtRule()); }
	 ruleIfStmt
{ after(grammarAccess.getIfStmtRule()); } 
	 EOF 
;

// Rule IfStmt
ruleIfStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStmtAccess().getAlternatives()); }
		(rule__IfStmt__Alternatives)
		{ after(grammarAccess.getIfStmtAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStmtLinha
entryRuleIfStmtLinha
:
{ before(grammarAccess.getIfStmtLinhaRule()); }
	 ruleIfStmtLinha
{ after(grammarAccess.getIfStmtLinhaRule()); } 
	 EOF 
;

// Rule IfStmtLinha
ruleIfStmtLinha 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStmtLinhaAccess().getAlternatives()); }
		(rule__IfStmtLinha__Alternatives)
		{ after(grammarAccess.getIfStmtLinhaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSwitchStmt
entryRuleSwitchStmt
:
{ before(grammarAccess.getSwitchStmtRule()); }
	 ruleSwitchStmt
{ after(grammarAccess.getSwitchStmtRule()); } 
	 EOF 
;

// Rule SwitchStmt
ruleSwitchStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwitchStmtAccess().getGroup()); }
		(rule__SwitchStmt__Group__0)
		{ after(grammarAccess.getSwitchStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSwitchStmtLinha
entryRuleSwitchStmtLinha
:
{ before(grammarAccess.getSwitchStmtLinhaRule()); }
	 ruleSwitchStmtLinha
{ after(grammarAccess.getSwitchStmtLinhaRule()); } 
	 EOF 
;

// Rule SwitchStmtLinha
ruleSwitchStmtLinha 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwitchStmtLinhaAccess().getAlternatives()); }
		(rule__SwitchStmtLinha__Alternatives)
		{ after(grammarAccess.getSwitchStmtLinhaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSwitchStmtLinhaLinha
entryRuleSwitchStmtLinhaLinha
:
{ before(grammarAccess.getSwitchStmtLinhaLinhaRule()); }
	 ruleSwitchStmtLinhaLinha
{ after(grammarAccess.getSwitchStmtLinhaLinhaRule()); } 
	 EOF 
;

// Rule SwitchStmtLinhaLinha
ruleSwitchStmtLinhaLinha 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwitchStmtLinhaLinhaAccess().getAlternatives()); }
		(rule__SwitchStmtLinhaLinha__Alternatives)
		{ after(grammarAccess.getSwitchStmtLinhaLinhaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprCaseClause
entryRuleExprCaseClause
:
{ before(grammarAccess.getExprCaseClauseRule()); }
	 ruleExprCaseClause
{ after(grammarAccess.getExprCaseClauseRule()); } 
	 EOF 
;

// Rule ExprCaseClause
ruleExprCaseClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprCaseClauseAccess().getGroup()); }
		(rule__ExprCaseClause__Group__0)
		{ after(grammarAccess.getExprCaseClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprSwitchCase
entryRuleExprSwitchCase
:
{ before(grammarAccess.getExprSwitchCaseRule()); }
	 ruleExprSwitchCase
{ after(grammarAccess.getExprSwitchCaseRule()); } 
	 EOF 
;

// Rule ExprSwitchCase
ruleExprSwitchCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprSwitchCaseAccess().getAlternatives()); }
		(rule__ExprSwitchCase__Alternatives)
		{ after(grammarAccess.getExprSwitchCaseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeCaseClause
entryRuleTypeCaseClause
:
{ before(grammarAccess.getTypeCaseClauseRule()); }
	 ruleTypeCaseClause
{ after(grammarAccess.getTypeCaseClauseRule()); } 
	 EOF 
;

// Rule TypeCaseClause
ruleTypeCaseClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeCaseClauseAccess().getGroup()); }
		(rule__TypeCaseClause__Group__0)
		{ after(grammarAccess.getTypeCaseClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeSwitchCase
entryRuleTypeSwitchCase
:
{ before(grammarAccess.getTypeSwitchCaseRule()); }
	 ruleTypeSwitchCase
{ after(grammarAccess.getTypeSwitchCaseRule()); } 
	 EOF 
;

// Rule TypeSwitchCase
ruleTypeSwitchCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSwitchCaseAccess().getAlternatives()); }
		(rule__TypeSwitchCase__Alternatives)
		{ after(grammarAccess.getTypeSwitchCaseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeList
entryRuleTypeList
:
{ before(grammarAccess.getTypeListRule()); }
	 ruleTypeList
{ after(grammarAccess.getTypeListRule()); } 
	 EOF 
;

// Rule TypeList
ruleTypeList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeListAccess().getGroup()); }
		(rule__TypeList__Group__0)
		{ after(grammarAccess.getTypeListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForStmt
entryRuleForStmt
:
{ before(grammarAccess.getForStmtRule()); }
	 ruleForStmt
{ after(grammarAccess.getForStmtRule()); } 
	 EOF 
;

// Rule ForStmt
ruleForStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForStmtAccess().getGroup()); }
		(rule__ForStmt__Group__0)
		{ after(grammarAccess.getForStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForStmtLinha
entryRuleForStmtLinha
:
{ before(grammarAccess.getForStmtLinhaRule()); }
	 ruleForStmtLinha
{ after(grammarAccess.getForStmtLinhaRule()); } 
	 EOF 
;

// Rule ForStmtLinha
ruleForStmtLinha 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForStmtLinhaAccess().getAlternatives()); }
		(rule__ForStmtLinha__Alternatives)
		{ after(grammarAccess.getForStmtLinhaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForStmtLinhaLinha
entryRuleForStmtLinhaLinha
:
{ before(grammarAccess.getForStmtLinhaLinhaRule()); }
	 ruleForStmtLinhaLinha
{ after(grammarAccess.getForStmtLinhaLinhaRule()); } 
	 EOF 
;

// Rule ForStmtLinhaLinha
ruleForStmtLinhaLinha 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForStmtLinhaLinhaAccess().getAlternatives()); }
		(rule__ForStmtLinhaLinha__Alternatives)
		{ after(grammarAccess.getForStmtLinhaLinhaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getExpressionAssignment()); }
		(rule__Condition__ExpressionAssignment)
		{ after(grammarAccess.getConditionAccess().getExpressionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePostStmt
entryRulePostStmt
:
{ before(grammarAccess.getPostStmtRule()); }
	 rulePostStmt
{ after(grammarAccess.getPostStmtRule()); } 
	 EOF 
;

// Rule PostStmt
rulePostStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostStmtAccess().getSimpleStmtAssignment()); }
		(rule__PostStmt__SimpleStmtAssignment)
		{ after(grammarAccess.getPostStmtAccess().getSimpleStmtAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGoStmt
entryRuleGoStmt
:
{ before(grammarAccess.getGoStmtRule()); }
	 ruleGoStmt
{ after(grammarAccess.getGoStmtRule()); } 
	 EOF 
;

// Rule GoStmt
ruleGoStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGoStmtAccess().getGroup()); }
		(rule__GoStmt__Group__0)
		{ after(grammarAccess.getGoStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectStmt
entryRuleSelectStmt
:
{ before(grammarAccess.getSelectStmtRule()); }
	 ruleSelectStmt
{ after(grammarAccess.getSelectStmtRule()); } 
	 EOF 
;

// Rule SelectStmt
ruleSelectStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectStmtAccess().getGroup()); }
		(rule__SelectStmt__Group__0)
		{ after(grammarAccess.getSelectStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommClause
entryRuleCommClause
:
{ before(grammarAccess.getCommClauseRule()); }
	 ruleCommClause
{ after(grammarAccess.getCommClauseRule()); } 
	 EOF 
;

// Rule CommClause
ruleCommClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommClauseAccess().getGroup()); }
		(rule__CommClause__Group__0)
		{ after(grammarAccess.getCommClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommCase
entryRuleCommCase
:
{ before(grammarAccess.getCommCaseRule()); }
	 ruleCommCase
{ after(grammarAccess.getCommCaseRule()); } 
	 EOF 
;

// Rule CommCase
ruleCommCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommCaseAccess().getAlternatives()); }
		(rule__CommCase__Alternatives)
		{ after(grammarAccess.getCommCaseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommCaseLinha
entryRuleCommCaseLinha
:
{ before(grammarAccess.getCommCaseLinhaRule()); }
	 ruleCommCaseLinha
{ after(grammarAccess.getCommCaseLinhaRule()); } 
	 EOF 
;

// Rule CommCaseLinha
ruleCommCaseLinha 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommCaseLinhaAccess().getAlternatives()); }
		(rule__CommCaseLinha__Alternatives)
		{ after(grammarAccess.getCommCaseLinhaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRecvExpr
entryRuleRecvExpr
:
{ before(grammarAccess.getRecvExprRule()); }
	 ruleRecvExpr
{ after(grammarAccess.getRecvExprRule()); } 
	 EOF 
;

// Rule RecvExpr
ruleRecvExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRecvExprAccess().getExpressionAssignment()); }
		(rule__RecvExpr__ExpressionAssignment)
		{ after(grammarAccess.getRecvExprAccess().getExpressionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnStmt
entryRuleReturnStmt
:
{ before(grammarAccess.getReturnStmtRule()); }
	 ruleReturnStmt
{ after(grammarAccess.getReturnStmtRule()); } 
	 EOF 
;

// Rule ReturnStmt
ruleReturnStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnStmtAccess().getGroup()); }
		(rule__ReturnStmt__Group__0)
		{ after(grammarAccess.getReturnStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBreakStmt
entryRuleBreakStmt
:
{ before(grammarAccess.getBreakStmtRule()); }
	 ruleBreakStmt
{ after(grammarAccess.getBreakStmtRule()); } 
	 EOF 
;

// Rule BreakStmt
ruleBreakStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBreakStmtAccess().getGroup()); }
		(rule__BreakStmt__Group__0)
		{ after(grammarAccess.getBreakStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContinueStmt
entryRuleContinueStmt
:
{ before(grammarAccess.getContinueStmtRule()); }
	 ruleContinueStmt
{ after(grammarAccess.getContinueStmtRule()); } 
	 EOF 
;

// Rule ContinueStmt
ruleContinueStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContinueStmtAccess().getGroup()); }
		(rule__ContinueStmt__Group__0)
		{ after(grammarAccess.getContinueStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGotoStmt
entryRuleGotoStmt
:
{ before(grammarAccess.getGotoStmtRule()); }
	 ruleGotoStmt
{ after(grammarAccess.getGotoStmtRule()); } 
	 EOF 
;

// Rule GotoStmt
ruleGotoStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGotoStmtAccess().getGroup()); }
		(rule__GotoStmt__Group__0)
		{ after(grammarAccess.getGotoStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFallthroughStmt
entryRuleFallthroughStmt
:
{ before(grammarAccess.getFallthroughStmtRule()); }
	 ruleFallthroughStmt
{ after(grammarAccess.getFallthroughStmtRule()); } 
	 EOF 
;

// Rule FallthroughStmt
ruleFallthroughStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFallthroughStmtAccess().getFallthroughAssignment()); }
		(rule__FallthroughStmt__FallthroughAssignment)
		{ after(grammarAccess.getFallthroughStmtAccess().getFallthroughAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeferStmt
entryRuleDeferStmt
:
{ before(grammarAccess.getDeferStmtRule()); }
	 ruleDeferStmt
{ after(grammarAccess.getDeferStmtRule()); } 
	 EOF 
;

// Rule DeferStmt
ruleDeferStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeferStmtAccess().getGroup()); }
		(rule__DeferStmt__Group__0)
		{ after(grammarAccess.getDeferStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSourceFile
entryRuleSourceFile
:
{ before(grammarAccess.getSourceFileRule()); }
	 ruleSourceFile
{ after(grammarAccess.getSourceFileRule()); } 
	 EOF 
;

// Rule SourceFile
ruleSourceFile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceFileAccess().getGroup()); }
		(rule__SourceFile__Group__0)
		{ after(grammarAccess.getSourceFileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageClause
entryRulePackageClause
:
{ before(grammarAccess.getPackageClauseRule()); }
	 rulePackageClause
{ after(grammarAccess.getPackageClauseRule()); } 
	 EOF 
;

// Rule PackageClause
rulePackageClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageClauseAccess().getGroup()); }
		(rule__PackageClause__Group__0)
		{ after(grammarAccess.getPackageClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageName
entryRulePackageName
:
{ before(grammarAccess.getPackageNameRule()); }
	 rulePackageName
{ after(grammarAccess.getPackageNameRule()); } 
	 EOF 
;

// Rule PackageName
rulePackageName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageNameAccess().getIdAssignment()); }
		(rule__PackageName__IdAssignment)
		{ after(grammarAccess.getPackageNameAccess().getIdAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportDecl
entryRuleImportDecl
:
{ before(grammarAccess.getImportDeclRule()); }
	 ruleImportDecl
{ after(grammarAccess.getImportDeclRule()); } 
	 EOF 
;

// Rule ImportDecl
ruleImportDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportDeclAccess().getGroup()); }
		(rule__ImportDecl__Group__0)
		{ after(grammarAccess.getImportDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportSpec
entryRuleImportSpec
:
{ before(grammarAccess.getImportSpecRule()); }
	 ruleImportSpec
{ after(grammarAccess.getImportSpecRule()); } 
	 EOF 
;

// Rule ImportSpec
ruleImportSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportSpecAccess().getGroup()); }
		(rule__ImportSpec__Group__0)
		{ after(grammarAccess.getImportSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFLOAT_LITAccess().getGroup_0()); }
		(rule__FLOAT_LIT__Group_0__0)
		{ after(grammarAccess.getFLOAT_LITAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFLOAT_LITAccess().getGroup_1()); }
		(rule__FLOAT_LIT__Group_1__0)
		{ after(grammarAccess.getFLOAT_LITAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getFLOAT_LITAccess().getGroup_2()); }
		(rule__FLOAT_LIT__Group_2__0)
		{ after(grammarAccess.getFLOAT_LITAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IMAGINARY_LIT__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIMAGINARY_LITAccess().getDECIMALSAssignment_0_0()); }
		(rule__IMAGINARY_LIT__DECIMALSAssignment_0_0)
		{ after(grammarAccess.getIMAGINARY_LITAccess().getDECIMALSAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getIMAGINARY_LITAccess().getFLOAT_LITAssignment_0_1()); }
		(rule__IMAGINARY_LIT__FLOAT_LITAssignment_0_1)
		{ after(grammarAccess.getIMAGINARY_LITAccess().getFLOAT_LITAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeNameAssignment_0()); }
		(rule__Type__TypeNameAssignment_0)
		{ after(grammarAccess.getTypeAccess().getTypeNameAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTypeLitAssignment_1()); }
		(rule__Type__TypeLitAssignment_1)
		{ after(grammarAccess.getTypeAccess().getTypeLitAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getGroup_2()); }
		(rule__Type__Group_2__0)
		{ after(grammarAccess.getTypeAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getGroup_0()); }
		(rule__TypeLit__Group_0__0)
		{ after(grammarAccess.getTypeLitAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getSrtuctTypeAssignment_1()); }
		(rule__TypeLit__SrtuctTypeAssignment_1)
		{ after(grammarAccess.getTypeLitAccess().getSrtuctTypeAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getPointerTypeAssignment_2()); }
		(rule__TypeLit__PointerTypeAssignment_2)
		{ after(grammarAccess.getTypeLitAccess().getPointerTypeAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getFunctionTypeAssignment_3()); }
		(rule__TypeLit__FunctionTypeAssignment_3)
		{ after(grammarAccess.getTypeLitAccess().getFunctionTypeAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getInterfaceTypeAssignment_4()); }
		(rule__TypeLit__InterfaceTypeAssignment_4)
		{ after(grammarAccess.getTypeLitAccess().getInterfaceTypeAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getMapTypeAssignment_5()); }
		(rule__TypeLit__MapTypeAssignment_5)
		{ after(grammarAccess.getTypeLitAccess().getMapTypeAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getChannelTypeAssignment_6()); }
		(rule__TypeLit__ChannelTypeAssignment_6)
		{ after(grammarAccess.getTypeLitAccess().getChannelTypeAssignment_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitLinhaAccess().getGroup_0()); }
		(rule__TypeLitLinha__Group_0__0)
		{ after(grammarAccess.getTypeLitLinhaAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitLinhaAccess().getGroup_1()); }
		(rule__TypeLitLinha__Group_1__0)
		{ after(grammarAccess.getTypeLitLinhaAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclAccess().getGroup_0_0()); }
		(rule__FieldDecl__Group_0_0__0)
		{ after(grammarAccess.getFieldDeclAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFieldDeclAccess().getEmbeddedFieldAssignment_0_1()); }
		(rule__FieldDecl__EmbeddedFieldAssignment_0_1)
		{ after(grammarAccess.getFieldDeclAccess().getEmbeddedFieldAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultAccess().getParametersAssignment_0()); }
		(rule__Result__ParametersAssignment_0)
		{ after(grammarAccess.getResultAccess().getParametersAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getResultAccess().getTypeAssignment_1()); }
		(rule__Result__TypeAssignment_1)
		{ after(grammarAccess.getResultAccess().getTypeAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodSpecAccess().getGroup_0()); }
		(rule__MethodSpec__Group_0__0)
		{ after(grammarAccess.getMethodSpecAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMethodSpecAccess().getInterfaceTypeNameAssignment_1()); }
		(rule__MethodSpec__InterfaceTypeNameAssignment_1)
		{ after(grammarAccess.getMethodSpecAccess().getInterfaceTypeNameAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelTypeAccess().getGroup_0_0()); }
		(rule__ChannelType__Group_0_0__0)
		{ after(grammarAccess.getChannelTypeAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getChannelTypeAccess().getGroup_0_1()); }
		(rule__ChannelType__Group_0_1__0)
		{ after(grammarAccess.getChannelTypeAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelTypeLinha__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelTypeLinhaAccess().getLessThanSignHyphenMinusKeyword_0()); }
		'<-'
		{ after(grammarAccess.getChannelTypeLinhaAccess().getLessThanSignHyphenMinusKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getChannelTypeLinhaAccess().getANY_OTHERAssignment_1()); }
		(rule__ChannelTypeLinha__ANY_OTHERAssignment_1)
		{ after(grammarAccess.getChannelTypeLinhaAccess().getANY_OTHERAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getConstDeclAssignment_0()); }
		(rule__Declaration__ConstDeclAssignment_0)
		{ after(grammarAccess.getDeclarationAccess().getConstDeclAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getTypeDeclAssignment_1()); }
		(rule__Declaration__TypeDeclAssignment_1)
		{ after(grammarAccess.getDeclarationAccess().getTypeDeclAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getVarDeclAssignment_2()); }
		(rule__Declaration__VarDeclAssignment_2)
		{ after(grammarAccess.getDeclarationAccess().getVarDeclAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDecl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopLevelDeclAccess().getDeclarationAssignment_0()); }
		(rule__TopLevelDecl__DeclarationAssignment_0)
		{ after(grammarAccess.getTopLevelDeclAccess().getDeclarationAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTopLevelDeclAccess().getFunctionDeclAssignment_1()); }
		(rule__TopLevelDecl__FunctionDeclAssignment_1)
		{ after(grammarAccess.getTopLevelDeclAccess().getFunctionDeclAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTopLevelDeclAccess().getMethodDeclAssignment_2()); }
		(rule__TopLevelDecl__MethodDeclAssignment_2)
		{ after(grammarAccess.getTopLevelDeclAccess().getMethodDeclAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstDeclAccess().getConstSpecAssignment_1_0()); }
		(rule__ConstDecl__ConstSpecAssignment_1_0)
		{ after(grammarAccess.getConstDeclAccess().getConstSpecAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstDeclAccess().getGroup_1_1()); }
		(rule__ConstDecl__Group_1_1__0)
		{ after(grammarAccess.getConstDeclAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclAccess().getTypeSpecAssignment_1_0()); }
		(rule__TypeDecl__TypeSpecAssignment_1_0)
		{ after(grammarAccess.getTypeDeclAccess().getTypeSpecAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDeclAccess().getGroup_1_1()); }
		(rule__TypeDecl__Group_1_1__0)
		{ after(grammarAccess.getTypeDeclAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpec__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSpecAccess().getAliasDeclAssignment_0()); }
		(rule__TypeSpec__AliasDeclAssignment_0)
		{ after(grammarAccess.getTypeSpecAccess().getAliasDeclAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeSpecAccess().getTypeDefAssignment_1()); }
		(rule__TypeSpec__TypeDefAssignment_1)
		{ after(grammarAccess.getTypeSpecAccess().getTypeDefAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getVarSpecAssignment_1_0()); }
		(rule__VarDecl__VarSpecAssignment_1_0)
		{ after(grammarAccess.getVarDeclAccess().getVarSpecAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarDeclAccess().getGroup_1_1()); }
		(rule__VarDecl__Group_1_1__0)
		{ after(grammarAccess.getVarDeclAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarSpecAccess().getGroup_1_0()); }
		(rule__VarSpec__Group_1_0__0)
		{ after(grammarAccess.getVarSpecAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarSpecAccess().getGroup_1_1()); }
		(rule__VarSpec__Group_1_1__0)
		{ after(grammarAccess.getVarSpecAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getLiteralAssignment_0()); }
		(rule__Operand__LiteralAssignment_0)
		{ after(grammarAccess.getOperandAccess().getLiteralAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperandAccess().getOperandNameAssignment_1()); }
		(rule__Operand__OperandNameAssignment_1)
		{ after(grammarAccess.getOperandAccess().getOperandNameAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperandAccess().getGroup_2()); }
		(rule__Operand__Group_2__0)
		{ after(grammarAccess.getOperandAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getBasicLitAssignment_0()); }
		(rule__Literal__BasicLitAssignment_0)
		{ after(grammarAccess.getLiteralAccess().getBasicLitAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getCompositeLitAssignment_1()); }
		(rule__Literal__CompositeLitAssignment_1)
		{ after(grammarAccess.getLiteralAccess().getCompositeLitAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getFunctionLitAssignment_2()); }
		(rule__Literal__FunctionLitAssignment_2)
		{ after(grammarAccess.getLiteralAccess().getFunctionLitAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicLit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicLitAccess().getInt_litAssignment_0()); }
		(rule__BasicLit__Int_litAssignment_0)
		{ after(grammarAccess.getBasicLitAccess().getInt_litAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicLitAccess().getFloat_litAssignment_1()); }
		(rule__BasicLit__Float_litAssignment_1)
		{ after(grammarAccess.getBasicLitAccess().getFloat_litAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getBasicLitAccess().getImaginary_litAssignment_2()); }
		(rule__BasicLit__Imaginary_litAssignment_2)
		{ after(grammarAccess.getBasicLitAccess().getImaginary_litAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getBasicLitAccess().getRune_litAssignment_3()); }
		(rule__BasicLit__Rune_litAssignment_3)
		{ after(grammarAccess.getBasicLitAccess().getRune_litAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getBasicLitAccess().getString_litAssignment_4()); }
		(rule__BasicLit__String_litAssignment_4)
		{ after(grammarAccess.getBasicLitAccess().getString_litAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getStructTypeAssignment_0()); }
		(rule__LiteralType__StructTypeAssignment_0)
		{ after(grammarAccess.getLiteralTypeAccess().getStructTypeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getMapTypeAssignment_1()); }
		(rule__LiteralType__MapTypeAssignment_1)
		{ after(grammarAccess.getLiteralTypeAccess().getMapTypeAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getTypeNameAssignment_2()); }
		(rule__LiteralType__TypeNameAssignment_2)
		{ after(grammarAccess.getLiteralTypeAccess().getTypeNameAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getGroup_3()); }
		(rule__LiteralType__Group_3__0)
		{ after(grammarAccess.getLiteralTypeAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeLinhaAccess().getGroup_0()); }
		(rule__LiteralTypeLinha__Group_0__0)
		{ after(grammarAccess.getLiteralTypeLinhaAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeLinhaAccess().getGroup_1()); }
		(rule__LiteralTypeLinha__Group_1__0)
		{ after(grammarAccess.getLiteralTypeLinhaAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeLinhaAccess().getGroup_2()); }
		(rule__LiteralTypeLinha__Group_2__0)
		{ after(grammarAccess.getLiteralTypeLinhaAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyAccess().getFieldNameAssignment_0()); }
		(rule__Key__FieldNameAssignment_0)
		{ after(grammarAccess.getKeyAccess().getFieldNameAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getKeyAccess().getExpressionAssignment_1()); }
		(rule__Key__ExpressionAssignment_1)
		{ after(grammarAccess.getKeyAccess().getExpressionAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getKeyAccess().getLiteralValueAssignment_2()); }
		(rule__Key__LiteralValueAssignment_2)
		{ after(grammarAccess.getKeyAccess().getLiteralValueAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getExpressionAssignment_0()); }
		(rule__Element__ExpressionAssignment_0)
		{ after(grammarAccess.getElementAccess().getExpressionAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getLiteralValueAssignment_1()); }
		(rule__Element__LiteralValueAssignment_1)
		{ after(grammarAccess.getElementAccess().getLiteralValueAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getGroup_0()); }
		(rule__PrimaryExpr__Group_0__0)
		{ after(grammarAccess.getPrimaryExprAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getGroup_1()); }
		(rule__PrimaryExpr__Group_1__0)
		{ after(grammarAccess.getPrimaryExprAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getGroup_2()); }
		(rule__PrimaryExpr__Group_2__0)
		{ after(grammarAccess.getPrimaryExprAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getGroup_1_0()); }
		(rule__PrimaryExprLinha__Group_1_0__0)
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getGroup_1_1()); }
		(rule__PrimaryExprLinha__Group_1_1__0)
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getGroup_1_2()); }
		(rule__PrimaryExprLinha__Group_1_2__0)
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getGroup_1_3()); }
		(rule__PrimaryExprLinha__Group_1_3__0)
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getGroup_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getGroup_1_4()); }
		(rule__PrimaryExprLinha__Group_1_4__0)
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getGroup_1_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getGroup_1_0()); }
		(rule__Slice__Group_1_0__0)
		{ after(grammarAccess.getSliceAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSliceAccess().getGroup_1_1()); }
		(rule__Slice__Group_1_1__0)
		{ after(grammarAccess.getSliceAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Alternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getExpressionListAssignment_2_0_0()); }
		(rule__Arguments__ExpressionListAssignment_2_0_0)
		{ after(grammarAccess.getArgumentsAccess().getExpressionListAssignment_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgumentsAccess().getGroup_2_0_1()); }
		(rule__Arguments__Group_2_0_1__0)
		{ after(grammarAccess.getArgumentsAccess().getGroup_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getPrimaryExprAssignment_0()); }
		(rule__UnaryExpr__PrimaryExprAssignment_0)
		{ after(grammarAccess.getUnaryExprAccess().getPrimaryExprAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getGroup_1()); }
		(rule__UnaryExpr__Group_1__0)
		{ after(grammarAccess.getUnaryExprAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_OP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBINARY_OPAccess().getOrAssignment_0()); }
		(rule__BINARY_OP__OrAssignment_0)
		{ after(grammarAccess.getBINARY_OPAccess().getOrAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getBINARY_OPAccess().getAndAssignment_1()); }
		(rule__BINARY_OP__AndAssignment_1)
		{ after(grammarAccess.getBINARY_OPAccess().getAndAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getBINARY_OPAccess().getREL_OPAssignment_2()); }
		(rule__BINARY_OP__REL_OPAssignment_2)
		{ after(grammarAccess.getBINARY_OPAccess().getREL_OPAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getBINARY_OPAccess().getADD_OPAssignment_3()); }
		(rule__BINARY_OP__ADD_OPAssignment_3)
		{ after(grammarAccess.getBINARY_OPAccess().getADD_OPAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getBINARY_OPAccess().getMUL_OPAssignment_4()); }
		(rule__BINARY_OP__MUL_OPAssignment_4)
		{ after(grammarAccess.getBINARY_OPAccess().getMUL_OPAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getDeclarationAssignment_0()); }
		(rule__Statement__DeclarationAssignment_0)
		{ after(grammarAccess.getStatementAccess().getDeclarationAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getLabeledStmtAssignment_1()); }
		(rule__Statement__LabeledStmtAssignment_1)
		{ after(grammarAccess.getStatementAccess().getLabeledStmtAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSimpleStmtAssignment_2()); }
		(rule__Statement__SimpleStmtAssignment_2)
		{ after(grammarAccess.getStatementAccess().getSimpleStmtAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGoStmtAssignment_3()); }
		(rule__Statement__GoStmtAssignment_3)
		{ after(grammarAccess.getStatementAccess().getGoStmtAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getReturnStmtAssignment_4()); }
		(rule__Statement__ReturnStmtAssignment_4)
		{ after(grammarAccess.getStatementAccess().getReturnStmtAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getBreakStmtAssignment_5()); }
		(rule__Statement__BreakStmtAssignment_5)
		{ after(grammarAccess.getStatementAccess().getBreakStmtAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getContinueStmtAssignment_6()); }
		(rule__Statement__ContinueStmtAssignment_6)
		{ after(grammarAccess.getStatementAccess().getContinueStmtAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGotoStmtAssignment_7()); }
		(rule__Statement__GotoStmtAssignment_7)
		{ after(grammarAccess.getStatementAccess().getGotoStmtAssignment_7()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getFallthroughStmtAssignment_8()); }
		(rule__Statement__FallthroughStmtAssignment_8)
		{ after(grammarAccess.getStatementAccess().getFallthroughStmtAssignment_8()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getBlockAssignment_9()); }
		(rule__Statement__BlockAssignment_9)
		{ after(grammarAccess.getStatementAccess().getBlockAssignment_9()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIfStmtAssignment_10()); }
		(rule__Statement__IfStmtAssignment_10)
		{ after(grammarAccess.getStatementAccess().getIfStmtAssignment_10()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSwitchStmtAssignment_11()); }
		(rule__Statement__SwitchStmtAssignment_11)
		{ after(grammarAccess.getStatementAccess().getSwitchStmtAssignment_11()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSelectStmtAssignment_12()); }
		(rule__Statement__SelectStmtAssignment_12)
		{ after(grammarAccess.getStatementAccess().getSelectStmtAssignment_12()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getForStmtAssignment_13()); }
		(rule__Statement__ForStmtAssignment_13)
		{ after(grammarAccess.getStatementAccess().getForStmtAssignment_13()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDeferStmtAssignment_14()); }
		(rule__Statement__DeferStmtAssignment_14)
		{ after(grammarAccess.getStatementAccess().getDeferStmtAssignment_14()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getEmptyStmtAssignment_0()); }
		(rule__SimpleStmt__EmptyStmtAssignment_0)
		{ after(grammarAccess.getSimpleStmtAccess().getEmptyStmtAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStmtAccess().getGroup_1()); }
		(rule__SimpleStmt__Group_1__0)
		{ after(grammarAccess.getSimpleStmtAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStmtAccess().getShortVarDeclAssignment_2()); }
		(rule__SimpleStmt__ShortVarDeclAssignment_2)
		{ after(grammarAccess.getSimpleStmtAccess().getShortVarDeclAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmtLinha__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtLinhaAccess().getGroup_0()); }
		(rule__SimpleStmtLinha__Group_0__0)
		{ after(grammarAccess.getSimpleStmtLinhaAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStmtLinhaAccess().getAlternatives_1()); }
		(rule__SimpleStmtLinha__Alternatives_1)
		{ after(grammarAccess.getSimpleStmtLinhaAccess().getAlternatives_1()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStmtLinhaAccess().getGroup_2()); }
		(rule__SimpleStmtLinha__Group_2__0)
		{ after(grammarAccess.getSimpleStmtLinhaAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStmtLinhaAccess().getANY_OTHERAssignment_3()); }
		(rule__SimpleStmtLinha__ANY_OTHERAssignment_3)
		{ after(grammarAccess.getSimpleStmtLinhaAccess().getANY_OTHERAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmtLinha__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtLinhaAccess().getPlusSignPlusSignKeyword_1_0()); }
		'++'
		{ after(grammarAccess.getSimpleStmtLinhaAccess().getPlusSignPlusSignKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStmtLinhaAccess().getHyphenMinusHyphenMinusKeyword_1_1()); }
		'--'
		{ after(grammarAccess.getSimpleStmtLinhaAccess().getHyphenMinusHyphenMinusKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign_op__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssign_opAccess().getADD_OPAssignment_0_0()); }
		(rule__Assign_op__ADD_OPAssignment_0_0)
		{ after(grammarAccess.getAssign_opAccess().getADD_OPAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssign_opAccess().getMUL_OPAssignment_0_1()); }
		(rule__Assign_op__MUL_OPAssignment_0_1)
		{ after(grammarAccess.getAssign_opAccess().getMUL_OPAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getGroup_0()); }
		(rule__IfStmt__Group_0__0)
		{ after(grammarAccess.getIfStmtAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getIfStmtAccess().getGroup_1()); }
		(rule__IfStmt__Group_1__0)
		{ after(grammarAccess.getIfStmtAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Alternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getEmptyStmtAssignment_1_1_0_0()); }
		(rule__IfStmt__EmptyStmtAssignment_1_1_0_0)
		{ after(grammarAccess.getIfStmtAccess().getEmptyStmtAssignment_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getIfStmtAccess().getShortVarDeclAssignment_1_1_0_1()); }
		(rule__IfStmt__ShortVarDeclAssignment_1_1_0_1)
		{ after(grammarAccess.getIfStmtAccess().getShortVarDeclAssignment_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Alternatives_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getIfStmtAssignment_1_4_1_0()); }
		(rule__IfStmt__IfStmtAssignment_1_4_1_0)
		{ after(grammarAccess.getIfStmtAccess().getIfStmtAssignment_1_4_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getIfStmtAccess().getBlock1Assignment_1_4_1_1()); }
		(rule__IfStmt__Block1Assignment_1_4_1_1)
		{ after(grammarAccess.getIfStmtAccess().getBlock1Assignment_1_4_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtLinhaAccess().getGroup_0()); }
		(rule__IfStmtLinha__Group_0__0)
		{ after(grammarAccess.getIfStmtLinhaAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getIfStmtLinhaAccess().getGroup_1()); }
		(rule__IfStmtLinha__Group_1__0)
		{ after(grammarAccess.getIfStmtLinhaAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__Alternatives_0_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtLinhaAccess().getIfStmtAssignment_0_4_1_0()); }
		(rule__IfStmtLinha__IfStmtAssignment_0_4_1_0)
		{ after(grammarAccess.getIfStmtLinhaAccess().getIfStmtAssignment_0_4_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getIfStmtLinhaAccess().getBlock1Assignment_0_4_1_1()); }
		(rule__IfStmtLinha__Block1Assignment_0_4_1_1)
		{ after(grammarAccess.getIfStmtLinhaAccess().getBlock1Assignment_0_4_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__Alternatives_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtLinhaAccess().getIfStmtAssignment_1_1_1_0()); }
		(rule__IfStmtLinha__IfStmtAssignment_1_1_1_0)
		{ after(grammarAccess.getIfStmtLinhaAccess().getIfStmtAssignment_1_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getIfStmtLinhaAccess().getBlock1Assignment_1_1_1_1()); }
		(rule__IfStmtLinha__Block1Assignment_1_1_1_1)
		{ after(grammarAccess.getIfStmtLinhaAccess().getBlock1Assignment_1_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStmtLinhaAccess().getGroup_0()); }
		(rule__SwitchStmtLinha__Group_0__0)
		{ after(grammarAccess.getSwitchStmtLinhaAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSwitchStmtLinhaAccess().getGroup_1()); }
		(rule__SwitchStmtLinha__Group_1__0)
		{ after(grammarAccess.getSwitchStmtLinhaAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getSwitchStmtLinhaAccess().getGroup_2()); }
		(rule__SwitchStmtLinha__Group_2__0)
		{ after(grammarAccess.getSwitchStmtLinhaAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinhaLinha__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStmtLinhaLinhaAccess().getGroup_0()); }
		(rule__SwitchStmtLinhaLinha__Group_0__0)
		{ after(grammarAccess.getSwitchStmtLinhaLinhaAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSwitchStmtLinhaLinhaAccess().getGroup_1()); }
		(rule__SwitchStmtLinhaLinha__Group_1__0)
		{ after(grammarAccess.getSwitchStmtLinhaLinhaAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSwitchCaseAccess().getGroup_0()); }
		(rule__ExprSwitchCase__Group_0__0)
		{ after(grammarAccess.getExprSwitchCaseAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprSwitchCaseAccess().getDefaultAssignment_1()); }
		(rule__ExprSwitchCase__DefaultAssignment_1)
		{ after(grammarAccess.getExprSwitchCaseAccess().getDefaultAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSwitchCaseAccess().getGroup_0()); }
		(rule__TypeSwitchCase__Group_0__0)
		{ after(grammarAccess.getTypeSwitchCaseAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeSwitchCaseAccess().getDefaultAssignment_1()); }
		(rule__TypeSwitchCase__DefaultAssignment_1)
		{ after(grammarAccess.getTypeSwitchCaseAccess().getDefaultAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getGroup_1_0()); }
		(rule__ForStmt__Group_1_0__0)
		{ after(grammarAccess.getForStmtAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getForStmtAccess().getGroup_1_1()); }
		(rule__ForStmt__Group_1_1__0)
		{ after(grammarAccess.getForStmtAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getForStmtAccess().getGroup_1_2()); }
		(rule__ForStmt__Group_1_2__0)
		{ after(grammarAccess.getForStmtAccess().getGroup_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Alternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getEmptyStmtAssignment_1_1_0_0()); }
		(rule__ForStmt__EmptyStmtAssignment_1_1_0_0)
		{ after(grammarAccess.getForStmtAccess().getEmptyStmtAssignment_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getForStmtAccess().getShortVarDeclAssignment_1_1_0_1()); }
		(rule__ForStmt__ShortVarDeclAssignment_1_1_0_1)
		{ after(grammarAccess.getForStmtAccess().getShortVarDeclAssignment_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtLinhaAccess().getVazioAssignment_0()); }
		(rule__ForStmtLinha__VazioAssignment_0)
		{ after(grammarAccess.getForStmtLinhaAccess().getVazioAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getForStmtLinhaAccess().getGroup_1()); }
		(rule__ForStmtLinha__Group_1__0)
		{ after(grammarAccess.getForStmtLinhaAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getForStmtLinhaAccess().getGroup_2()); }
		(rule__ForStmtLinha__Group_2__0)
		{ after(grammarAccess.getForStmtLinhaAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__Alternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtLinhaAccess().getGroup_2_0_0()); }
		(rule__ForStmtLinha__Group_2_0_0__0)
		{ after(grammarAccess.getForStmtLinhaAccess().getGroup_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getForStmtLinhaAccess().getAlternatives_2_0_1()); }
		(rule__ForStmtLinha__Alternatives_2_0_1)
		{ after(grammarAccess.getForStmtLinhaAccess().getAlternatives_2_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getForStmtLinhaAccess().getVazioAssignment_2_0_2()); }
		(rule__ForStmtLinha__VazioAssignment_2_0_2)
		{ after(grammarAccess.getForStmtLinhaAccess().getVazioAssignment_2_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__Alternatives_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtLinhaAccess().getPlusSignPlusSignKeyword_2_0_1_0()); }
		'++'
		{ after(grammarAccess.getForStmtLinhaAccess().getPlusSignPlusSignKeyword_2_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getForStmtLinhaAccess().getHyphenMinusHyphenMinusKeyword_2_0_1_1()); }
		'--'
		{ after(grammarAccess.getForStmtLinhaAccess().getHyphenMinusHyphenMinusKeyword_2_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinhaLinha__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtLinhaLinhaAccess().getGroup_0()); }
		(rule__ForStmtLinhaLinha__Group_0__0)
		{ after(grammarAccess.getForStmtLinhaLinhaAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getForStmtLinhaLinhaAccess().getGroup_1()); }
		(rule__ForStmtLinhaLinha__Group_1__0)
		{ after(grammarAccess.getForStmtLinhaLinhaAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommCaseAccess().getGroup_0()); }
		(rule__CommCase__Group_0__0)
		{ after(grammarAccess.getCommCaseAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommCaseAccess().getDefaultAssignment_1()); }
		(rule__CommCase__DefaultAssignment_1)
		{ after(grammarAccess.getCommCaseAccess().getDefaultAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCaseLinha__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommCaseLinhaAccess().getGroup_0()); }
		(rule__CommCaseLinha__Group_0__0)
		{ after(grammarAccess.getCommCaseLinhaAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommCaseLinhaAccess().getGroup_1()); }
		(rule__CommCaseLinha__Group_1__0)
		{ after(grammarAccess.getCommCaseLinhaAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCaseLinha__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommCaseLinhaAccess().getGroup_1_0_0()); }
		(rule__CommCaseLinha__Group_1_0_0__0)
		{ after(grammarAccess.getCommCaseLinhaAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommCaseLinhaAccess().getGroup_1_0_1()); }
		(rule__CommCaseLinha__Group_1_0_1__0)
		{ after(grammarAccess.getCommCaseLinhaAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDeclAccess().getImportSpecAssignment_1_0()); }
		(rule__ImportDecl__ImportSpecAssignment_1_0)
		{ after(grammarAccess.getImportDeclAccess().getImportSpecAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportDeclAccess().getGroup_1_1()); }
		(rule__ImportDecl__Group_1_1__0)
		{ after(grammarAccess.getImportDeclAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportSpec__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportSpecAccess().getFullStopKeyword_0_0()); }
		'.'
		{ after(grammarAccess.getImportSpecAccess().getFullStopKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportSpecAccess().getPackageNameAssignment_0_1()); }
		(rule__ImportSpec__PackageNameAssignment_0_1)
		{ after(grammarAccess.getImportSpecAccess().getPackageNameAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LIT__Group_0__0__Impl
	rule__FLOAT_LIT__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITAccess().getDECIMALSAssignment_0_0()); }
	(rule__FLOAT_LIT__DECIMALSAssignment_0_0)
	{ after(grammarAccess.getFLOAT_LITAccess().getDECIMALSAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LIT__Group_0__1__Impl
	rule__FLOAT_LIT__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITAccess().getFullStopKeyword_0_1()); }
	'.'
	{ after(grammarAccess.getFLOAT_LITAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LIT__Group_0__2__Impl
	rule__FLOAT_LIT__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITAccess().getDECIMALS1Assignment_0_2()); }
	(rule__FLOAT_LIT__DECIMALS1Assignment_0_2)?
	{ after(grammarAccess.getFLOAT_LITAccess().getDECIMALS1Assignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LIT__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITAccess().getEXPONENTAssignment_0_3()); }
	(rule__FLOAT_LIT__EXPONENTAssignment_0_3)?
	{ after(grammarAccess.getFLOAT_LITAccess().getEXPONENTAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT_LIT__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LIT__Group_1__0__Impl
	rule__FLOAT_LIT__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITAccess().getDECIMALSAssignment_1_0()); }
	(rule__FLOAT_LIT__DECIMALSAssignment_1_0)
	{ after(grammarAccess.getFLOAT_LITAccess().getDECIMALSAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LIT__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITAccess().getEXPONENTAssignment_1_1()); }
	(rule__FLOAT_LIT__EXPONENTAssignment_1_1)
	{ after(grammarAccess.getFLOAT_LITAccess().getEXPONENTAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT_LIT__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LIT__Group_2__0__Impl
	rule__FLOAT_LIT__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITAccess().getFullStopKeyword_2_0()); }
	'.'
	{ after(grammarAccess.getFLOAT_LITAccess().getFullStopKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LIT__Group_2__1__Impl
	rule__FLOAT_LIT__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITAccess().getDECIMALSAssignment_2_1()); }
	(rule__FLOAT_LIT__DECIMALSAssignment_2_1)
	{ after(grammarAccess.getFLOAT_LITAccess().getDECIMALSAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT_LIT__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOAT_LITAccess().getEXPONENTAssignment_2_2()); }
	(rule__FLOAT_LIT__EXPONENTAssignment_2_2)?
	{ after(grammarAccess.getFLOAT_LITAccess().getEXPONENTAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IMAGINARY_LIT__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IMAGINARY_LIT__Group__0__Impl
	rule__IMAGINARY_LIT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IMAGINARY_LIT__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIMAGINARY_LITAccess().getAlternatives_0()); }
	(rule__IMAGINARY_LIT__Alternatives_0)
	{ after(grammarAccess.getIMAGINARY_LITAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IMAGINARY_LIT__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IMAGINARY_LIT__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IMAGINARY_LIT__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIMAGINARY_LITAccess().getIKeyword_1()); }
	'i'
	{ after(grammarAccess.getIMAGINARY_LITAccess().getIKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__0__Impl
	rule__Type__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__1__Impl
	rule__Type__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeAssignment_2_1()); }
	(rule__Type__TypeAssignment_2_1)
	{ after(grammarAccess.getTypeAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeLit__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLit__Group_0__0__Impl
	rule__TypeLit__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLitAccess().getLeftSquareBracketKeyword_0_0()); }
	'['
	{ after(grammarAccess.getTypeLitAccess().getLeftSquareBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLit__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLitAccess().getTypeLitLinhaAssignment_0_1()); }
	(rule__TypeLit__TypeLitLinhaAssignment_0_1)
	{ after(grammarAccess.getTypeLitAccess().getTypeLitLinhaAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeLitLinha__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLitLinha__Group_0__0__Impl
	rule__TypeLitLinha__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLitLinhaAccess().getArrayLengthAssignment_0_0()); }
	(rule__TypeLitLinha__ArrayLengthAssignment_0_0)
	{ after(grammarAccess.getTypeLitLinhaAccess().getArrayLengthAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLitLinha__Group_0__1__Impl
	rule__TypeLitLinha__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLitLinhaAccess().getRightSquareBracketKeyword_0_1()); }
	']'
	{ after(grammarAccess.getTypeLitLinhaAccess().getRightSquareBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLitLinha__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLitLinhaAccess().getElementTypeAssignment_0_2()); }
	(rule__TypeLitLinha__ElementTypeAssignment_0_2)
	{ after(grammarAccess.getTypeLitLinhaAccess().getElementTypeAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeLitLinha__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLitLinha__Group_1__0__Impl
	rule__TypeLitLinha__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLitLinhaAccess().getRightSquareBracketKeyword_1_0()); }
	']'
	{ after(grammarAccess.getTypeLitLinhaAccess().getRightSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLitLinha__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLitLinhaAccess().getElementTypeAssignment_1_1()); }
	(rule__TypeLitLinha__ElementTypeAssignment_1_1)
	{ after(grammarAccess.getTypeLitLinhaAccess().getElementTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group__0__Impl
	rule__StructType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getStructAssignment_0()); }
	(rule__StructType__StructAssignment_0)
	{ after(grammarAccess.getStructTypeAccess().getStructAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group__1__Impl
	rule__StructType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group__2__Impl
	rule__StructType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getFieldDeclAssignment_2()); }
	(rule__StructType__FieldDeclAssignment_2)*
	{ after(grammarAccess.getStructTypeAccess().getFieldDeclAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDecl__Group__0__Impl
	rule__FieldDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclAccess().getAlternatives_0()); }
	(rule__FieldDecl__Alternatives_0)
	{ after(grammarAccess.getFieldDeclAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclAccess().getTagAssignment_1()); }
	(rule__FieldDecl__TagAssignment_1)?
	{ after(grammarAccess.getFieldDeclAccess().getTagAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDecl__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDecl__Group_0_0__0__Impl
	rule__FieldDecl__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclAccess().getIdentifierListAssignment_0_0_0()); }
	(rule__FieldDecl__IdentifierListAssignment_0_0_0)
	{ after(grammarAccess.getFieldDeclAccess().getIdentifierListAssignment_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDecl__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclAccess().getTypeAssignment_0_0_1()); }
	(rule__FieldDecl__TypeAssignment_0_0_1)
	{ after(grammarAccess.getFieldDeclAccess().getTypeAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EmbeddedField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmbeddedField__Group__0__Impl
	rule__EmbeddedField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmbeddedFieldAccess().getAsteriskKeyword_0()); }
	('*')?
	{ after(grammarAccess.getEmbeddedFieldAccess().getAsteriskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmbeddedField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmbeddedFieldAccess().getTypeNameAssignment_1()); }
	(rule__EmbeddedField__TypeNameAssignment_1)
	{ after(grammarAccess.getEmbeddedFieldAccess().getTypeNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PointerType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointerType__Group__0__Impl
	rule__PointerType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0()); }
	'*'
	{ after(grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointerType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerTypeAccess().getBaseTypeAssignment_1()); }
	(rule__PointerType__BaseTypeAssignment_1)
	{ after(grammarAccess.getPointerTypeAccess().getBaseTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionType__Group__0__Impl
	rule__FunctionType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTypeAccess().getFuncAssignment_0()); }
	(rule__FunctionType__FuncAssignment_0)
	{ after(grammarAccess.getFunctionTypeAccess().getFuncAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTypeAccess().getSignatureAssignment_1()); }
	(rule__FunctionType__SignatureAssignment_1)
	{ after(grammarAccess.getFunctionTypeAccess().getSignatureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__0__Impl
	rule__Signature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getParametersAssignment_0()); }
	(rule__Signature__ParametersAssignment_0)
	{ after(grammarAccess.getSignatureAccess().getParametersAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getResultAssignment_1()); }
	(rule__Signature__ResultAssignment_1)?
	{ after(grammarAccess.getSignatureAccess().getResultAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__0__Impl
	rule__Parameters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getParametersAction_0()); }
	()
	{ after(grammarAccess.getParametersAccess().getParametersAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__1__Impl
	rule__Parameters__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getParametersAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__2__Impl
	rule__Parameters__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getParameterListAssignment_2()); }
	(rule__Parameters__ParameterListAssignment_2)?
	{ after(grammarAccess.getParametersAccess().getParameterListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getParametersAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__0__Impl
	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParameterDeclAssignment_0()); }
	(rule__ParameterList__ParameterDeclAssignment_0)
	{ after(grammarAccess.getParameterListAccess().getParameterDeclAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_1()); }
	(rule__ParameterList__Group_1__0)*
	{ after(grammarAccess.getParameterListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__0__Impl
	rule__ParameterList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParameterDecl1Assignment_1_1()); }
	(rule__ParameterList__ParameterDecl1Assignment_1_1)
	{ after(grammarAccess.getParameterListAccess().getParameterDecl1Assignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDecl__Group__0__Impl
	rule__ParameterDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclAccess().getIdentifierListAssignment_0()); }
	(rule__ParameterDecl__IdentifierListAssignment_0)?
	{ after(grammarAccess.getParameterDeclAccess().getIdentifierListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDecl__Group__1__Impl
	rule__ParameterDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1()); }
	('...')?
	{ after(grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclAccess().getTypeAssignment_2()); }
	(rule__ParameterDecl__TypeAssignment_2)
	{ after(grammarAccess.getParameterDeclAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group__0__Impl
	rule__InterfaceType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getInterfaceAssignment_0()); }
	(rule__InterfaceType__InterfaceAssignment_0)
	{ after(grammarAccess.getInterfaceTypeAccess().getInterfaceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group__1__Impl
	rule__InterfaceType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group__2__Impl
	rule__InterfaceType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getMethodSpecAssignment_2()); }
	(rule__InterfaceType__MethodSpecAssignment_2)*
	{ after(grammarAccess.getInterfaceTypeAccess().getMethodSpecAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodSpec__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodSpec__Group_0__0__Impl
	rule__MethodSpec__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodSpecAccess().getMethodNameAssignment_0_0()); }
	(rule__MethodSpec__MethodNameAssignment_0_0)
	{ after(grammarAccess.getMethodSpecAccess().getMethodNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodSpec__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodSpecAccess().getSignatureAssignment_0_1()); }
	(rule__MethodSpec__SignatureAssignment_0_1)
	{ after(grammarAccess.getMethodSpecAccess().getSignatureAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__0__Impl
	rule__MapType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getMapAssignment_0()); }
	(rule__MapType__MapAssignment_0)
	{ after(grammarAccess.getMapTypeAccess().getMapAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__1__Impl
	rule__MapType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__2__Impl
	rule__MapType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getKeyTypeAssignment_2()); }
	(rule__MapType__KeyTypeAssignment_2)
	{ after(grammarAccess.getMapTypeAccess().getKeyTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__3__Impl
	rule__MapType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getElementTypeAssignment_4()); }
	(rule__MapType__ElementTypeAssignment_4)
	{ after(grammarAccess.getMapTypeAccess().getElementTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group__0__Impl
	rule__ChannelType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getAlternatives_0()); }
	(rule__ChannelType__Alternatives_0)
	{ after(grammarAccess.getChannelTypeAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getElementTypeAssignment_1()); }
	(rule__ChannelType__ElementTypeAssignment_1)
	{ after(grammarAccess.getChannelTypeAccess().getElementTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelType__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group_0_0__0__Impl
	rule__ChannelType__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getChanAssignment_0_0_0()); }
	(rule__ChannelType__ChanAssignment_0_0_0)
	{ after(grammarAccess.getChannelTypeAccess().getChanAssignment_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getChannelTypeLinhaAssignment_0_0_1()); }
	(rule__ChannelType__ChannelTypeLinhaAssignment_0_0_1)
	{ after(grammarAccess.getChannelTypeAccess().getChannelTypeLinhaAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelType__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group_0_1__0__Impl
	rule__ChannelType__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_0()); }
	'<-'
	{ after(grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getChanAssignment_0_1_1()); }
	(rule__ChannelType__ChanAssignment_0_1_1)
	{ after(grammarAccess.getChannelTypeAccess().getChanAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getStatementListAssignment_1()); }
	(rule__Block__StatementListAssignment_1)
	{ after(grammarAccess.getBlockAccess().getStatementListAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group__0__Impl
	rule__StatementList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getStatementListAction_0()); }
	()
	{ after(grammarAccess.getStatementListAccess().getStatementListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getGroup_1()); }
	(rule__StatementList__Group_1__0)*
	{ after(grammarAccess.getStatementListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group_1__0__Impl
	rule__StatementList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getStatementsAssignment_1_0()); }
	(rule__StatementList__StatementsAssignment_1_0)
	{ after(grammarAccess.getStatementListAccess().getStatementsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getStatementListAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group__0__Impl
	rule__ConstDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getConstAssignment_0()); }
	(rule__ConstDecl__ConstAssignment_0)
	{ after(grammarAccess.getConstDeclAccess().getConstAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getAlternatives_1()); }
	(rule__ConstDecl__Alternatives_1)
	{ after(grammarAccess.getConstDeclAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstDecl__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group_1_1__0__Impl
	rule__ConstDecl__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_1_1_0()); }
	'('
	{ after(grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group_1_1__1__Impl
	rule__ConstDecl__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getConstSpec1Assignment_1_1_1()); }
	(rule__ConstDecl__ConstSpec1Assignment_1_1_1)*
	{ after(grammarAccess.getConstDeclAccess().getConstSpec1Assignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_1_1_2()); }
	')'
	{ after(grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group__0__Impl
	rule__ConstSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getIdentifierListAssignment_0()); }
	(rule__ConstSpec__IdentifierListAssignment_0)
	{ after(grammarAccess.getConstSpecAccess().getIdentifierListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getGroup_1()); }
	(rule__ConstSpec__Group_1__0)?
	{ after(grammarAccess.getConstSpecAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstSpec__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group_1__0__Impl
	rule__ConstSpec__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getTypeAssignment_1_0()); }
	(rule__ConstSpec__TypeAssignment_1_0)?
	{ after(grammarAccess.getConstSpecAccess().getTypeAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group_1__1__Impl
	rule__ConstSpec__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getEqualsSignKeyword_1_1()); }
	'='
	{ after(grammarAccess.getConstSpecAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getExpressionListAssignment_1_2()); }
	(rule__ConstSpec__ExpressionListAssignment_1_2)
	{ after(grammarAccess.getConstSpecAccess().getExpressionListAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group__0__Impl
	rule__IdentifierList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getIdAssignment_0()); }
	(rule__IdentifierList__IdAssignment_0)
	{ after(grammarAccess.getIdentifierListAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getGroup_1()); }
	(rule__IdentifierList__Group_1__0)*
	{ after(grammarAccess.getIdentifierListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group_1__0__Impl
	rule__IdentifierList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getIdentifierListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getId1Assignment_1_1()); }
	(rule__IdentifierList__Id1Assignment_1_1)
	{ after(grammarAccess.getIdentifierListAccess().getId1Assignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group__0__Impl
	rule__ExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getExpressionAssignment_0()); }
	(rule__ExpressionList__ExpressionAssignment_0)
	{ after(grammarAccess.getExpressionListAccess().getExpressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getGroup_1()); }
	(rule__ExpressionList__Group_1__0)*
	{ after(grammarAccess.getExpressionListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group_1__0__Impl
	rule__ExpressionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getExpression1Assignment_1_1()); }
	(rule__ExpressionList__Expression1Assignment_1_1)
	{ after(grammarAccess.getExpressionListAccess().getExpression1Assignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group__0__Impl
	rule__TypeDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getTypekeywordAssignment_0()); }
	(rule__TypeDecl__TypekeywordAssignment_0)
	{ after(grammarAccess.getTypeDeclAccess().getTypekeywordAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getAlternatives_1()); }
	(rule__TypeDecl__Alternatives_1)
	{ after(grammarAccess.getTypeDeclAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group_1_1__0__Impl
	rule__TypeDecl__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_1_1_0()); }
	'('
	{ after(grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group_1_1__1__Impl
	rule__TypeDecl__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getTypeSpec1Assignment_1_1_1()); }
	(rule__TypeDecl__TypeSpec1Assignment_1_1_1)*
	{ after(grammarAccess.getTypeDeclAccess().getTypeSpec1Assignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_1_1_2()); }
	')'
	{ after(grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AliasDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AliasDecl__Group__0__Impl
	rule__AliasDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAliasDeclAccess().getIdAssignment_0()); }
	(rule__AliasDecl__IdAssignment_0)
	{ after(grammarAccess.getAliasDeclAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AliasDecl__Group__1__Impl
	rule__AliasDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AliasDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAliasDeclAccess().getTypeAssignment_2()); }
	(rule__AliasDecl__TypeAssignment_2)
	{ after(grammarAccess.getAliasDeclAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__0__Impl
	rule__TypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getIdAssignment_0()); }
	(rule__TypeDef__IdAssignment_0)
	{ after(grammarAccess.getTypeDefAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getTypeAssignment_1()); }
	(rule__TypeDef__TypeAssignment_1)
	{ after(grammarAccess.getTypeDefAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__0__Impl
	rule__VarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getVARTerminalRuleCall_0()); }
	RULE_VAR
	{ after(grammarAccess.getVarDeclAccess().getVARTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getAlternatives_1()); }
	(rule__VarDecl__Alternatives_1)
	{ after(grammarAccess.getVarDeclAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_1_1__0__Impl
	rule__VarDecl__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_1_1_0()); }
	'('
	{ after(grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_1_1__1__Impl
	rule__VarDecl__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getVarSpec1Assignment_1_1_1()); }
	(rule__VarDecl__VarSpec1Assignment_1_1_1)*
	{ after(grammarAccess.getVarDeclAccess().getVarSpec1Assignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_1_1_2()); }
	')'
	{ after(grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group__0__Impl
	rule__VarSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getIdentifierListAssignment_0()); }
	(rule__VarSpec__IdentifierListAssignment_0)
	{ after(grammarAccess.getVarSpecAccess().getIdentifierListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getAlternatives_1()); }
	(rule__VarSpec__Alternatives_1)
	{ after(grammarAccess.getVarSpecAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarSpec__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_0__0__Impl
	rule__VarSpec__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getTypeAssignment_1_0_0()); }
	(rule__VarSpec__TypeAssignment_1_0_0)
	{ after(grammarAccess.getVarSpecAccess().getTypeAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getGroup_1_0_1()); }
	(rule__VarSpec__Group_1_0_1__0)?
	{ after(grammarAccess.getVarSpecAccess().getGroup_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarSpec__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_0_1__0__Impl
	rule__VarSpec__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_0_1_0()); }
	'='
	{ after(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getExpressionListAssignment_1_0_1_1()); }
	(rule__VarSpec__ExpressionListAssignment_1_0_1_1)
	{ after(grammarAccess.getVarSpecAccess().getExpressionListAssignment_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarSpec__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_1__0__Impl
	rule__VarSpec__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_1_0()); }
	'='
	{ after(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getExpressionListAssignment_1_1_1()); }
	(rule__VarSpec__ExpressionListAssignment_1_1_1)
	{ after(grammarAccess.getVarSpecAccess().getExpressionListAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShortVarDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortVarDecl__Group__0__Impl
	rule__ShortVarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortVarDeclAccess().getIdentifierListAssignment_0()); }
	(rule__ShortVarDecl__IdentifierListAssignment_0)
	{ after(grammarAccess.getShortVarDeclAccess().getIdentifierListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortVarDecl__Group__1__Impl
	rule__ShortVarDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortVarDeclAccess().getColonEqualsSignKeyword_1()); }
	':='
	{ after(grammarAccess.getShortVarDeclAccess().getColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortVarDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortVarDeclAccess().getExpressionListAssignment_2()); }
	(rule__ShortVarDecl__ExpressionListAssignment_2)
	{ after(grammarAccess.getShortVarDeclAccess().getExpressionListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDecl__Group__0__Impl
	rule__FunctionDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getFunctionDeclAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDecl__Group__1__Impl
	rule__FunctionDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclAccess().getFunctionNameAssignment_1()); }
	(rule__FunctionDecl__FunctionNameAssignment_1)
	{ after(grammarAccess.getFunctionDeclAccess().getFunctionNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDecl__Group__2__Impl
	rule__FunctionDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclAccess().getSignatureAssignment_2()); }
	(rule__FunctionDecl__SignatureAssignment_2)
	{ after(grammarAccess.getFunctionDeclAccess().getSignatureAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDecl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclAccess().getFunctionBodyAssignment_3()); }
	(rule__FunctionDecl__FunctionBodyAssignment_3)?
	{ after(grammarAccess.getFunctionDeclAccess().getFunctionBodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__0__Impl
	rule__MethodDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getMethodDeclAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__1__Impl
	rule__MethodDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getReceiverAssignment_1()); }
	(rule__MethodDecl__ReceiverAssignment_1)
	{ after(grammarAccess.getMethodDeclAccess().getReceiverAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__2__Impl
	rule__MethodDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getMethodNameAssignment_2()); }
	(rule__MethodDecl__MethodNameAssignment_2)
	{ after(grammarAccess.getMethodDeclAccess().getMethodNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__3__Impl
	rule__MethodDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getSignatureAssignment_3()); }
	(rule__MethodDecl__SignatureAssignment_3)
	{ after(grammarAccess.getMethodDeclAccess().getSignatureAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getFunctionBodyAssignment_4()); }
	(rule__MethodDecl__FunctionBodyAssignment_4)?
	{ after(grammarAccess.getMethodDeclAccess().getFunctionBodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operand__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_2__0__Impl
	rule__Operand__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getOperandAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_2__1__Impl
	rule__Operand__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getExpressionAssignment_2_1()); }
	(rule__Operand__ExpressionAssignment_2_1)
	{ after(grammarAccess.getOperandAccess().getExpressionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getOperandAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeLit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeLit__Group__0__Impl
	rule__CompositeLit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeLitAccess().getLiteralTypeAssignment_0()); }
	(rule__CompositeLit__LiteralTypeAssignment_0)
	{ after(grammarAccess.getCompositeLitAccess().getLiteralTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeLit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeLitAccess().getLiteralValueAssignment_1()); }
	(rule__CompositeLit__LiteralValueAssignment_1)
	{ after(grammarAccess.getCompositeLitAccess().getLiteralValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralType__Group_3__0__Impl
	rule__LiteralType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_3_0()); }
	'['
	{ after(grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeAccess().getLiteralTypeLinhaAssignment_3_1()); }
	(rule__LiteralType__LiteralTypeLinhaAssignment_3_1)
	{ after(grammarAccess.getLiteralTypeAccess().getLiteralTypeLinhaAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTypeLinha__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralTypeLinha__Group_0__0__Impl
	rule__LiteralTypeLinha__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeLinhaAccess().getArrayLengthAssignment_0_0()); }
	(rule__LiteralTypeLinha__ArrayLengthAssignment_0_0)
	{ after(grammarAccess.getLiteralTypeLinhaAccess().getArrayLengthAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralTypeLinha__Group_0__1__Impl
	rule__LiteralTypeLinha__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_0_1()); }
	']'
	{ after(grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralTypeLinha__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeAssignment_0_2()); }
	(rule__LiteralTypeLinha__ElementTypeAssignment_0_2)
	{ after(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTypeLinha__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralTypeLinha__Group_1__0__Impl
	rule__LiteralTypeLinha__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeLinhaAccess().getFullStopFullStopFullStopKeyword_1_0()); }
	'...'
	{ after(grammarAccess.getLiteralTypeLinhaAccess().getFullStopFullStopFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralTypeLinha__Group_1__1__Impl
	rule__LiteralTypeLinha__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_1_1()); }
	']'
	{ after(grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralTypeLinha__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeAssignment_1_2()); }
	(rule__LiteralTypeLinha__ElementTypeAssignment_1_2)
	{ after(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTypeLinha__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralTypeLinha__Group_2__0__Impl
	rule__LiteralTypeLinha__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_2_0()); }
	']'
	{ after(grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralTypeLinha__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeAssignment_2_1()); }
	(rule__LiteralTypeLinha__ElementTypeAssignment_2_1)
	{ after(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group__0__Impl
	rule__LiteralValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getLiteralValueAction_0()); }
	()
	{ after(grammarAccess.getLiteralValueAccess().getLiteralValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group__1__Impl
	rule__LiteralValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group__2__Impl
	rule__LiteralValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getGroup_2()); }
	(rule__LiteralValue__Group_2__0)?
	{ after(grammarAccess.getLiteralValueAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralValue__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group_2__0__Impl
	rule__LiteralValue__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getElementListAssignment_2_0()); }
	(rule__LiteralValue__ElementListAssignment_2_0)
	{ after(grammarAccess.getLiteralValueAccess().getElementListAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getCommaKeyword_2_1()); }
	(',')?
	{ after(grammarAccess.getLiteralValueAccess().getCommaKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group__0__Impl
	rule__ElementList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getKeyedElementAssignment_0()); }
	(rule__ElementList__KeyedElementAssignment_0)
	{ after(grammarAccess.getElementListAccess().getKeyedElementAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getGroup_1()); }
	(rule__ElementList__Group_1__0)*
	{ after(grammarAccess.getElementListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group_1__0__Impl
	rule__ElementList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getElementListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getKeyedElement1Assignment_1_1()); }
	(rule__ElementList__KeyedElement1Assignment_1_1)
	{ after(grammarAccess.getElementListAccess().getKeyedElement1Assignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeyedElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyedElement__Group__0__Impl
	rule__KeyedElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedElementAccess().getGroup_0()); }
	(rule__KeyedElement__Group_0__0)?
	{ after(grammarAccess.getKeyedElementAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyedElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedElementAccess().getElementAssignment_1()); }
	(rule__KeyedElement__ElementAssignment_1)
	{ after(grammarAccess.getKeyedElementAccess().getElementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeyedElement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyedElement__Group_0__0__Impl
	rule__KeyedElement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedElementAccess().getKeyAssignment_0_0()); }
	(rule__KeyedElement__KeyAssignment_0_0)
	{ after(grammarAccess.getKeyedElementAccess().getKeyAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyedElement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedElementAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getKeyedElementAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionLit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionLit__Group__0__Impl
	rule__FunctionLit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionLitAccess().getFuncAssignment_0()); }
	(rule__FunctionLit__FuncAssignment_0)
	{ after(grammarAccess.getFunctionLitAccess().getFuncAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionLit__Group__1__Impl
	rule__FunctionLit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionLitAccess().getSignatureAssignment_1()); }
	(rule__FunctionLit__SignatureAssignment_1)
	{ after(grammarAccess.getFunctionLitAccess().getSignatureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionLit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionLitAccess().getFunctionBodyAssignment_2()); }
	(rule__FunctionLit__FunctionBodyAssignment_2)
	{ after(grammarAccess.getFunctionLitAccess().getFunctionBodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_0__0__Impl
	rule__PrimaryExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getOperandAssignment_0_0()); }
	(rule__PrimaryExpr__OperandAssignment_0_0)
	{ after(grammarAccess.getPrimaryExprAccess().getOperandAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaAssignment_0_1()); }
	(rule__PrimaryExpr__PrimaryExprLinhaAssignment_0_1)
	{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_1__0__Impl
	rule__PrimaryExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getConversionAssignment_1_0()); }
	(rule__PrimaryExpr__ConversionAssignment_1_0)
	{ after(grammarAccess.getPrimaryExprAccess().getConversionAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaAssignment_1_1()); }
	(rule__PrimaryExpr__PrimaryExprLinhaAssignment_1_1)
	{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_2__0__Impl
	rule__PrimaryExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getMethodExprAssignment_2_0()); }
	(rule__PrimaryExpr__MethodExprAssignment_2_0)
	{ after(grammarAccess.getPrimaryExprAccess().getMethodExprAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaAssignment_2_1()); }
	(rule__PrimaryExpr__PrimaryExprLinhaAssignment_2_1)
	{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprLinha__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprLinha__Group__0__Impl
	rule__PrimaryExprLinha__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaAction_0()); }
	()
	{ after(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprLinha__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprLinhaAccess().getAlternatives_1()); }
	(rule__PrimaryExprLinha__Alternatives_1)?
	{ after(grammarAccess.getPrimaryExprLinhaAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprLinha__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprLinha__Group_1_0__0__Impl
	rule__PrimaryExprLinha__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprLinhaAccess().getSelectorAssignment_1_0_0()); }
	(rule__PrimaryExprLinha__SelectorAssignment_1_0_0)
	{ after(grammarAccess.getPrimaryExprLinhaAccess().getSelectorAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprLinha__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaAssignment_1_0_1()); }
	(rule__PrimaryExprLinha__PrimaryExprLinhaAssignment_1_0_1)
	{ after(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprLinha__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprLinha__Group_1_1__0__Impl
	rule__PrimaryExprLinha__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprLinhaAccess().getIndexAssignment_1_1_0()); }
	(rule__PrimaryExprLinha__IndexAssignment_1_1_0)
	{ after(grammarAccess.getPrimaryExprLinhaAccess().getIndexAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprLinha__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaAssignment_1_1_1()); }
	(rule__PrimaryExprLinha__PrimaryExprLinhaAssignment_1_1_1)
	{ after(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprLinha__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprLinha__Group_1_2__0__Impl
	rule__PrimaryExprLinha__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprLinhaAccess().getSliceAssignment_1_2_0()); }
	(rule__PrimaryExprLinha__SliceAssignment_1_2_0)
	{ after(grammarAccess.getPrimaryExprLinhaAccess().getSliceAssignment_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprLinha__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaAssignment_1_2_1()); }
	(rule__PrimaryExprLinha__PrimaryExprLinhaAssignment_1_2_1)
	{ after(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprLinha__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprLinha__Group_1_3__0__Impl
	rule__PrimaryExprLinha__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprLinhaAccess().getTypeAssertionAssignment_1_3_0()); }
	(rule__PrimaryExprLinha__TypeAssertionAssignment_1_3_0)
	{ after(grammarAccess.getPrimaryExprLinhaAccess().getTypeAssertionAssignment_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprLinha__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaAssignment_1_3_1()); }
	(rule__PrimaryExprLinha__PrimaryExprLinhaAssignment_1_3_1)
	{ after(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaAssignment_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprLinha__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprLinha__Group_1_4__0__Impl
	rule__PrimaryExprLinha__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprLinhaAccess().getArgumentsAssignment_1_4_0()); }
	(rule__PrimaryExprLinha__ArgumentsAssignment_1_4_0)
	{ after(grammarAccess.getPrimaryExprLinhaAccess().getArgumentsAssignment_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprLinha__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaAssignment_1_4_1()); }
	(rule__PrimaryExprLinha__PrimaryExprLinhaAssignment_1_4_1)
	{ after(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaAssignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__0__Impl
	rule__Selector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getSelectorAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getIdAssignment_1()); }
	(rule__Selector__IdAssignment_1)
	{ after(grammarAccess.getSelectorAccess().getIdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Index__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group__0__Impl
	rule__Index__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group__1__Impl
	rule__Index__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getExpressionAssignment_1()); }
	(rule__Index__ExpressionAssignment_1)
	{ after(grammarAccess.getIndexAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Slice__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group__0__Impl
	rule__Slice__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getSliceAction_0()); }
	()
	{ after(grammarAccess.getSliceAccess().getSliceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getAlternatives_1()); }
	(rule__Slice__Alternatives_1)
	{ after(grammarAccess.getSliceAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Slice__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1_0__0__Impl
	rule__Slice__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_1_0_0()); }
	'['
	{ after(grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1_0__1__Impl
	rule__Slice__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getExpressionAssignment_1_0_1()); }
	(rule__Slice__ExpressionAssignment_1_0_1)?
	{ after(grammarAccess.getSliceAccess().getExpressionAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1_0__2__Impl
	rule__Slice__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getColonKeyword_1_0_2()); }
	':'
	{ after(grammarAccess.getSliceAccess().getColonKeyword_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1_0__3__Impl
	rule__Slice__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getExpression1Assignment_1_0_3()); }
	(rule__Slice__Expression1Assignment_1_0_3)?
	{ after(grammarAccess.getSliceAccess().getExpression1Assignment_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getRightSquareBracketKeyword_1_0_4()); }
	']'
	{ after(grammarAccess.getSliceAccess().getRightSquareBracketKeyword_1_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Slice__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1_1__0__Impl
	rule__Slice__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_1_1_0()); }
	'['
	{ after(grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1_1__1__Impl
	rule__Slice__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getExpressionAssignment_1_1_1()); }
	(rule__Slice__ExpressionAssignment_1_1_1)?
	{ after(grammarAccess.getSliceAccess().getExpressionAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1_1__2__Impl
	rule__Slice__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getColonKeyword_1_1_2()); }
	':'
	{ after(grammarAccess.getSliceAccess().getColonKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1_1__3__Impl
	rule__Slice__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getExpression1Assignment_1_1_3()); }
	(rule__Slice__Expression1Assignment_1_1_3)
	{ after(grammarAccess.getSliceAccess().getExpression1Assignment_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1_1__4__Impl
	rule__Slice__Group_1_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getColonKeyword_1_1_4()); }
	':'
	{ after(grammarAccess.getSliceAccess().getColonKeyword_1_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1_1__5__Impl
	rule__Slice__Group_1_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getExpression2Assignment_1_1_5()); }
	(rule__Slice__Expression2Assignment_1_1_5)
	{ after(grammarAccess.getSliceAccess().getExpression2Assignment_1_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getRightSquareBracketKeyword_1_1_6()); }
	']'
	{ after(grammarAccess.getSliceAccess().getRightSquareBracketKeyword_1_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAssertion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeAssertion__Group__0__Impl
	rule__TypeAssertion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeAssertion__Group__1__Impl
	rule__TypeAssertion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeAssertion__Group__2__Impl
	rule__TypeAssertion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAssertionAccess().getTypeAssignment_2()); }
	(rule__TypeAssertion__TypeAssignment_2)
	{ after(grammarAccess.getTypeAssertionAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeAssertion__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAssertionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getTypeAssertionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__0__Impl
	rule__Arguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getArgumentsAction_0()); }
	()
	{ after(grammarAccess.getArgumentsAccess().getArgumentsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__1__Impl
	rule__Arguments__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__2__Impl
	rule__Arguments__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getGroup_2()); }
	(rule__Arguments__Group_2__0)?
	{ after(grammarAccess.getArgumentsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2__0__Impl
	rule__Arguments__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getAlternatives_2_0()); }
	(rule__Arguments__Alternatives_2_0)
	{ after(grammarAccess.getArgumentsAccess().getAlternatives_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2__1__Impl
	rule__Arguments__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_2_1()); }
	('...')?
	{ after(grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getCommaKeyword_2_2()); }
	(',')?
	{ after(grammarAccess.getArgumentsAccess().getCommaKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group_2_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2_0_1__0__Impl
	rule__Arguments__Group_2_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getTypeAssignment_2_0_1_0()); }
	(rule__Arguments__TypeAssignment_2_0_1_0)
	{ after(grammarAccess.getArgumentsAccess().getTypeAssignment_2_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getGroup_2_0_1_1()); }
	(rule__Arguments__Group_2_0_1_1__0)?
	{ after(grammarAccess.getArgumentsAccess().getGroup_2_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group_2_0_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2_0_1_1__0__Impl
	rule__Arguments__Group_2_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getCommaKeyword_2_0_1_1_0()); }
	','
	{ after(grammarAccess.getArgumentsAccess().getCommaKeyword_2_0_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getExpressionListAssignment_2_0_1_1_1()); }
	(rule__Arguments__ExpressionListAssignment_2_0_1_1_1)
	{ after(grammarAccess.getArgumentsAccess().getExpressionListAssignment_2_0_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodExpr__Group__0__Impl
	rule__MethodExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodExprAccess().getReceiverTypeAssignment_0()); }
	(rule__MethodExpr__ReceiverTypeAssignment_0)
	{ after(grammarAccess.getMethodExprAccess().getReceiverTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodExpr__Group__1__Impl
	rule__MethodExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodExprAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getMethodExprAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodExprAccess().getMethodNameAssignment_2()); }
	(rule__MethodExpr__MethodNameAssignment_2)
	{ after(grammarAccess.getMethodExprAccess().getMethodNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getUnaryExprAssignment_0()); }
	(rule__Expression__UnaryExprAssignment_0)
	{ after(grammarAccess.getExpressionAccess().getUnaryExprAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpression_LinhaAssignment_1()); }
	(rule__Expression__Expression_LinhaAssignment_1)
	{ after(grammarAccess.getExpressionAccess().getExpression_LinhaAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Linha__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression_Linha__Group__0__Impl
	rule__Expression_Linha__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Linha__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression_LinhaAccess().getExpression_LinhaAction_0()); }
	()
	{ after(grammarAccess.getExpression_LinhaAccess().getExpression_LinhaAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Linha__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression_Linha__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Linha__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression_LinhaAccess().getGroup_1()); }
	(rule__Expression_Linha__Group_1__0)?
	{ after(grammarAccess.getExpression_LinhaAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Linha__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression_Linha__Group_1__0__Impl
	rule__Expression_Linha__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Linha__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression_LinhaAccess().getBINARY_OPAssignment_1_0()); }
	(rule__Expression_Linha__BINARY_OPAssignment_1_0)
	{ after(grammarAccess.getExpression_LinhaAccess().getBINARY_OPAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Linha__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression_Linha__Group_1__1__Impl
	rule__Expression_Linha__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Linha__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression_LinhaAccess().getExpressionAssignment_1_1()); }
	(rule__Expression_Linha__ExpressionAssignment_1_1)
	{ after(grammarAccess.getExpression_LinhaAccess().getExpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Linha__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression_Linha__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Linha__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression_LinhaAccess().getExpression_LinhaAssignment_1_2()); }
	(rule__Expression_Linha__Expression_LinhaAssignment_1_2)
	{ after(grammarAccess.getExpression_LinhaAccess().getExpression_LinhaAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_1__0__Impl
	rule__UnaryExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getUNARY_OPTerminalRuleCall_1_0()); }
	RULE_UNARY_OP
	{ after(grammarAccess.getUnaryExprAccess().getUNARY_OPTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getUnaryExprAssignment_1_1()); }
	(rule__UnaryExpr__UnaryExprAssignment_1_1)
	{ after(grammarAccess.getUnaryExprAccess().getUnaryExprAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conversion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__0__Impl
	rule__Conversion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getTypeAssignment_0()); }
	(rule__Conversion__TypeAssignment_0)
	{ after(grammarAccess.getConversionAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__1__Impl
	rule__Conversion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getConversionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__2__Impl
	rule__Conversion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getExpressionAssignment_2()); }
	(rule__Conversion__ExpressionAssignment_2)
	{ after(grammarAccess.getConversionAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__3__Impl
	rule__Conversion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getCommaKeyword_3()); }
	(',')?
	{ after(grammarAccess.getConversionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getConversionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStmt__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStmt__Group_1__0__Impl
	rule__SimpleStmt__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStmtAccess().getExpressionAssignment_1_0()); }
	(rule__SimpleStmt__ExpressionAssignment_1_0)
	{ after(grammarAccess.getSimpleStmtAccess().getExpressionAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStmt__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStmtAccess().getSimpleStmtLinhaAssignment_1_1()); }
	(rule__SimpleStmt__SimpleStmtLinhaAssignment_1_1)
	{ after(grammarAccess.getSimpleStmtAccess().getSimpleStmtLinhaAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStmtLinha__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStmtLinha__Group_0__0__Impl
	rule__SimpleStmtLinha__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmtLinha__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStmtLinhaAccess().getLessThanSignHyphenMinusKeyword_0_0()); }
	'<-'
	{ after(grammarAccess.getSimpleStmtLinhaAccess().getLessThanSignHyphenMinusKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmtLinha__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStmtLinha__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmtLinha__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStmtLinhaAccess().getExpressionAssignment_0_1()); }
	(rule__SimpleStmtLinha__ExpressionAssignment_0_1)
	{ after(grammarAccess.getSimpleStmtLinhaAccess().getExpressionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStmtLinha__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStmtLinha__Group_2__0__Impl
	rule__SimpleStmtLinha__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmtLinha__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStmtLinhaAccess().getGroup_2_0()); }
	(rule__SimpleStmtLinha__Group_2_0__0)*
	{ after(grammarAccess.getSimpleStmtLinhaAccess().getGroup_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmtLinha__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStmtLinha__Group_2__1__Impl
	rule__SimpleStmtLinha__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmtLinha__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStmtLinhaAccess().getAssign_opAssignment_2_1()); }
	(rule__SimpleStmtLinha__Assign_opAssignment_2_1)
	{ after(grammarAccess.getSimpleStmtLinhaAccess().getAssign_opAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmtLinha__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStmtLinha__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmtLinha__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStmtLinhaAccess().getExpressionListAssignment_2_2()); }
	(rule__SimpleStmtLinha__ExpressionListAssignment_2_2)
	{ after(grammarAccess.getSimpleStmtLinhaAccess().getExpressionListAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStmtLinha__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStmtLinha__Group_2_0__0__Impl
	rule__SimpleStmtLinha__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmtLinha__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStmtLinhaAccess().getCommaKeyword_2_0_0()); }
	','
	{ after(grammarAccess.getSimpleStmtLinhaAccess().getCommaKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmtLinha__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleStmtLinha__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmtLinha__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleStmtLinhaAccess().getExpression1Assignment_2_0_1()); }
	(rule__SimpleStmtLinha__Expression1Assignment_2_0_1)
	{ after(grammarAccess.getSimpleStmtLinhaAccess().getExpression1Assignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LabeledStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStmt__Group__0__Impl
	rule__LabeledStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStmtAccess().getLabelAssignment_0()); }
	(rule__LabeledStmt__LabelAssignment_0)
	{ after(grammarAccess.getLabeledStmtAccess().getLabelAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStmt__Group__1__Impl
	rule__LabeledStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStmtAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getLabeledStmtAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStmtAccess().getStatementAssignment_2()); }
	(rule__LabeledStmt__StatementAssignment_2)
	{ after(grammarAccess.getLabeledStmtAccess().getStatementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assign_op__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assign_op__Group__0__Impl
	rule__Assign_op__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign_op__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssign_opAccess().getAlternatives_0()); }
	(rule__Assign_op__Alternatives_0)?
	{ after(grammarAccess.getAssign_opAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign_op__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assign_op__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign_op__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssign_opAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAssign_opAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_0__0__Impl
	rule__IfStmt__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getIfAssignment_0_0()); }
	(rule__IfStmt__IfAssignment_0_0)
	{ after(grammarAccess.getIfStmtAccess().getIfAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_0__1__Impl
	rule__IfStmt__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getExpressionAssignment_0_1()); }
	(rule__IfStmt__ExpressionAssignment_0_1)
	{ after(grammarAccess.getIfStmtAccess().getExpressionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getIfStmtLinhaAssignment_0_2()); }
	(rule__IfStmt__IfStmtLinhaAssignment_0_2)
	{ after(grammarAccess.getIfStmtAccess().getIfStmtLinhaAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_1__0__Impl
	rule__IfStmt__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getIfAssignment_1_0()); }
	(rule__IfStmt__IfAssignment_1_0)
	{ after(grammarAccess.getIfStmtAccess().getIfAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_1__1__Impl
	rule__IfStmt__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getGroup_1_1()); }
	(rule__IfStmt__Group_1_1__0)
	{ after(grammarAccess.getIfStmtAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_1__2__Impl
	rule__IfStmt__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getExpressionAssignment_1_2()); }
	(rule__IfStmt__ExpressionAssignment_1_2)
	{ after(grammarAccess.getIfStmtAccess().getExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_1__3__Impl
	rule__IfStmt__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getBlockAssignment_1_3()); }
	(rule__IfStmt__BlockAssignment_1_3)
	{ after(grammarAccess.getIfStmtAccess().getBlockAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getGroup_1_4()); }
	(rule__IfStmt__Group_1_4__0)?
	{ after(grammarAccess.getIfStmtAccess().getGroup_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_1_1__0__Impl
	rule__IfStmt__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getAlternatives_1_1_0()); }
	(rule__IfStmt__Alternatives_1_1_0)
	{ after(grammarAccess.getIfStmtAccess().getAlternatives_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getSemicolonKeyword_1_1_1()); }
	';'
	{ after(grammarAccess.getIfStmtAccess().getSemicolonKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_1_4__0__Impl
	rule__IfStmt__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getElseAssignment_1_4_0()); }
	(rule__IfStmt__ElseAssignment_1_4_0)
	{ after(grammarAccess.getIfStmtAccess().getElseAssignment_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getAlternatives_1_4_1()); }
	(rule__IfStmt__Alternatives_1_4_1)
	{ after(grammarAccess.getIfStmtAccess().getAlternatives_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmtLinha__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmtLinha__Group_0__0__Impl
	rule__IfStmtLinha__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtLinhaAccess().getSimpleStmtLinhaAssignment_0_0()); }
	(rule__IfStmtLinha__SimpleStmtLinhaAssignment_0_0)
	{ after(grammarAccess.getIfStmtLinhaAccess().getSimpleStmtLinhaAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmtLinha__Group_0__1__Impl
	rule__IfStmtLinha__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtLinhaAccess().getSemicolonKeyword_0_1()); }
	';'
	{ after(grammarAccess.getIfStmtLinhaAccess().getSemicolonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmtLinha__Group_0__2__Impl
	rule__IfStmtLinha__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtLinhaAccess().getExpressionAssignment_0_2()); }
	(rule__IfStmtLinha__ExpressionAssignment_0_2)
	{ after(grammarAccess.getIfStmtLinhaAccess().getExpressionAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmtLinha__Group_0__3__Impl
	rule__IfStmtLinha__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtLinhaAccess().getBlockAssignment_0_3()); }
	(rule__IfStmtLinha__BlockAssignment_0_3)
	{ after(grammarAccess.getIfStmtLinhaAccess().getBlockAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmtLinha__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtLinhaAccess().getGroup_0_4()); }
	(rule__IfStmtLinha__Group_0_4__0)?
	{ after(grammarAccess.getIfStmtLinhaAccess().getGroup_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmtLinha__Group_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmtLinha__Group_0_4__0__Impl
	rule__IfStmtLinha__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__Group_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtLinhaAccess().getElseAssignment_0_4_0()); }
	(rule__IfStmtLinha__ElseAssignment_0_4_0)
	{ after(grammarAccess.getIfStmtLinhaAccess().getElseAssignment_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__Group_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmtLinha__Group_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__Group_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtLinhaAccess().getAlternatives_0_4_1()); }
	(rule__IfStmtLinha__Alternatives_0_4_1)
	{ after(grammarAccess.getIfStmtLinhaAccess().getAlternatives_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmtLinha__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmtLinha__Group_1__0__Impl
	rule__IfStmtLinha__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtLinhaAccess().getBlockAssignment_1_0()); }
	(rule__IfStmtLinha__BlockAssignment_1_0)
	{ after(grammarAccess.getIfStmtLinhaAccess().getBlockAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmtLinha__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtLinhaAccess().getGroup_1_1()); }
	(rule__IfStmtLinha__Group_1_1__0)?
	{ after(grammarAccess.getIfStmtLinhaAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmtLinha__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmtLinha__Group_1_1__0__Impl
	rule__IfStmtLinha__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtLinhaAccess().getElseAssignment_1_1_0()); }
	(rule__IfStmtLinha__ElseAssignment_1_1_0)
	{ after(grammarAccess.getIfStmtLinhaAccess().getElseAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmtLinha__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtLinhaAccess().getAlternatives_1_1_1()); }
	(rule__IfStmtLinha__Alternatives_1_1_1)
	{ after(grammarAccess.getIfStmtLinhaAccess().getAlternatives_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmt__Group__0__Impl
	rule__SwitchStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtAccess().getSwitchAssignment_0()); }
	(rule__SwitchStmt__SwitchAssignment_0)
	{ after(grammarAccess.getSwitchStmtAccess().getSwitchAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmt__Group__1__Impl
	rule__SwitchStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtAccess().getGroup_1()); }
	(rule__SwitchStmt__Group_1__0)?
	{ after(grammarAccess.getSwitchStmtAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtAccess().getSwitchStmtLinhaAssignment_2()); }
	(rule__SwitchStmt__SwitchStmtLinhaAssignment_2)
	{ after(grammarAccess.getSwitchStmtAccess().getSwitchStmtLinhaAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStmt__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmt__Group_1__0__Impl
	rule__SwitchStmt__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtAccess().getSimpleStmtAssignment_1_0()); }
	(rule__SwitchStmt__SimpleStmtAssignment_1_0)
	{ after(grammarAccess.getSwitchStmtAccess().getSimpleStmtAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmt__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getSwitchStmtAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStmtLinha__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinha__Group_0__0__Impl
	rule__SwitchStmtLinha__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaAccess().getPrimaryExprAssignment_0_0()); }
	(rule__SwitchStmtLinha__PrimaryExprAssignment_0_0)
	{ after(grammarAccess.getSwitchStmtLinhaAccess().getPrimaryExprAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinha__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaAccess().getSwitchStmtLinhaLinhaAssignment_0_1()); }
	(rule__SwitchStmtLinha__SwitchStmtLinhaLinhaAssignment_0_1)
	{ after(grammarAccess.getSwitchStmtLinhaAccess().getSwitchStmtLinhaLinhaAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStmtLinha__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinha__Group_1__0__Impl
	rule__SwitchStmtLinha__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaAccess().getGroup_1_0()); }
	(rule__SwitchStmtLinha__Group_1_0__0)?
	{ after(grammarAccess.getSwitchStmtLinhaAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinha__Group_1__1__Impl
	rule__SwitchStmtLinha__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaAccess().getLeftCurlyBracketKeyword_1_1()); }
	'{'
	{ after(grammarAccess.getSwitchStmtLinhaAccess().getLeftCurlyBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinha__Group_1__2__Impl
	rule__SwitchStmtLinha__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaAccess().getExprCaseClauseAssignment_1_2()); }
	(rule__SwitchStmtLinha__ExprCaseClauseAssignment_1_2)*
	{ after(grammarAccess.getSwitchStmtLinhaAccess().getExprCaseClauseAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinha__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaAccess().getRightCurlyBracketKeyword_1_3()); }
	'}'
	{ after(grammarAccess.getSwitchStmtLinhaAccess().getRightCurlyBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStmtLinha__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinha__Group_1_0__0__Impl
	rule__SwitchStmtLinha__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaAccess().getGroup_1_0_0()); }
	(rule__SwitchStmtLinha__Group_1_0_0__0)
	{ after(grammarAccess.getSwitchStmtLinhaAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinha__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaAccess().getExpressionAssignment_1_0_1()); }
	(rule__SwitchStmtLinha__ExpressionAssignment_1_0_1)
	{ after(grammarAccess.getSwitchStmtLinhaAccess().getExpressionAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStmtLinha__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinha__Group_1_0_0__0__Impl
	rule__SwitchStmtLinha__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaAccess().getUnary_opAssignment_1_0_0_0()); }
	(rule__SwitchStmtLinha__Unary_opAssignment_1_0_0_0)
	{ after(grammarAccess.getSwitchStmtLinhaAccess().getUnary_opAssignment_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinha__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaAccess().getUnaryExprAssignment_1_0_0_1()); }
	(rule__SwitchStmtLinha__UnaryExprAssignment_1_0_0_1)
	{ after(grammarAccess.getSwitchStmtLinhaAccess().getUnaryExprAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStmtLinha__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinha__Group_2__0__Impl
	rule__SwitchStmtLinha__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaAccess().getGroup_2_0()); }
	(rule__SwitchStmtLinha__Group_2_0__0)
	{ after(grammarAccess.getSwitchStmtLinhaAccess().getGroup_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinha__Group_2__1__Impl
	rule__SwitchStmtLinha__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaAccess().getPrimaryExprAssignment_2_1()); }
	(rule__SwitchStmtLinha__PrimaryExprAssignment_2_1)
	{ after(grammarAccess.getSwitchStmtLinhaAccess().getPrimaryExprAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinha__Group_2__2__Impl
	rule__SwitchStmtLinha__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaAccess().getFullStopKeyword_2_2()); }
	'.'
	{ after(grammarAccess.getSwitchStmtLinhaAccess().getFullStopKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinha__Group_2__3__Impl
	rule__SwitchStmtLinha__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaAccess().getLeftParenthesisKeyword_2_3()); }
	'('
	{ after(grammarAccess.getSwitchStmtLinhaAccess().getLeftParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinha__Group_2__4__Impl
	rule__SwitchStmtLinha__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaAccess().getTypekeywordAssignment_2_4()); }
	(rule__SwitchStmtLinha__TypekeywordAssignment_2_4)
	{ after(grammarAccess.getSwitchStmtLinhaAccess().getTypekeywordAssignment_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinha__Group_2__5__Impl
	rule__SwitchStmtLinha__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaAccess().getRightParenthesisKeyword_2_5()); }
	')'
	{ after(grammarAccess.getSwitchStmtLinhaAccess().getRightParenthesisKeyword_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_2__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinha__Group_2__6__Impl
	rule__SwitchStmtLinha__Group_2__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_2__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaAccess().getLeftCurlyBracketKeyword_2_6()); }
	'{'
	{ after(grammarAccess.getSwitchStmtLinhaAccess().getLeftCurlyBracketKeyword_2_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_2__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinha__Group_2__7__Impl
	rule__SwitchStmtLinha__Group_2__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_2__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaAccess().getTypeCaseClauseAssignment_2_7()); }
	(rule__SwitchStmtLinha__TypeCaseClauseAssignment_2_7)*
	{ after(grammarAccess.getSwitchStmtLinhaAccess().getTypeCaseClauseAssignment_2_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_2__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinha__Group_2__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_2__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaAccess().getRightCurlyBracketKeyword_2_8()); }
	'}'
	{ after(grammarAccess.getSwitchStmtLinhaAccess().getRightCurlyBracketKeyword_2_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStmtLinha__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinha__Group_2_0__0__Impl
	rule__SwitchStmtLinha__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaAccess().getIdAssignment_2_0_0()); }
	(rule__SwitchStmtLinha__IdAssignment_2_0_0)
	{ after(grammarAccess.getSwitchStmtLinhaAccess().getIdAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinha__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaAccess().getColonEqualsSignKeyword_2_0_1()); }
	':='
	{ after(grammarAccess.getSwitchStmtLinhaAccess().getColonEqualsSignKeyword_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStmtLinhaLinha__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinhaLinha__Group_0__0__Impl
	rule__SwitchStmtLinhaLinha__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinhaLinha__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaLinhaAccess().getLeftCurlyBracketKeyword_0_0()); }
	'{'
	{ after(grammarAccess.getSwitchStmtLinhaLinhaAccess().getLeftCurlyBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinhaLinha__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinhaLinha__Group_0__1__Impl
	rule__SwitchStmtLinhaLinha__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinhaLinha__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaLinhaAccess().getExprCaseClauseAssignment_0_1()); }
	(rule__SwitchStmtLinhaLinha__ExprCaseClauseAssignment_0_1)*
	{ after(grammarAccess.getSwitchStmtLinhaLinhaAccess().getExprCaseClauseAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinhaLinha__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinhaLinha__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinhaLinha__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaLinhaAccess().getRightCurlyBracketKeyword_0_2()); }
	'}'
	{ after(grammarAccess.getSwitchStmtLinhaLinhaAccess().getRightCurlyBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStmtLinhaLinha__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinhaLinha__Group_1__0__Impl
	rule__SwitchStmtLinhaLinha__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinhaLinha__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaLinhaAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getSwitchStmtLinhaLinhaAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinhaLinha__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinhaLinha__Group_1__1__Impl
	rule__SwitchStmtLinhaLinha__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinhaLinha__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaLinhaAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getSwitchStmtLinhaLinhaAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinhaLinha__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinhaLinha__Group_1__2__Impl
	rule__SwitchStmtLinhaLinha__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinhaLinha__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaLinhaAccess().getTypekeywordAssignment_1_2()); }
	(rule__SwitchStmtLinhaLinha__TypekeywordAssignment_1_2)
	{ after(grammarAccess.getSwitchStmtLinhaLinhaAccess().getTypekeywordAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinhaLinha__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinhaLinha__Group_1__3__Impl
	rule__SwitchStmtLinhaLinha__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinhaLinha__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaLinhaAccess().getRightParenthesisKeyword_1_3()); }
	')'
	{ after(grammarAccess.getSwitchStmtLinhaLinhaAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinhaLinha__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinhaLinha__Group_1__4__Impl
	rule__SwitchStmtLinhaLinha__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinhaLinha__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaLinhaAccess().getLeftCurlyBracketKeyword_1_4()); }
	'{'
	{ after(grammarAccess.getSwitchStmtLinhaLinhaAccess().getLeftCurlyBracketKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinhaLinha__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinhaLinha__Group_1__5__Impl
	rule__SwitchStmtLinhaLinha__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinhaLinha__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaLinhaAccess().getTypeCaseClauseAssignment_1_5()); }
	(rule__SwitchStmtLinhaLinha__TypeCaseClauseAssignment_1_5)*
	{ after(grammarAccess.getSwitchStmtLinhaLinhaAccess().getTypeCaseClauseAssignment_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinhaLinha__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmtLinhaLinha__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinhaLinha__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtLinhaLinhaAccess().getRightCurlyBracketKeyword_1_6()); }
	'}'
	{ after(grammarAccess.getSwitchStmtLinhaLinhaAccess().getRightCurlyBracketKeyword_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprCaseClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprCaseClause__Group__0__Impl
	rule__ExprCaseClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseAssignment_0()); }
	(rule__ExprCaseClause__ExprSwitchCaseAssignment_0)
	{ after(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprCaseClause__Group__1__Impl
	rule__ExprCaseClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprCaseClauseAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getExprCaseClauseAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprCaseClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprCaseClauseAccess().getStatementListAssignment_2()); }
	(rule__ExprCaseClause__StatementListAssignment_2)
	{ after(grammarAccess.getExprCaseClauseAccess().getStatementListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSwitchCase__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchCase__Group_0__0__Impl
	rule__ExprSwitchCase__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchCaseAccess().getCaseAssignment_0_0()); }
	(rule__ExprSwitchCase__CaseAssignment_0_0)
	{ after(grammarAccess.getExprSwitchCaseAccess().getCaseAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchCase__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchCaseAccess().getExpressionListAssignment_0_1()); }
	(rule__ExprSwitchCase__ExpressionListAssignment_0_1)
	{ after(grammarAccess.getExprSwitchCaseAccess().getExpressionListAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeCaseClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeCaseClause__Group__0__Impl
	rule__TypeCaseClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseAssignment_0()); }
	(rule__TypeCaseClause__TypeSwitchCaseAssignment_0)
	{ after(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeCaseClause__Group__1__Impl
	rule__TypeCaseClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeCaseClauseAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getTypeCaseClauseAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeCaseClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeCaseClauseAccess().getStatementListAssignment_2()); }
	(rule__TypeCaseClause__StatementListAssignment_2)
	{ after(grammarAccess.getTypeCaseClauseAccess().getStatementListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSwitchCase__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchCase__Group_0__0__Impl
	rule__TypeSwitchCase__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchCaseAccess().getCaseAssignment_0_0()); }
	(rule__TypeSwitchCase__CaseAssignment_0_0)
	{ after(grammarAccess.getTypeSwitchCaseAccess().getCaseAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchCase__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchCaseAccess().getTypeListAssignment_0_1()); }
	(rule__TypeSwitchCase__TypeListAssignment_0_1)
	{ after(grammarAccess.getTypeSwitchCaseAccess().getTypeListAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeList__Group__0__Impl
	rule__TypeList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeListAccess().getTypeAssignment_0()); }
	(rule__TypeList__TypeAssignment_0)
	{ after(grammarAccess.getTypeListAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeListAccess().getGroup_1()); }
	(rule__TypeList__Group_1__0)*
	{ after(grammarAccess.getTypeListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeList__Group_1__0__Impl
	rule__TypeList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getTypeListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeListAccess().getType1Assignment_1_1()); }
	(rule__TypeList__Type1Assignment_1_1)
	{ after(grammarAccess.getTypeListAccess().getType1Assignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__0__Impl
	rule__ForStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getForAssignment_0()); }
	(rule__ForStmt__ForAssignment_0)
	{ after(grammarAccess.getForStmtAccess().getForAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__1__Impl
	rule__ForStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getAlternatives_1()); }
	(rule__ForStmt__Alternatives_1)?
	{ after(grammarAccess.getForStmtAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getBlockAssignment_2()); }
	(rule__ForStmt__BlockAssignment_2)
	{ after(grammarAccess.getForStmtAccess().getBlockAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmt__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group_1_0__0__Impl
	rule__ForStmt__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getExpressionAssignment_1_0_0()); }
	(rule__ForStmt__ExpressionAssignment_1_0_0)
	{ after(grammarAccess.getForStmtAccess().getExpressionAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getForStmtLinhaAssignment_1_0_1()); }
	(rule__ForStmt__ForStmtLinhaAssignment_1_0_1)
	{ after(grammarAccess.getForStmtAccess().getForStmtLinhaAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmt__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group_1_1__0__Impl
	rule__ForStmt__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getAlternatives_1_1_0()); }
	(rule__ForStmt__Alternatives_1_1_0)
	{ after(grammarAccess.getForStmtAccess().getAlternatives_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group_1_1__1__Impl
	rule__ForStmt__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getSemicolonKeyword_1_1_1()); }
	';'
	{ after(grammarAccess.getForStmtAccess().getSemicolonKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group_1_1__2__Impl
	rule__ForStmt__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getConditionAssignment_1_1_2()); }
	(rule__ForStmt__ConditionAssignment_1_1_2)
	{ after(grammarAccess.getForStmtAccess().getConditionAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group_1_1__3__Impl
	rule__ForStmt__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getSemicolonKeyword_1_1_3()); }
	';'
	{ after(grammarAccess.getForStmtAccess().getSemicolonKeyword_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group_1_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group_1_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group_1_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getPostStmtAssignment_1_1_4()); }
	(rule__ForStmt__PostStmtAssignment_1_1_4)
	{ after(grammarAccess.getForStmtAccess().getPostStmtAssignment_1_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmt__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group_1_2__0__Impl
	rule__ForStmt__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getIdentifierListAssignment_1_2_0()); }
	(rule__ForStmt__IdentifierListAssignment_1_2_0)
	{ after(grammarAccess.getForStmtAccess().getIdentifierListAssignment_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group_1_2__1__Impl
	rule__ForStmt__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getColonEqualsSignKeyword_1_2_1()); }
	':='
	{ after(grammarAccess.getForStmtAccess().getColonEqualsSignKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group_1_2__2__Impl
	rule__ForStmt__Group_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getRangeAssignment_1_2_2()); }
	(rule__ForStmt__RangeAssignment_1_2_2)
	{ after(grammarAccess.getForStmtAccess().getRangeAssignment_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group_1_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group_1_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group_1_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getExpressionAssignment_1_2_3()); }
	(rule__ForStmt__ExpressionAssignment_1_2_3)
	{ after(grammarAccess.getForStmtAccess().getExpressionAssignment_1_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmtLinha__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmtLinha__Group_1__0__Impl
	rule__ForStmtLinha__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtLinhaAccess().getGroup_1_0()); }
	(rule__ForStmtLinha__Group_1_0__0)*
	{ after(grammarAccess.getForStmtLinhaAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmtLinha__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtLinhaAccess().getForStmtLinhaLinhaAssignment_1_1()); }
	(rule__ForStmtLinha__ForStmtLinhaLinhaAssignment_1_1)
	{ after(grammarAccess.getForStmtLinhaAccess().getForStmtLinhaLinhaAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmtLinha__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmtLinha__Group_1_0__0__Impl
	rule__ForStmtLinha__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtLinhaAccess().getCommaKeyword_1_0_0()); }
	','
	{ after(grammarAccess.getForStmtLinhaAccess().getCommaKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmtLinha__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtLinhaAccess().getExpressionAssignment_1_0_1()); }
	(rule__ForStmtLinha__ExpressionAssignment_1_0_1)
	{ after(grammarAccess.getForStmtLinhaAccess().getExpressionAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmtLinha__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmtLinha__Group_2__0__Impl
	rule__ForStmtLinha__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtLinhaAccess().getAlternatives_2_0()); }
	(rule__ForStmtLinha__Alternatives_2_0)
	{ after(grammarAccess.getForStmtLinhaAccess().getAlternatives_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmtLinha__Group_2__1__Impl
	rule__ForStmtLinha__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtLinhaAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getForStmtLinhaAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmtLinha__Group_2__2__Impl
	rule__ForStmtLinha__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtLinhaAccess().getConditionAssignment_2_2()); }
	(rule__ForStmtLinha__ConditionAssignment_2_2)
	{ after(grammarAccess.getForStmtLinhaAccess().getConditionAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmtLinha__Group_2__3__Impl
	rule__ForStmtLinha__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtLinhaAccess().getSemicolonKeyword_2_3()); }
	';'
	{ after(grammarAccess.getForStmtLinhaAccess().getSemicolonKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmtLinha__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtLinhaAccess().getPostStmtAssignment_2_4()); }
	(rule__ForStmtLinha__PostStmtAssignment_2_4)
	{ after(grammarAccess.getForStmtLinhaAccess().getPostStmtAssignment_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmtLinha__Group_2_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmtLinha__Group_2_0_0__0__Impl
	rule__ForStmtLinha__Group_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__Group_2_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtLinhaAccess().getLessThanSignHyphenMinusKeyword_2_0_0_0()); }
	'<-'
	{ after(grammarAccess.getForStmtLinhaAccess().getLessThanSignHyphenMinusKeyword_2_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__Group_2_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmtLinha__Group_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__Group_2_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtLinhaAccess().getExpression1Assignment_2_0_0_1()); }
	(rule__ForStmtLinha__Expression1Assignment_2_0_0_1)
	{ after(grammarAccess.getForStmtLinhaAccess().getExpression1Assignment_2_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmtLinhaLinha__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmtLinhaLinha__Group_0__0__Impl
	rule__ForStmtLinhaLinha__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinhaLinha__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtLinhaLinhaAccess().getAssign_opAssignment_0_0()); }
	(rule__ForStmtLinhaLinha__Assign_opAssignment_0_0)
	{ after(grammarAccess.getForStmtLinhaLinhaAccess().getAssign_opAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinhaLinha__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmtLinhaLinha__Group_0__1__Impl
	rule__ForStmtLinhaLinha__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinhaLinha__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtLinhaLinhaAccess().getExpressionListAssignment_0_1()); }
	(rule__ForStmtLinhaLinha__ExpressionListAssignment_0_1)
	{ after(grammarAccess.getForStmtLinhaLinhaAccess().getExpressionListAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinhaLinha__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmtLinhaLinha__Group_0__2__Impl
	rule__ForStmtLinhaLinha__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinhaLinha__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtLinhaLinhaAccess().getSemicolonKeyword_0_2()); }
	';'
	{ after(grammarAccess.getForStmtLinhaLinhaAccess().getSemicolonKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinhaLinha__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmtLinhaLinha__Group_0__3__Impl
	rule__ForStmtLinhaLinha__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinhaLinha__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtLinhaLinhaAccess().getConditionAssignment_0_3()); }
	(rule__ForStmtLinhaLinha__ConditionAssignment_0_3)
	{ after(grammarAccess.getForStmtLinhaLinhaAccess().getConditionAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinhaLinha__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmtLinhaLinha__Group_0__4__Impl
	rule__ForStmtLinhaLinha__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinhaLinha__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtLinhaLinhaAccess().getSemicolonKeyword_0_4()); }
	';'
	{ after(grammarAccess.getForStmtLinhaLinhaAccess().getSemicolonKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinhaLinha__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmtLinhaLinha__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinhaLinha__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtLinhaLinhaAccess().getPostStmtAssignment_0_5()); }
	(rule__ForStmtLinhaLinha__PostStmtAssignment_0_5)
	{ after(grammarAccess.getForStmtLinhaLinhaAccess().getPostStmtAssignment_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmtLinhaLinha__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmtLinhaLinha__Group_1__0__Impl
	rule__ForStmtLinhaLinha__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinhaLinha__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtLinhaLinhaAccess().getEqualsSignKeyword_1_0()); }
	'='
	{ after(grammarAccess.getForStmtLinhaLinhaAccess().getEqualsSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinhaLinha__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmtLinhaLinha__Group_1__1__Impl
	rule__ForStmtLinhaLinha__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinhaLinha__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtLinhaLinhaAccess().getRangeAssignment_1_1()); }
	(rule__ForStmtLinhaLinha__RangeAssignment_1_1)
	{ after(grammarAccess.getForStmtLinhaLinhaAccess().getRangeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinhaLinha__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmtLinhaLinha__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinhaLinha__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtLinhaLinhaAccess().getExpressionAssignment_1_2()); }
	(rule__ForStmtLinhaLinha__ExpressionAssignment_1_2)
	{ after(grammarAccess.getForStmtLinhaLinhaAccess().getExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GoStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GoStmt__Group__0__Impl
	rule__GoStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GoStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoStmtAccess().getGoAssignment_0()); }
	(rule__GoStmt__GoAssignment_0)
	{ after(grammarAccess.getGoStmtAccess().getGoAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GoStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GoStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoStmtAccess().getExpressionAssignment_1()); }
	(rule__GoStmt__ExpressionAssignment_1)
	{ after(grammarAccess.getGoStmtAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStmt__Group__0__Impl
	rule__SelectStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStmtAccess().getSelectAssignment_0()); }
	(rule__SelectStmt__SelectAssignment_0)
	{ after(grammarAccess.getSelectStmtAccess().getSelectAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStmt__Group__1__Impl
	rule__SelectStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStmtAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getSelectStmtAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStmt__Group__2__Impl
	rule__SelectStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStmtAccess().getCommClauseAssignment_2()); }
	(rule__SelectStmt__CommClauseAssignment_2)*
	{ after(grammarAccess.getSelectStmtAccess().getCommClauseAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStmt__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStmtAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getSelectStmtAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommClause__Group__0__Impl
	rule__CommClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommClauseAccess().getCommCaseAssignment_0()); }
	(rule__CommClause__CommCaseAssignment_0)
	{ after(grammarAccess.getCommClauseAccess().getCommCaseAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommClause__Group__1__Impl
	rule__CommClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommClauseAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getCommClauseAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommClauseAccess().getStatementListAssignment_2()); }
	(rule__CommClause__StatementListAssignment_2)
	{ after(grammarAccess.getCommClauseAccess().getStatementListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommCase__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCase__Group_0__0__Impl
	rule__CommCase__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseAccess().getCaseAssignment_0_0()); }
	(rule__CommCase__CaseAssignment_0_0)
	{ after(grammarAccess.getCommCaseAccess().getCaseAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCase__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseAccess().getGroup_0_1()); }
	(rule__CommCase__Group_0_1__0)
	{ after(grammarAccess.getCommCaseAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommCase__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCase__Group_0_1__0__Impl
	rule__CommCase__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseAccess().getExpressionAssignment_0_1_0()); }
	(rule__CommCase__ExpressionAssignment_0_1_0)
	{ after(grammarAccess.getCommCaseAccess().getExpressionAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCase__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseAccess().getCommCaseLinhaAssignment_0_1_1()); }
	(rule__CommCase__CommCaseLinhaAssignment_0_1_1)
	{ after(grammarAccess.getCommCaseAccess().getCommCaseLinhaAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommCaseLinha__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCaseLinha__Group_0__0__Impl
	rule__CommCaseLinha__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCaseLinha__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseLinhaAccess().getLessThanSignHyphenMinusKeyword_0_0()); }
	'<-'
	{ after(grammarAccess.getCommCaseLinhaAccess().getLessThanSignHyphenMinusKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCaseLinha__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCaseLinha__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCaseLinha__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseLinhaAccess().getExpressionAssignment_0_1()); }
	(rule__CommCaseLinha__ExpressionAssignment_0_1)
	{ after(grammarAccess.getCommCaseLinhaAccess().getExpressionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommCaseLinha__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCaseLinha__Group_1__0__Impl
	rule__CommCaseLinha__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCaseLinha__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseLinhaAccess().getAlternatives_1_0()); }
	(rule__CommCaseLinha__Alternatives_1_0)
	{ after(grammarAccess.getCommCaseLinhaAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCaseLinha__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCaseLinha__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCaseLinha__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseLinhaAccess().getRecvExprAssignment_1_1()); }
	(rule__CommCaseLinha__RecvExprAssignment_1_1)
	{ after(grammarAccess.getCommCaseLinhaAccess().getRecvExprAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommCaseLinha__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCaseLinha__Group_1_0_0__0__Impl
	rule__CommCaseLinha__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCaseLinha__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseLinhaAccess().getGroup_1_0_0_0()); }
	(rule__CommCaseLinha__Group_1_0_0_0__0)*
	{ after(grammarAccess.getCommCaseLinhaAccess().getGroup_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCaseLinha__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCaseLinha__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCaseLinha__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseLinhaAccess().getEqualsSignKeyword_1_0_0_1()); }
	'='
	{ after(grammarAccess.getCommCaseLinhaAccess().getEqualsSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommCaseLinha__Group_1_0_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCaseLinha__Group_1_0_0_0__0__Impl
	rule__CommCaseLinha__Group_1_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCaseLinha__Group_1_0_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseLinhaAccess().getCommaKeyword_1_0_0_0_0()); }
	','
	{ after(grammarAccess.getCommCaseLinhaAccess().getCommaKeyword_1_0_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCaseLinha__Group_1_0_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCaseLinha__Group_1_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCaseLinha__Group_1_0_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseLinhaAccess().getExpression1Assignment_1_0_0_0_1()); }
	(rule__CommCaseLinha__Expression1Assignment_1_0_0_0_1)
	{ after(grammarAccess.getCommCaseLinhaAccess().getExpression1Assignment_1_0_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommCaseLinha__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCaseLinha__Group_1_0_1__0__Impl
	rule__CommCaseLinha__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCaseLinha__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseLinhaAccess().getIdentifierListAssignment_1_0_1_0()); }
	(rule__CommCaseLinha__IdentifierListAssignment_1_0_1_0)
	{ after(grammarAccess.getCommCaseLinhaAccess().getIdentifierListAssignment_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCaseLinha__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCaseLinha__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCaseLinha__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseLinhaAccess().getColonEqualsSignKeyword_1_0_1_1()); }
	':='
	{ after(grammarAccess.getCommCaseLinhaAccess().getColonEqualsSignKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStmt__Group__0__Impl
	rule__ReturnStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStmtAccess().getReturnAssignment_0()); }
	(rule__ReturnStmt__ReturnAssignment_0)
	{ after(grammarAccess.getReturnStmtAccess().getReturnAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStmtAccess().getExpressionListAssignment_1()); }
	(rule__ReturnStmt__ExpressionListAssignment_1)
	{ after(grammarAccess.getReturnStmtAccess().getExpressionListAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BreakStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakStmt__Group__0__Impl
	rule__BreakStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakStmtAccess().getBreakAssignment_0()); }
	(rule__BreakStmt__BreakAssignment_0)
	{ after(grammarAccess.getBreakStmtAccess().getBreakAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakStmtAccess().getLabelAssignment_1()); }
	(rule__BreakStmt__LabelAssignment_1)
	{ after(grammarAccess.getBreakStmtAccess().getLabelAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContinueStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContinueStmt__Group__0__Impl
	rule__ContinueStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinueStmtAccess().getContinueAssignment_0()); }
	(rule__ContinueStmt__ContinueAssignment_0)
	{ after(grammarAccess.getContinueStmtAccess().getContinueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContinueStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinueStmtAccess().getLabelAssignment_1()); }
	(rule__ContinueStmt__LabelAssignment_1)
	{ after(grammarAccess.getContinueStmtAccess().getLabelAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GotoStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GotoStmt__Group__0__Impl
	rule__GotoStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGotoStmtAccess().getGotoAssignment_0()); }
	(rule__GotoStmt__GotoAssignment_0)
	{ after(grammarAccess.getGotoStmtAccess().getGotoAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GotoStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGotoStmtAccess().getLabelAssignment_1()); }
	(rule__GotoStmt__LabelAssignment_1)
	{ after(grammarAccess.getGotoStmtAccess().getLabelAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeferStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeferStmt__Group__0__Impl
	rule__DeferStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeferStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeferStmtAccess().getDeferAssignment_0()); }
	(rule__DeferStmt__DeferAssignment_0)
	{ after(grammarAccess.getDeferStmtAccess().getDeferAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeferStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeferStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeferStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeferStmtAccess().getExpressionAssignment_1()); }
	(rule__DeferStmt__ExpressionAssignment_1)
	{ after(grammarAccess.getDeferStmtAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SourceFile__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceFile__Group__0__Impl
	rule__SourceFile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceFileAccess().getSourceFileAction_0()); }
	()
	{ after(grammarAccess.getSourceFileAccess().getSourceFileAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceFile__Group__1__Impl
	rule__SourceFile__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceFileAccess().getPackageClauseAssignment_1()); }
	(rule__SourceFile__PackageClauseAssignment_1)
	{ after(grammarAccess.getSourceFileAccess().getPackageClauseAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceFile__Group__2__Impl
	rule__SourceFile__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceFileAccess().getImportDeclAssignment_2()); }
	(rule__SourceFile__ImportDeclAssignment_2)*
	{ after(grammarAccess.getSourceFileAccess().getImportDeclAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceFile__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceFileAccess().getTopLevelDeclAssignment_3()); }
	(rule__SourceFile__TopLevelDeclAssignment_3)*
	{ after(grammarAccess.getSourceFileAccess().getTopLevelDeclAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageClause__Group__0__Impl
	rule__PackageClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageClauseAccess().getPackageAssignment_0()); }
	(rule__PackageClause__PackageAssignment_0)
	{ after(grammarAccess.getPackageClauseAccess().getPackageAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageClauseAccess().getPackageNameAssignment_1()); }
	(rule__PackageClause__PackageNameAssignment_1)
	{ after(grammarAccess.getPackageClauseAccess().getPackageNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group__0__Impl
	rule__ImportDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getImporttAssignment_0()); }
	(rule__ImportDecl__ImporttAssignment_0)
	{ after(grammarAccess.getImportDeclAccess().getImporttAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getAlternatives_1()); }
	(rule__ImportDecl__Alternatives_1)
	{ after(grammarAccess.getImportDeclAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDecl__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group_1_1__0__Impl
	rule__ImportDecl__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getLeftParenthesisKeyword_1_1_0()); }
	'('
	{ after(grammarAccess.getImportDeclAccess().getLeftParenthesisKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group_1_1__1__Impl
	rule__ImportDecl__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getImportSpec1Assignment_1_1_1()); }
	(rule__ImportDecl__ImportSpec1Assignment_1_1_1)*
	{ after(grammarAccess.getImportDeclAccess().getImportSpec1Assignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getRightParenthesisKeyword_1_1_2()); }
	')'
	{ after(grammarAccess.getImportDeclAccess().getRightParenthesisKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportSpec__Group__0__Impl
	rule__ImportSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportSpecAccess().getAlternatives_0()); }
	(rule__ImportSpec__Alternatives_0)?
	{ after(grammarAccess.getImportSpecAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportSpecAccess().getSTRING_LITAssignment_1()); }
	(rule__ImportSpec__STRING_LITAssignment_1)
	{ after(grammarAccess.getImportSpecAccess().getSTRING_LITAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__GreetingsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getGreetingsSourceFileParserRuleCall_0()); }
		ruleSourceFile
		{ after(grammarAccess.getModelAccess().getGreetingsSourceFileParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__DECIMALSAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFLOAT_LITAccess().getDECIMALSDECIMALSTerminalRuleCall_0_0_0()); }
		RULE_DECIMALS
		{ after(grammarAccess.getFLOAT_LITAccess().getDECIMALSDECIMALSTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__DECIMALS1Assignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFLOAT_LITAccess().getDECIMALS1DECIMALSTerminalRuleCall_0_2_0()); }
		RULE_DECIMALS
		{ after(grammarAccess.getFLOAT_LITAccess().getDECIMALS1DECIMALSTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__EXPONENTAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFLOAT_LITAccess().getEXPONENTEXPONENTTerminalRuleCall_0_3_0()); }
		RULE_EXPONENT
		{ after(grammarAccess.getFLOAT_LITAccess().getEXPONENTEXPONENTTerminalRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__DECIMALSAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFLOAT_LITAccess().getDECIMALSDECIMALSTerminalRuleCall_1_0_0()); }
		RULE_DECIMALS
		{ after(grammarAccess.getFLOAT_LITAccess().getDECIMALSDECIMALSTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__EXPONENTAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFLOAT_LITAccess().getEXPONENTEXPONENTTerminalRuleCall_1_1_0()); }
		RULE_EXPONENT
		{ after(grammarAccess.getFLOAT_LITAccess().getEXPONENTEXPONENTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__DECIMALSAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFLOAT_LITAccess().getDECIMALSDECIMALSTerminalRuleCall_2_1_0()); }
		RULE_DECIMALS
		{ after(grammarAccess.getFLOAT_LITAccess().getDECIMALSDECIMALSTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LIT__EXPONENTAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFLOAT_LITAccess().getEXPONENTEXPONENTTerminalRuleCall_2_2_0()); }
		RULE_EXPONENT
		{ after(grammarAccess.getFLOAT_LITAccess().getEXPONENTEXPONENTTerminalRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IMAGINARY_LIT__DECIMALSAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIMAGINARY_LITAccess().getDECIMALSDECIMALSTerminalRuleCall_0_0_0()); }
		RULE_DECIMALS
		{ after(grammarAccess.getIMAGINARY_LITAccess().getDECIMALSDECIMALSTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IMAGINARY_LIT__FLOAT_LITAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIMAGINARY_LITAccess().getFLOAT_LITFLOAT_LITParserRuleCall_0_1_0()); }
		ruleFLOAT_LIT
		{ after(grammarAccess.getIMAGINARY_LITAccess().getFLOAT_LITFLOAT_LITParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeNameTypeNameParserRuleCall_0_0()); }
		ruleTypeName
		{ after(grammarAccess.getTypeAccess().getTypeNameTypeNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeLitAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeLitTypeLitParserRuleCall_1_0()); }
		ruleTypeLit
		{ after(grammarAccess.getTypeAccess().getTypeLitTypeLitParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeTypeParserRuleCall_2_1_0()); }
		ruleType
		{ after(grammarAccess.getTypeAccess().getTypeTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__IdAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeNameAccess().getIdIDENTIFIERTerminalRuleCall_0()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getTypeNameAccess().getIdIDENTIFIERTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__TypeLitLinhaAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getTypeLitLinhaTypeLitLinhaParserRuleCall_0_1_0()); }
		ruleTypeLitLinha
		{ after(grammarAccess.getTypeLitAccess().getTypeLitLinhaTypeLitLinhaParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__SrtuctTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getSrtuctTypeStructTypeParserRuleCall_1_0()); }
		ruleStructType
		{ after(grammarAccess.getTypeLitAccess().getSrtuctTypeStructTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__PointerTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getPointerTypePointerTypeParserRuleCall_2_0()); }
		rulePointerType
		{ after(grammarAccess.getTypeLitAccess().getPointerTypePointerTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__FunctionTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getFunctionTypeFunctionTypeParserRuleCall_3_0()); }
		ruleFunctionType
		{ after(grammarAccess.getTypeLitAccess().getFunctionTypeFunctionTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__InterfaceTypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getInterfaceTypeInterfaceTypeParserRuleCall_4_0()); }
		ruleInterfaceType
		{ after(grammarAccess.getTypeLitAccess().getInterfaceTypeInterfaceTypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__MapTypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getMapTypeMapTypeParserRuleCall_5_0()); }
		ruleMapType
		{ after(grammarAccess.getTypeLitAccess().getMapTypeMapTypeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__ChannelTypeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getChannelTypeChannelTypeParserRuleCall_6_0()); }
		ruleChannelType
		{ after(grammarAccess.getTypeLitAccess().getChannelTypeChannelTypeParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__ArrayLengthAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitLinhaAccess().getArrayLengthArrayLengthParserRuleCall_0_0_0()); }
		ruleArrayLength
		{ after(grammarAccess.getTypeLitLinhaAccess().getArrayLengthArrayLengthParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__ElementTypeAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitLinhaAccess().getElementTypeElementTypeParserRuleCall_0_2_0()); }
		ruleElementType
		{ after(grammarAccess.getTypeLitLinhaAccess().getElementTypeElementTypeParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__ElementTypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitLinhaAccess().getElementTypeElementTypeParserRuleCall_1_1_0()); }
		ruleElementType
		{ after(grammarAccess.getTypeLitLinhaAccess().getElementTypeElementTypeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLength__ExpressionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayLengthAccess().getExpressionExpressionParserRuleCall_0()); }
		ruleExpression
		{ after(grammarAccess.getArrayLengthAccess().getExpressionExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementTypeAccess().getTypeTypeParserRuleCall_0()); }
		ruleType
		{ after(grammarAccess.getElementTypeAccess().getTypeTypeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__StructAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructTypeAccess().getStructSTRUCTTerminalRuleCall_0_0()); }
		RULE_STRUCT
		{ after(grammarAccess.getStructTypeAccess().getStructSTRUCTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__FieldDeclAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructTypeAccess().getFieldDeclFieldDeclParserRuleCall_2_0()); }
		ruleFieldDecl
		{ after(grammarAccess.getStructTypeAccess().getFieldDeclFieldDeclParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__IdentifierListAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0_0_0()); }
		ruleIdentifierList
		{ after(grammarAccess.getFieldDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__TypeAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_0_0_1_0()); }
		ruleType
		{ after(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__EmbeddedFieldAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclAccess().getEmbeddedFieldEmbeddedFieldParserRuleCall_0_1_0()); }
		ruleEmbeddedField
		{ after(grammarAccess.getFieldDeclAccess().getEmbeddedFieldEmbeddedFieldParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__TagAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclAccess().getTagTagParserRuleCall_1_0()); }
		ruleTag
		{ after(grammarAccess.getFieldDeclAccess().getTagTagParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedField__TypeNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmbeddedFieldAccess().getTypeNameTypeNameParserRuleCall_1_0()); }
		ruleTypeName
		{ after(grammarAccess.getEmbeddedFieldAccess().getTypeNameTypeNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__String_litAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagAccess().getString_litSTRING_LITTerminalRuleCall_0()); }
		RULE_STRING_LIT
		{ after(grammarAccess.getTagAccess().getString_litSTRING_LITTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerType__BaseTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointerTypeAccess().getBaseTypeBaseTypeParserRuleCall_1_0()); }
		ruleBaseType
		{ after(grammarAccess.getPointerTypeAccess().getBaseTypeBaseTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseType__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBaseTypeAccess().getTypeTypeParserRuleCall_0()); }
		ruleType
		{ after(grammarAccess.getBaseTypeAccess().getTypeTypeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__FuncAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionTypeAccess().getFuncFuncKeyword_0_0()); }
		(
			{ before(grammarAccess.getFunctionTypeAccess().getFuncFuncKeyword_0_0()); }
			'func'
			{ after(grammarAccess.getFunctionTypeAccess().getFuncFuncKeyword_0_0()); }
		)
		{ after(grammarAccess.getFunctionTypeAccess().getFuncFuncKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__SignatureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionTypeAccess().getSignatureSignatureParserRuleCall_1_0()); }
		ruleSignature
		{ after(grammarAccess.getFunctionTypeAccess().getSignatureSignatureParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__ParametersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignatureAccess().getParametersParametersParserRuleCall_0_0()); }
		ruleParameters
		{ after(grammarAccess.getSignatureAccess().getParametersParametersParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__ResultAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0()); }
		ruleResult
		{ after(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__ParametersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultAccess().getParametersParametersParserRuleCall_0_0()); }
		ruleParameters
		{ after(grammarAccess.getResultAccess().getParametersParametersParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getResultAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__ParameterListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametersAccess().getParameterListParameterListParserRuleCall_2_0()); }
		ruleParameterList
		{ after(grammarAccess.getParametersAccess().getParameterListParameterListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParameterDeclAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getParameterDeclParameterDeclParserRuleCall_0_0()); }
		ruleParameterDecl
		{ after(grammarAccess.getParameterListAccess().getParameterDeclParameterDeclParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParameterDecl1Assignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getParameterDecl1ParameterDeclParserRuleCall_1_1_0()); }
		ruleParameterDecl
		{ after(grammarAccess.getParameterListAccess().getParameterDecl1ParameterDeclParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__IdentifierListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
		ruleIdentifierList
		{ after(grammarAccess.getParameterDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterDeclAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getParameterDeclAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__InterfaceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceTypeAccess().getInterfaceINTERFACETerminalRuleCall_0_0()); }
		RULE_INTERFACE
		{ after(grammarAccess.getInterfaceTypeAccess().getInterfaceINTERFACETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__MethodSpecAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceTypeAccess().getMethodSpecMethodSpecParserRuleCall_2_0()); }
		ruleMethodSpec
		{ after(grammarAccess.getInterfaceTypeAccess().getMethodSpecMethodSpecParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__MethodNameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodSpecAccess().getMethodNameMethodNameParserRuleCall_0_0_0()); }
		ruleMethodName
		{ after(grammarAccess.getMethodSpecAccess().getMethodNameMethodNameParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__SignatureAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodSpecAccess().getSignatureSignatureParserRuleCall_0_1_0()); }
		ruleSignature
		{ after(grammarAccess.getMethodSpecAccess().getSignatureSignatureParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__InterfaceTypeNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodSpecAccess().getInterfaceTypeNameInterfaceTypeNameParserRuleCall_1_0()); }
		ruleInterfaceTypeName
		{ after(grammarAccess.getMethodSpecAccess().getInterfaceTypeNameInterfaceTypeNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodName__IdAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodNameAccess().getIdIDENTIFIERTerminalRuleCall_0()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getMethodNameAccess().getIdIDENTIFIERTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceTypeName__TypeNameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceTypeNameAccess().getTypeNameTypeNameParserRuleCall_0()); }
		ruleTypeName
		{ after(grammarAccess.getInterfaceTypeNameAccess().getTypeNameTypeNameParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__MapAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTypeAccess().getMapMAPTerminalRuleCall_0_0()); }
		RULE_MAP
		{ after(grammarAccess.getMapTypeAccess().getMapMAPTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__KeyTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTypeAccess().getKeyTypeKeyTypeParserRuleCall_2_0()); }
		ruleKeyType
		{ after(grammarAccess.getMapTypeAccess().getKeyTypeKeyTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__ElementTypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTypeAccess().getElementTypeElementTypeParserRuleCall_4_0()); }
		ruleElementType
		{ after(grammarAccess.getMapTypeAccess().getElementTypeElementTypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyType__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyTypeAccess().getTypeTypeParserRuleCall_0()); }
		ruleType
		{ after(grammarAccess.getKeyTypeAccess().getTypeTypeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__ChanAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelTypeAccess().getChanCHANTerminalRuleCall_0_0_0_0()); }
		RULE_CHAN
		{ after(grammarAccess.getChannelTypeAccess().getChanCHANTerminalRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__ChannelTypeLinhaAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelTypeAccess().getChannelTypeLinhaChannelTypeLinhaParserRuleCall_0_0_1_0()); }
		ruleChannelTypeLinha
		{ after(grammarAccess.getChannelTypeAccess().getChannelTypeLinhaChannelTypeLinhaParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__ChanAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelTypeAccess().getChanCHANTerminalRuleCall_0_1_1_0()); }
		RULE_CHAN
		{ after(grammarAccess.getChannelTypeAccess().getChanCHANTerminalRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__ElementTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelTypeAccess().getElementTypeElementTypeParserRuleCall_1_0()); }
		ruleElementType
		{ after(grammarAccess.getChannelTypeAccess().getElementTypeElementTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelTypeLinha__ANY_OTHERAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelTypeLinhaAccess().getANY_OTHERANY_OTHERTerminalRuleCall_1_0()); }
		RULE_ANY_OTHER
		{ after(grammarAccess.getChannelTypeLinhaAccess().getANY_OTHERANY_OTHERTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatementListAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getStatementListStatementListParserRuleCall_1_0()); }
		ruleStatementList
		{ after(grammarAccess.getBlockAccess().getStatementListStatementListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__StatementsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementListAccess().getStatementsStatementParserRuleCall_1_0_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementListAccess().getStatementsStatementParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ConstDeclAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getConstDeclConstDeclParserRuleCall_0_0()); }
		ruleConstDecl
		{ after(grammarAccess.getDeclarationAccess().getConstDeclConstDeclParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__TypeDeclAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getTypeDeclTypeDeclParserRuleCall_1_0()); }
		ruleTypeDecl
		{ after(grammarAccess.getDeclarationAccess().getTypeDeclTypeDeclParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__VarDeclAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getVarDeclVarDeclParserRuleCall_2_0()); }
		ruleVarDecl
		{ after(grammarAccess.getDeclarationAccess().getVarDeclVarDeclParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDecl__DeclarationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopLevelDeclAccess().getDeclarationDeclarationParserRuleCall_0_0()); }
		ruleDeclaration
		{ after(grammarAccess.getTopLevelDeclAccess().getDeclarationDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDecl__FunctionDeclAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopLevelDeclAccess().getFunctionDeclFunctionDeclParserRuleCall_1_0()); }
		ruleFunctionDecl
		{ after(grammarAccess.getTopLevelDeclAccess().getFunctionDeclFunctionDeclParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDecl__MethodDeclAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopLevelDeclAccess().getMethodDeclMethodDeclParserRuleCall_2_0()); }
		ruleMethodDecl
		{ after(grammarAccess.getTopLevelDeclAccess().getMethodDeclMethodDeclParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__ConstAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstDeclAccess().getConstConstKeyword_0_0()); }
		(
			{ before(grammarAccess.getConstDeclAccess().getConstConstKeyword_0_0()); }
			'const'
			{ after(grammarAccess.getConstDeclAccess().getConstConstKeyword_0_0()); }
		)
		{ after(grammarAccess.getConstDeclAccess().getConstConstKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__ConstSpecAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstDeclAccess().getConstSpecConstSpecParserRuleCall_1_0_0()); }
		ruleConstSpec
		{ after(grammarAccess.getConstDeclAccess().getConstSpecConstSpecParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__ConstSpec1Assignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstDeclAccess().getConstSpec1ConstSpecParserRuleCall_1_1_1_0()); }
		ruleConstSpec
		{ after(grammarAccess.getConstDeclAccess().getConstSpec1ConstSpecParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__IdentifierListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
		ruleIdentifierList
		{ after(grammarAccess.getConstSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__TypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstSpecAccess().getTypeTypeParserRuleCall_1_0_0()); }
		ruleType
		{ after(grammarAccess.getConstSpecAccess().getTypeTypeParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__ExpressionListAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstSpecAccess().getExpressionListExpressionListParserRuleCall_1_2_0()); }
		ruleExpressionList
		{ after(grammarAccess.getConstSpecAccess().getExpressionListExpressionListParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierListAccess().getIdIDENTIFIERTerminalRuleCall_0_0()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getIdentifierListAccess().getIdIDENTIFIERTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Id1Assignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierListAccess().getId1IDENTIFIERTerminalRuleCall_1_1_0()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getIdentifierListAccess().getId1IDENTIFIERTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__ExpressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Expression1Assignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionListAccess().getExpression1ExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionListAccess().getExpression1ExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__TypekeywordAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclAccess().getTypekeywordTypeKeyword_0_0()); }
		(
			{ before(grammarAccess.getTypeDeclAccess().getTypekeywordTypeKeyword_0_0()); }
			'type'
			{ after(grammarAccess.getTypeDeclAccess().getTypekeywordTypeKeyword_0_0()); }
		)
		{ after(grammarAccess.getTypeDeclAccess().getTypekeywordTypeKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__TypeSpecAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclAccess().getTypeSpecTypeSpecParserRuleCall_1_0_0()); }
		ruleTypeSpec
		{ after(grammarAccess.getTypeDeclAccess().getTypeSpecTypeSpecParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__TypeSpec1Assignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclAccess().getTypeSpec1TypeSpecParserRuleCall_1_1_1_0()); }
		ruleTypeSpec
		{ after(grammarAccess.getTypeDeclAccess().getTypeSpec1TypeSpecParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpec__AliasDeclAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSpecAccess().getAliasDeclAliasDeclParserRuleCall_0_0()); }
		ruleAliasDecl
		{ after(grammarAccess.getTypeSpecAccess().getAliasDeclAliasDeclParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpec__TypeDefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSpecAccess().getTypeDefTypeDefParserRuleCall_1_0()); }
		ruleTypeDef
		{ after(grammarAccess.getTypeSpecAccess().getTypeDefTypeDefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAliasDeclAccess().getIdIDENTIFIERTerminalRuleCall_0_0()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getAliasDeclAccess().getIdIDENTIFIERTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAliasDeclAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getAliasDeclAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefAccess().getIdIDENTIFIERTerminalRuleCall_0_0()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getTypeDefAccess().getIdIDENTIFIERTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getTypeDefAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__VarSpecAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getVarSpecVarSpecParserRuleCall_1_0_0()); }
		ruleVarSpec
		{ after(grammarAccess.getVarDeclAccess().getVarSpecVarSpecParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__VarSpec1Assignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getVarSpec1VarSpecParserRuleCall_1_1_1_0()); }
		ruleVarSpec
		{ after(grammarAccess.getVarDeclAccess().getVarSpec1VarSpecParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__IdentifierListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
		ruleIdentifierList
		{ after(grammarAccess.getVarSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__TypeAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarSpecAccess().getTypeTypeParserRuleCall_1_0_0_0()); }
		ruleType
		{ after(grammarAccess.getVarSpecAccess().getTypeTypeParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__ExpressionListAssignment_1_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_0()); }
		ruleExpressionList
		{ after(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__ExpressionListAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_1_1_0()); }
		ruleExpressionList
		{ after(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__IdentifierListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortVarDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
		ruleIdentifierList
		{ after(grammarAccess.getShortVarDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__ExpressionListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortVarDeclAccess().getExpressionListExpressionListParserRuleCall_2_0()); }
		ruleExpressionList
		{ after(grammarAccess.getShortVarDeclAccess().getExpressionListExpressionListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__FunctionNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDeclAccess().getFunctionNameFunctionNameParserRuleCall_1_0()); }
		ruleFunctionName
		{ after(grammarAccess.getFunctionDeclAccess().getFunctionNameFunctionNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__SignatureAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDeclAccess().getSignatureSignatureParserRuleCall_2_0()); }
		ruleSignature
		{ after(grammarAccess.getFunctionDeclAccess().getSignatureSignatureParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__FunctionBodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDeclAccess().getFunctionBodyFunctionBodyParserRuleCall_3_0()); }
		ruleFunctionBody
		{ after(grammarAccess.getFunctionDeclAccess().getFunctionBodyFunctionBodyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionName__IdAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionNameAccess().getIdIDENTIFIERTerminalRuleCall_0()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getFunctionNameAccess().getIdIDENTIFIERTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__BlockAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getBlockBlockParserRuleCall_0()); }
		ruleBlock
		{ after(grammarAccess.getFunctionBodyAccess().getBlockBlockParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__ReceiverAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclAccess().getReceiverReceiverParserRuleCall_1_0()); }
		ruleReceiver
		{ after(grammarAccess.getMethodDeclAccess().getReceiverReceiverParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__MethodNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclAccess().getMethodNameMethodNameParserRuleCall_2_0()); }
		ruleMethodName
		{ after(grammarAccess.getMethodDeclAccess().getMethodNameMethodNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__SignatureAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclAccess().getSignatureSignatureParserRuleCall_3_0()); }
		ruleSignature
		{ after(grammarAccess.getMethodDeclAccess().getSignatureSignatureParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__FunctionBodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclAccess().getFunctionBodyFunctionBodyParserRuleCall_4_0()); }
		ruleFunctionBody
		{ after(grammarAccess.getMethodDeclAccess().getFunctionBodyFunctionBodyParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Receiver__ParametersAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReceiverAccess().getParametersParametersParserRuleCall_0()); }
		ruleParameters
		{ after(grammarAccess.getReceiverAccess().getParametersParametersParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__LiteralAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_0()); }
		ruleLiteral
		{ after(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__OperandNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getOperandNameOperandNameParserRuleCall_1_0()); }
		ruleOperandName
		{ after(grammarAccess.getOperandAccess().getOperandNameOperandNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__ExpressionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getOperandAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__BasicLitAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getBasicLitBasicLitParserRuleCall_0_0()); }
		ruleBasicLit
		{ after(grammarAccess.getLiteralAccess().getBasicLitBasicLitParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__CompositeLitAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getCompositeLitCompositeLitParserRuleCall_1_0()); }
		ruleCompositeLit
		{ after(grammarAccess.getLiteralAccess().getCompositeLitCompositeLitParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__FunctionLitAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getFunctionLitFunctionLitParserRuleCall_2_0()); }
		ruleFunctionLit
		{ after(grammarAccess.getLiteralAccess().getFunctionLitFunctionLitParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicLit__Int_litAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicLitAccess().getInt_litINT_LITTerminalRuleCall_0_0()); }
		RULE_INT_LIT
		{ after(grammarAccess.getBasicLitAccess().getInt_litINT_LITTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicLit__Float_litAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicLitAccess().getFloat_litFLOAT_LITParserRuleCall_1_0()); }
		ruleFLOAT_LIT
		{ after(grammarAccess.getBasicLitAccess().getFloat_litFLOAT_LITParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicLit__Imaginary_litAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicLitAccess().getImaginary_litIMAGINARY_LITParserRuleCall_2_0()); }
		ruleIMAGINARY_LIT
		{ after(grammarAccess.getBasicLitAccess().getImaginary_litIMAGINARY_LITParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicLit__Rune_litAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicLitAccess().getRune_litRUNE_LITTerminalRuleCall_3_0()); }
		RULE_RUNE_LIT
		{ after(grammarAccess.getBasicLitAccess().getRune_litRUNE_LITTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicLit__String_litAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicLitAccess().getString_litSTRING_LITTerminalRuleCall_4_0()); }
		RULE_STRING_LIT
		{ after(grammarAccess.getBasicLitAccess().getString_litSTRING_LITTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperandName__IdAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandNameAccess().getIdIDENTIFIERTerminalRuleCall_0()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getOperandNameAccess().getIdIDENTIFIERTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__LiteralTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeLitAccess().getLiteralTypeLiteralTypeParserRuleCall_0_0()); }
		ruleLiteralType
		{ after(grammarAccess.getCompositeLitAccess().getLiteralTypeLiteralTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__LiteralValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeLitAccess().getLiteralValueLiteralValueParserRuleCall_1_0()); }
		ruleLiteralValue
		{ after(grammarAccess.getCompositeLitAccess().getLiteralValueLiteralValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__StructTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getStructTypeStructTypeParserRuleCall_0_0()); }
		ruleStructType
		{ after(grammarAccess.getLiteralTypeAccess().getStructTypeStructTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__MapTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getMapTypeMapTypeParserRuleCall_1_0()); }
		ruleMapType
		{ after(grammarAccess.getLiteralTypeAccess().getMapTypeMapTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__TypeNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getTypeNameTypeNameParserRuleCall_2_0()); }
		ruleTypeName
		{ after(grammarAccess.getLiteralTypeAccess().getTypeNameTypeNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__LiteralTypeLinhaAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getLiteralTypeLinhaLiteralTypeLinhaParserRuleCall_3_1_0()); }
		ruleLiteralTypeLinha
		{ after(grammarAccess.getLiteralTypeAccess().getLiteralTypeLinhaLiteralTypeLinhaParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__ArrayLengthAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeLinhaAccess().getArrayLengthArrayLengthParserRuleCall_0_0_0()); }
		ruleArrayLength
		{ after(grammarAccess.getLiteralTypeLinhaAccess().getArrayLengthArrayLengthParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__ElementTypeAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeElementTypeParserRuleCall_0_2_0()); }
		ruleElementType
		{ after(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeElementTypeParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__ElementTypeAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeElementTypeParserRuleCall_1_2_0()); }
		ruleElementType
		{ after(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeElementTypeParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__ElementTypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeElementTypeParserRuleCall_2_1_0()); }
		ruleElementType
		{ after(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeElementTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__ElementListAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralValueAccess().getElementListElementListParserRuleCall_2_0_0()); }
		ruleElementList
		{ after(grammarAccess.getLiteralValueAccess().getElementListElementListParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__KeyedElementAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_0_0()); }
		ruleKeyedElement
		{ after(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__KeyedElement1Assignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementListAccess().getKeyedElement1KeyedElementParserRuleCall_1_1_0()); }
		ruleKeyedElement
		{ after(grammarAccess.getElementListAccess().getKeyedElement1KeyedElementParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__KeyAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyedElementAccess().getKeyKeyParserRuleCall_0_0_0()); }
		ruleKey
		{ after(grammarAccess.getKeyedElementAccess().getKeyKeyParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__ElementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyedElementAccess().getElementElementParserRuleCall_1_0()); }
		ruleElement
		{ after(grammarAccess.getKeyedElementAccess().getElementElementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__FieldNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyAccess().getFieldNameFieldNameParserRuleCall_0_0()); }
		ruleFieldName
		{ after(grammarAccess.getKeyAccess().getFieldNameFieldNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getKeyAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__LiteralValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyAccess().getLiteralValueLiteralValueParserRuleCall_2_0()); }
		ruleLiteralValue
		{ after(grammarAccess.getKeyAccess().getLiteralValueLiteralValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__IdAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldNameAccess().getIdIDENTIFIERTerminalRuleCall_0()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getFieldNameAccess().getIdIDENTIFIERTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__ExpressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getExpressionExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getElementAccess().getExpressionExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__LiteralValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getLiteralValueLiteralValueParserRuleCall_1_0()); }
		ruleLiteralValue
		{ after(grammarAccess.getElementAccess().getLiteralValueLiteralValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__FuncAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionLitAccess().getFuncFuncKeyword_0_0()); }
		(
			{ before(grammarAccess.getFunctionLitAccess().getFuncFuncKeyword_0_0()); }
			'func'
			{ after(grammarAccess.getFunctionLitAccess().getFuncFuncKeyword_0_0()); }
		)
		{ after(grammarAccess.getFunctionLitAccess().getFuncFuncKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__SignatureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionLitAccess().getSignatureSignatureParserRuleCall_1_0()); }
		ruleSignature
		{ after(grammarAccess.getFunctionLitAccess().getSignatureSignatureParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__FunctionBodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionLitAccess().getFunctionBodyFunctionBodyParserRuleCall_2_0()); }
		ruleFunctionBody
		{ after(grammarAccess.getFunctionLitAccess().getFunctionBodyFunctionBodyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__OperandAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getOperandOperandParserRuleCall_0_0_0()); }
		ruleOperand
		{ after(grammarAccess.getPrimaryExprAccess().getOperandOperandParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__PrimaryExprLinhaAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_0_1_0()); }
		rulePrimaryExprLinha
		{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__ConversionAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getConversionConversionParserRuleCall_1_0_0()); }
		ruleConversion
		{ after(grammarAccess.getPrimaryExprAccess().getConversionConversionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__PrimaryExprLinhaAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_1_0()); }
		rulePrimaryExprLinha
		{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__MethodExprAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getMethodExprMethodExprParserRuleCall_2_0_0()); }
		ruleMethodExpr
		{ after(grammarAccess.getPrimaryExprAccess().getMethodExprMethodExprParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__PrimaryExprLinhaAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_2_1_0()); }
		rulePrimaryExprLinha
		{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__SelectorAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getSelectorSelectorParserRuleCall_1_0_0_0()); }
		ruleSelector
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getSelectorSelectorParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__PrimaryExprLinhaAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_0_1_0()); }
		rulePrimaryExprLinha
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__IndexAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getIndexIndexParserRuleCall_1_1_0_0()); }
		ruleIndex
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getIndexIndexParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__PrimaryExprLinhaAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_1_1_0()); }
		rulePrimaryExprLinha
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__SliceAssignment_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getSliceSliceParserRuleCall_1_2_0_0()); }
		ruleSlice
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getSliceSliceParserRuleCall_1_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__PrimaryExprLinhaAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_2_1_0()); }
		rulePrimaryExprLinha
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__TypeAssertionAssignment_1_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getTypeAssertionTypeAssertionParserRuleCall_1_3_0_0()); }
		ruleTypeAssertion
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getTypeAssertionTypeAssertionParserRuleCall_1_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__PrimaryExprLinhaAssignment_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_3_1_0()); }
		rulePrimaryExprLinha
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__ArgumentsAssignment_1_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getArgumentsArgumentsParserRuleCall_1_4_0_0()); }
		ruleArguments
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getArgumentsArgumentsParserRuleCall_1_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__PrimaryExprLinhaAssignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_4_1_0()); }
		rulePrimaryExprLinha
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__IdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getIdIDENTIFIERTerminalRuleCall_1_0()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getSelectorAccess().getIdIDENTIFIERTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getIndexAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__ExpressionAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_0_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Expression1Assignment_1_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getExpression1ExpressionParserRuleCall_1_0_3_0()); }
		ruleExpression
		{ after(grammarAccess.getSliceAccess().getExpression1ExpressionParserRuleCall_1_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__ExpressionAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Expression1Assignment_1_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getExpression1ExpressionParserRuleCall_1_1_3_0()); }
		ruleExpression
		{ after(grammarAccess.getSliceAccess().getExpression1ExpressionParserRuleCall_1_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Expression2Assignment_1_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getExpression2ExpressionParserRuleCall_1_1_5_0()); }
		ruleExpression
		{ after(grammarAccess.getSliceAccess().getExpression2ExpressionParserRuleCall_1_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAssertionAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getTypeAssertionAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__ExpressionListAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_2_0_0_0()); }
		ruleExpressionList
		{ after(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__TypeAssignment_2_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_2_0_1_0_0()); }
		ruleType
		{ after(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_2_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__ExpressionListAssignment_2_0_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_2_0_1_1_1_0()); }
		ruleExpressionList
		{ after(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_2_0_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__ReceiverTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodExprAccess().getReceiverTypeReceiverTypeParserRuleCall_0_0()); }
		ruleReceiverType
		{ after(grammarAccess.getMethodExprAccess().getReceiverTypeReceiverTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__MethodNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodExprAccess().getMethodNameMethodNameParserRuleCall_2_0()); }
		ruleMethodName
		{ after(grammarAccess.getMethodExprAccess().getMethodNameMethodNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiverType__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReceiverTypeAccess().getTypeTypeParserRuleCall_0()); }
		ruleType
		{ after(grammarAccess.getReceiverTypeAccess().getTypeTypeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__UnaryExprAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getUnaryExprUnaryExprParserRuleCall_0_0()); }
		ruleUnaryExpr
		{ after(grammarAccess.getExpressionAccess().getUnaryExprUnaryExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Expression_LinhaAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExpression_LinhaExpression_LinhaParserRuleCall_1_0()); }
		ruleExpression_Linha
		{ after(grammarAccess.getExpressionAccess().getExpression_LinhaExpression_LinhaParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Linha__BINARY_OPAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpression_LinhaAccess().getBINARY_OPBINARY_OPParserRuleCall_1_0_0()); }
		ruleBINARY_OP
		{ after(grammarAccess.getExpression_LinhaAccess().getBINARY_OPBINARY_OPParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Linha__ExpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpression_LinhaAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpression_LinhaAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Linha__Expression_LinhaAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpression_LinhaAccess().getExpression_LinhaExpression_LinhaParserRuleCall_1_2_0()); }
		ruleExpression_Linha
		{ after(grammarAccess.getExpression_LinhaAccess().getExpression_LinhaExpression_LinhaParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__PrimaryExprAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getPrimaryExprPrimaryExprParserRuleCall_0_0()); }
		rulePrimaryExpr
		{ after(grammarAccess.getUnaryExprAccess().getPrimaryExprPrimaryExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__UnaryExprAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getUnaryExprUnaryExprParserRuleCall_1_1_0()); }
		ruleUnaryExpr
		{ after(grammarAccess.getUnaryExprAccess().getUnaryExprUnaryExprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_OP__OrAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBINARY_OPAccess().getOrVerticalLineVerticalLineKeyword_0_0()); }
		(
			{ before(grammarAccess.getBINARY_OPAccess().getOrVerticalLineVerticalLineKeyword_0_0()); }
			'||'
			{ after(grammarAccess.getBINARY_OPAccess().getOrVerticalLineVerticalLineKeyword_0_0()); }
		)
		{ after(grammarAccess.getBINARY_OPAccess().getOrVerticalLineVerticalLineKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_OP__AndAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBINARY_OPAccess().getAndAmpersandAmpersandKeyword_1_0()); }
		(
			{ before(grammarAccess.getBINARY_OPAccess().getAndAmpersandAmpersandKeyword_1_0()); }
			'&&'
			{ after(grammarAccess.getBINARY_OPAccess().getAndAmpersandAmpersandKeyword_1_0()); }
		)
		{ after(grammarAccess.getBINARY_OPAccess().getAndAmpersandAmpersandKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_OP__REL_OPAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBINARY_OPAccess().getREL_OPREL_OPTerminalRuleCall_2_0()); }
		RULE_REL_OP
		{ after(grammarAccess.getBINARY_OPAccess().getREL_OPREL_OPTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_OP__ADD_OPAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBINARY_OPAccess().getADD_OPADD_OPTerminalRuleCall_3_0()); }
		RULE_ADD_OP
		{ after(grammarAccess.getBINARY_OPAccess().getADD_OPADD_OPTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY_OP__MUL_OPAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBINARY_OPAccess().getMUL_OPMUL_OPTerminalRuleCall_4_0()); }
		RULE_MUL_OP
		{ after(grammarAccess.getBINARY_OPAccess().getMUL_OPMUL_OPTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConversionAccess().getTypeTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getConversionAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__DeclarationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getDeclarationDeclarationParserRuleCall_0_0()); }
		ruleDeclaration
		{ after(grammarAccess.getStatementAccess().getDeclarationDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__LabeledStmtAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getLabeledStmtLabeledStmtParserRuleCall_1_0()); }
		ruleLabeledStmt
		{ after(grammarAccess.getStatementAccess().getLabeledStmtLabeledStmtParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__SimpleStmtAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getSimpleStmtSimpleStmtParserRuleCall_2_0()); }
		ruleSimpleStmt
		{ after(grammarAccess.getStatementAccess().getSimpleStmtSimpleStmtParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__GoStmtAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGoStmtGoStmtParserRuleCall_3_0()); }
		ruleGoStmt
		{ after(grammarAccess.getStatementAccess().getGoStmtGoStmtParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ReturnStmtAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getReturnStmtReturnStmtParserRuleCall_4_0()); }
		ruleReturnStmt
		{ after(grammarAccess.getStatementAccess().getReturnStmtReturnStmtParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__BreakStmtAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getBreakStmtBreakStmtParserRuleCall_5_0()); }
		ruleBreakStmt
		{ after(grammarAccess.getStatementAccess().getBreakStmtBreakStmtParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ContinueStmtAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getContinueStmtContinueStmtParserRuleCall_6_0()); }
		ruleContinueStmt
		{ after(grammarAccess.getStatementAccess().getContinueStmtContinueStmtParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__GotoStmtAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGotoStmtGotoStmtParserRuleCall_7_0()); }
		ruleGotoStmt
		{ after(grammarAccess.getStatementAccess().getGotoStmtGotoStmtParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__FallthroughStmtAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getFallthroughStmtFallthroughStmtParserRuleCall_8_0()); }
		ruleFallthroughStmt
		{ after(grammarAccess.getStatementAccess().getFallthroughStmtFallthroughStmtParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__BlockAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getBlockBlockParserRuleCall_9_0()); }
		ruleBlock
		{ after(grammarAccess.getStatementAccess().getBlockBlockParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__IfStmtAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getIfStmtIfStmtParserRuleCall_10_0()); }
		ruleIfStmt
		{ after(grammarAccess.getStatementAccess().getIfStmtIfStmtParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__SwitchStmtAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getSwitchStmtSwitchStmtParserRuleCall_11_0()); }
		ruleSwitchStmt
		{ after(grammarAccess.getStatementAccess().getSwitchStmtSwitchStmtParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__SelectStmtAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getSelectStmtSelectStmtParserRuleCall_12_0()); }
		ruleSelectStmt
		{ after(grammarAccess.getStatementAccess().getSelectStmtSelectStmtParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ForStmtAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getForStmtForStmtParserRuleCall_13_0()); }
		ruleForStmt
		{ after(grammarAccess.getStatementAccess().getForStmtForStmtParserRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__DeferStmtAssignment_14
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getDeferStmtDeferStmtParserRuleCall_14_0()); }
		ruleDeferStmt
		{ after(grammarAccess.getStatementAccess().getDeferStmtDeferStmtParserRuleCall_14_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__EmptyStmtAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getEmptyStmtEmptyStmtParserRuleCall_0_0()); }
		ruleEmptyStmt
		{ after(grammarAccess.getSimpleStmtAccess().getEmptyStmtEmptyStmtParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__ExpressionAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getExpressionExpressionParserRuleCall_1_0_0()); }
		ruleExpression
		{ after(grammarAccess.getSimpleStmtAccess().getExpressionExpressionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__SimpleStmtLinhaAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getSimpleStmtLinhaSimpleStmtLinhaParserRuleCall_1_1_0()); }
		ruleSimpleStmtLinha
		{ after(grammarAccess.getSimpleStmtAccess().getSimpleStmtLinhaSimpleStmtLinhaParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__ShortVarDeclAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getShortVarDeclShortVarDeclParserRuleCall_2_0()); }
		ruleShortVarDecl
		{ after(grammarAccess.getSimpleStmtAccess().getShortVarDeclShortVarDeclParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmtLinha__ExpressionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtLinhaAccess().getExpressionExpressionParserRuleCall_0_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSimpleStmtLinhaAccess().getExpressionExpressionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmtLinha__Expression1Assignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtLinhaAccess().getExpression1ExpressionParserRuleCall_2_0_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSimpleStmtLinhaAccess().getExpression1ExpressionParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmtLinha__Assign_opAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtLinhaAccess().getAssign_opAssign_opParserRuleCall_2_1_0()); }
		ruleassign_op
		{ after(grammarAccess.getSimpleStmtLinhaAccess().getAssign_opAssign_opParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmtLinha__ExpressionListAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtLinhaAccess().getExpressionListExpressionListParserRuleCall_2_2_0()); }
		ruleExpressionList
		{ after(grammarAccess.getSimpleStmtLinhaAccess().getExpressionListExpressionListParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmtLinha__ANY_OTHERAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtLinhaAccess().getANY_OTHERANY_OTHERTerminalRuleCall_3_0()); }
		RULE_ANY_OTHER
		{ after(grammarAccess.getSimpleStmtLinhaAccess().getANY_OTHERANY_OTHERTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyStmt__ANY_OTHERAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmptyStmtAccess().getANY_OTHERANY_OTHERTerminalRuleCall_0()); }
		RULE_ANY_OTHER
		{ after(grammarAccess.getEmptyStmtAccess().getANY_OTHERANY_OTHERTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__LabelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabeledStmtAccess().getLabelLabelParserRuleCall_0_0()); }
		ruleLabel
		{ after(grammarAccess.getLabeledStmtAccess().getLabelLabelParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__StatementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabeledStmtAccess().getStatementStatementParserRuleCall_2_0()); }
		ruleStatement
		{ after(grammarAccess.getLabeledStmtAccess().getStatementStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__IdAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelAccess().getIdIDENTIFIERTerminalRuleCall_0()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getLabelAccess().getIdIDENTIFIERTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign_op__ADD_OPAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssign_opAccess().getADD_OPADD_OPTerminalRuleCall_0_0_0()); }
		RULE_ADD_OP
		{ after(grammarAccess.getAssign_opAccess().getADD_OPADD_OPTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign_op__MUL_OPAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssign_opAccess().getMUL_OPMUL_OPTerminalRuleCall_0_1_0()); }
		RULE_MUL_OP
		{ after(grammarAccess.getAssign_opAccess().getMUL_OPMUL_OPTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__IfAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getIfIFTerminalRuleCall_0_0_0()); }
		RULE_IF
		{ after(grammarAccess.getIfStmtAccess().getIfIFTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ExpressionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getExpressionExpressionParserRuleCall_0_1_0()); }
		ruleExpression
		{ after(grammarAccess.getIfStmtAccess().getExpressionExpressionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__IfStmtLinhaAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getIfStmtLinhaIfStmtLinhaParserRuleCall_0_2_0()); }
		ruleIfStmtLinha
		{ after(grammarAccess.getIfStmtAccess().getIfStmtLinhaIfStmtLinhaParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__IfAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getIfIFTerminalRuleCall_1_0_0()); }
		RULE_IF
		{ after(grammarAccess.getIfStmtAccess().getIfIFTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__EmptyStmtAssignment_1_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getEmptyStmtEmptyStmtParserRuleCall_1_1_0_0_0()); }
		ruleEmptyStmt
		{ after(grammarAccess.getIfStmtAccess().getEmptyStmtEmptyStmtParserRuleCall_1_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ShortVarDeclAssignment_1_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getShortVarDeclShortVarDeclParserRuleCall_1_1_0_1_0()); }
		ruleShortVarDecl
		{ after(grammarAccess.getIfStmtAccess().getShortVarDeclShortVarDeclParserRuleCall_1_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getExpressionExpressionParserRuleCall_1_2_0()); }
		ruleExpression
		{ after(grammarAccess.getIfStmtAccess().getExpressionExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__BlockAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_1_3_0()); }
		ruleBlock
		{ after(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ElseAssignment_1_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getElseELSETerminalRuleCall_1_4_0_0()); }
		RULE_ELSE
		{ after(grammarAccess.getIfStmtAccess().getElseELSETerminalRuleCall_1_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__IfStmtAssignment_1_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getIfStmtIfStmtParserRuleCall_1_4_1_0_0()); }
		ruleIfStmt
		{ after(grammarAccess.getIfStmtAccess().getIfStmtIfStmtParserRuleCall_1_4_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Block1Assignment_1_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getBlock1BlockParserRuleCall_1_4_1_1_0()); }
		ruleBlock
		{ after(grammarAccess.getIfStmtAccess().getBlock1BlockParserRuleCall_1_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__SimpleStmtLinhaAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtLinhaAccess().getSimpleStmtLinhaSimpleStmtLinhaParserRuleCall_0_0_0()); }
		ruleSimpleStmtLinha
		{ after(grammarAccess.getIfStmtLinhaAccess().getSimpleStmtLinhaSimpleStmtLinhaParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__ExpressionAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtLinhaAccess().getExpressionExpressionParserRuleCall_0_2_0()); }
		ruleExpression
		{ after(grammarAccess.getIfStmtLinhaAccess().getExpressionExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__BlockAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtLinhaAccess().getBlockBlockParserRuleCall_0_3_0()); }
		ruleBlock
		{ after(grammarAccess.getIfStmtLinhaAccess().getBlockBlockParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__ElseAssignment_0_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtLinhaAccess().getElseELSETerminalRuleCall_0_4_0_0()); }
		RULE_ELSE
		{ after(grammarAccess.getIfStmtLinhaAccess().getElseELSETerminalRuleCall_0_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__IfStmtAssignment_0_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtLinhaAccess().getIfStmtIfStmtParserRuleCall_0_4_1_0_0()); }
		ruleIfStmt
		{ after(grammarAccess.getIfStmtLinhaAccess().getIfStmtIfStmtParserRuleCall_0_4_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__Block1Assignment_0_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtLinhaAccess().getBlock1BlockParserRuleCall_0_4_1_1_0()); }
		ruleBlock
		{ after(grammarAccess.getIfStmtLinhaAccess().getBlock1BlockParserRuleCall_0_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__BlockAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtLinhaAccess().getBlockBlockParserRuleCall_1_0_0()); }
		ruleBlock
		{ after(grammarAccess.getIfStmtLinhaAccess().getBlockBlockParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__ElseAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtLinhaAccess().getElseELSETerminalRuleCall_1_1_0_0()); }
		RULE_ELSE
		{ after(grammarAccess.getIfStmtLinhaAccess().getElseELSETerminalRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__IfStmtAssignment_1_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtLinhaAccess().getIfStmtIfStmtParserRuleCall_1_1_1_0_0()); }
		ruleIfStmt
		{ after(grammarAccess.getIfStmtLinhaAccess().getIfStmtIfStmtParserRuleCall_1_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmtLinha__Block1Assignment_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtLinhaAccess().getBlock1BlockParserRuleCall_1_1_1_1_0()); }
		ruleBlock
		{ after(grammarAccess.getIfStmtLinhaAccess().getBlock1BlockParserRuleCall_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__SwitchAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStmtAccess().getSwitchSWITCHTerminalRuleCall_0_0()); }
		RULE_SWITCH
		{ after(grammarAccess.getSwitchStmtAccess().getSwitchSWITCHTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__SimpleStmtAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0_0()); }
		ruleSimpleStmt
		{ after(grammarAccess.getSwitchStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__SwitchStmtLinhaAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStmtAccess().getSwitchStmtLinhaSwitchStmtLinhaParserRuleCall_2_0()); }
		ruleSwitchStmtLinha
		{ after(grammarAccess.getSwitchStmtAccess().getSwitchStmtLinhaSwitchStmtLinhaParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__PrimaryExprAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStmtLinhaAccess().getPrimaryExprPrimaryExprParserRuleCall_0_0_0()); }
		rulePrimaryExpr
		{ after(grammarAccess.getSwitchStmtLinhaAccess().getPrimaryExprPrimaryExprParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__SwitchStmtLinhaLinhaAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStmtLinhaAccess().getSwitchStmtLinhaLinhaSwitchStmtLinhaLinhaParserRuleCall_0_1_0()); }
		ruleSwitchStmtLinhaLinha
		{ after(grammarAccess.getSwitchStmtLinhaAccess().getSwitchStmtLinhaLinhaSwitchStmtLinhaLinhaParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__Unary_opAssignment_1_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStmtLinhaAccess().getUnary_opUNARY_OPTerminalRuleCall_1_0_0_0_0()); }
		RULE_UNARY_OP
		{ after(grammarAccess.getSwitchStmtLinhaAccess().getUnary_opUNARY_OPTerminalRuleCall_1_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__UnaryExprAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStmtLinhaAccess().getUnaryExprUnaryExprParserRuleCall_1_0_0_1_0()); }
		ruleUnaryExpr
		{ after(grammarAccess.getSwitchStmtLinhaAccess().getUnaryExprUnaryExprParserRuleCall_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__ExpressionAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStmtLinhaAccess().getExpressionExpression_LinhaParserRuleCall_1_0_1_0()); }
		ruleExpression_Linha
		{ after(grammarAccess.getSwitchStmtLinhaAccess().getExpressionExpression_LinhaParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__ExprCaseClauseAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStmtLinhaAccess().getExprCaseClauseExprCaseClauseParserRuleCall_1_2_0()); }
		ruleExprCaseClause
		{ after(grammarAccess.getSwitchStmtLinhaAccess().getExprCaseClauseExprCaseClauseParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__IdAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStmtLinhaAccess().getIdIDENTIFIERTerminalRuleCall_2_0_0_0()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getSwitchStmtLinhaAccess().getIdIDENTIFIERTerminalRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__PrimaryExprAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStmtLinhaAccess().getPrimaryExprPrimaryExprParserRuleCall_2_1_0()); }
		rulePrimaryExpr
		{ after(grammarAccess.getSwitchStmtLinhaAccess().getPrimaryExprPrimaryExprParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__TypekeywordAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStmtLinhaAccess().getTypekeywordTypeKeyword_2_4_0()); }
		(
			{ before(grammarAccess.getSwitchStmtLinhaAccess().getTypekeywordTypeKeyword_2_4_0()); }
			'type'
			{ after(grammarAccess.getSwitchStmtLinhaAccess().getTypekeywordTypeKeyword_2_4_0()); }
		)
		{ after(grammarAccess.getSwitchStmtLinhaAccess().getTypekeywordTypeKeyword_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinha__TypeCaseClauseAssignment_2_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStmtLinhaAccess().getTypeCaseClauseTypeCaseClauseParserRuleCall_2_7_0()); }
		ruleTypeCaseClause
		{ after(grammarAccess.getSwitchStmtLinhaAccess().getTypeCaseClauseTypeCaseClauseParserRuleCall_2_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinhaLinha__ExprCaseClauseAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStmtLinhaLinhaAccess().getExprCaseClauseExprCaseClauseParserRuleCall_0_1_0()); }
		ruleExprCaseClause
		{ after(grammarAccess.getSwitchStmtLinhaLinhaAccess().getExprCaseClauseExprCaseClauseParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinhaLinha__TypekeywordAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStmtLinhaLinhaAccess().getTypekeywordTypeKeyword_1_2_0()); }
		(
			{ before(grammarAccess.getSwitchStmtLinhaLinhaAccess().getTypekeywordTypeKeyword_1_2_0()); }
			'type'
			{ after(grammarAccess.getSwitchStmtLinhaLinhaAccess().getTypekeywordTypeKeyword_1_2_0()); }
		)
		{ after(grammarAccess.getSwitchStmtLinhaLinhaAccess().getTypekeywordTypeKeyword_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmtLinhaLinha__TypeCaseClauseAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStmtLinhaLinhaAccess().getTypeCaseClauseTypeCaseClauseParserRuleCall_1_5_0()); }
		ruleTypeCaseClause
		{ after(grammarAccess.getSwitchStmtLinhaLinhaAccess().getTypeCaseClauseTypeCaseClauseParserRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__ExprSwitchCaseAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseExprSwitchCaseParserRuleCall_0_0()); }
		ruleExprSwitchCase
		{ after(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseExprSwitchCaseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__StatementListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0()); }
		ruleStatementList
		{ after(grammarAccess.getExprCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__CaseAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSwitchCaseAccess().getCaseCASETerminalRuleCall_0_0_0()); }
		RULE_CASE
		{ after(grammarAccess.getExprSwitchCaseAccess().getCaseCASETerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__ExpressionListAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSwitchCaseAccess().getExpressionListExpressionListParserRuleCall_0_1_0()); }
		ruleExpressionList
		{ after(grammarAccess.getExprSwitchCaseAccess().getExpressionListExpressionListParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__DefaultAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSwitchCaseAccess().getDefaultDEFAULTTerminalRuleCall_1_0()); }
		RULE_DEFAULT
		{ after(grammarAccess.getExprSwitchCaseAccess().getDefaultDEFAULTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__TypeSwitchCaseAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseTypeSwitchCaseParserRuleCall_0_0()); }
		ruleTypeSwitchCase
		{ after(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseTypeSwitchCaseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__StatementListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0()); }
		ruleStatementList
		{ after(grammarAccess.getTypeCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__CaseAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSwitchCaseAccess().getCaseCASETerminalRuleCall_0_0_0()); }
		RULE_CASE
		{ after(grammarAccess.getTypeSwitchCaseAccess().getCaseCASETerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__TypeListAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSwitchCaseAccess().getTypeListTypeListParserRuleCall_0_1_0()); }
		ruleTypeList
		{ after(grammarAccess.getTypeSwitchCaseAccess().getTypeListTypeListParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__DefaultAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSwitchCaseAccess().getDefaultDEFAULTTerminalRuleCall_1_0()); }
		RULE_DEFAULT
		{ after(grammarAccess.getTypeSwitchCaseAccess().getDefaultDEFAULTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Type1Assignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeListAccess().getType1TypeParserRuleCall_1_1_0()); }
		ruleType
		{ after(grammarAccess.getTypeListAccess().getType1TypeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__ForAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getForFORTerminalRuleCall_0_0()); }
		RULE_FOR
		{ after(grammarAccess.getForStmtAccess().getForFORTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__ExpressionAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getExpressionExpressionParserRuleCall_1_0_0_0()); }
		ruleExpression
		{ after(grammarAccess.getForStmtAccess().getExpressionExpressionParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__ForStmtLinhaAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getForStmtLinhaForStmtLinhaParserRuleCall_1_0_1_0()); }
		ruleForStmtLinha
		{ after(grammarAccess.getForStmtAccess().getForStmtLinhaForStmtLinhaParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__EmptyStmtAssignment_1_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getEmptyStmtEmptyStmtParserRuleCall_1_1_0_0_0()); }
		ruleEmptyStmt
		{ after(grammarAccess.getForStmtAccess().getEmptyStmtEmptyStmtParserRuleCall_1_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__ShortVarDeclAssignment_1_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getShortVarDeclShortVarDeclParserRuleCall_1_1_0_1_0()); }
		ruleShortVarDecl
		{ after(grammarAccess.getForStmtAccess().getShortVarDeclShortVarDeclParserRuleCall_1_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__ConditionAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getConditionConditionParserRuleCall_1_1_2_0()); }
		ruleCondition
		{ after(grammarAccess.getForStmtAccess().getConditionConditionParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__PostStmtAssignment_1_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getPostStmtPostStmtParserRuleCall_1_1_4_0()); }
		rulePostStmt
		{ after(grammarAccess.getForStmtAccess().getPostStmtPostStmtParserRuleCall_1_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__IdentifierListAssignment_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getIdentifierListIdentifierListParserRuleCall_1_2_0_0()); }
		ruleIdentifierList
		{ after(grammarAccess.getForStmtAccess().getIdentifierListIdentifierListParserRuleCall_1_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__RangeAssignment_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getRangeRANGETerminalRuleCall_1_2_2_0()); }
		RULE_RANGE
		{ after(grammarAccess.getForStmtAccess().getRangeRANGETerminalRuleCall_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__ExpressionAssignment_1_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getExpressionExpressionParserRuleCall_1_2_3_0()); }
		ruleExpression
		{ after(grammarAccess.getForStmtAccess().getExpressionExpressionParserRuleCall_1_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__BlockAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getBlockBlockParserRuleCall_2_0()); }
		ruleBlock
		{ after(grammarAccess.getForStmtAccess().getBlockBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__VazioAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtLinhaAccess().getVazioANY_OTHERTerminalRuleCall_0_0()); }
		RULE_ANY_OTHER
		{ after(grammarAccess.getForStmtLinhaAccess().getVazioANY_OTHERTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__ExpressionAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtLinhaAccess().getExpressionExpressionParserRuleCall_1_0_1_0()); }
		ruleExpression
		{ after(grammarAccess.getForStmtLinhaAccess().getExpressionExpressionParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__ForStmtLinhaLinhaAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtLinhaAccess().getForStmtLinhaLinhaForStmtLinhaLinhaParserRuleCall_1_1_0()); }
		ruleForStmtLinhaLinha
		{ after(grammarAccess.getForStmtLinhaAccess().getForStmtLinhaLinhaForStmtLinhaLinhaParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__Expression1Assignment_2_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtLinhaAccess().getExpression1ExpressionParserRuleCall_2_0_0_1_0()); }
		ruleExpression
		{ after(grammarAccess.getForStmtLinhaAccess().getExpression1ExpressionParserRuleCall_2_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__VazioAssignment_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtLinhaAccess().getVazioANY_OTHERTerminalRuleCall_2_0_2_0()); }
		RULE_ANY_OTHER
		{ after(grammarAccess.getForStmtLinhaAccess().getVazioANY_OTHERTerminalRuleCall_2_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__ConditionAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtLinhaAccess().getConditionConditionParserRuleCall_2_2_0()); }
		ruleCondition
		{ after(grammarAccess.getForStmtLinhaAccess().getConditionConditionParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinha__PostStmtAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtLinhaAccess().getPostStmtPostStmtParserRuleCall_2_4_0()); }
		rulePostStmt
		{ after(grammarAccess.getForStmtLinhaAccess().getPostStmtPostStmtParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinhaLinha__Assign_opAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtLinhaLinhaAccess().getAssign_opAssign_opParserRuleCall_0_0_0()); }
		ruleassign_op
		{ after(grammarAccess.getForStmtLinhaLinhaAccess().getAssign_opAssign_opParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinhaLinha__ExpressionListAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtLinhaLinhaAccess().getExpressionListExpressionListParserRuleCall_0_1_0()); }
		ruleExpressionList
		{ after(grammarAccess.getForStmtLinhaLinhaAccess().getExpressionListExpressionListParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinhaLinha__ConditionAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtLinhaLinhaAccess().getConditionConditionParserRuleCall_0_3_0()); }
		ruleCondition
		{ after(grammarAccess.getForStmtLinhaLinhaAccess().getConditionConditionParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinhaLinha__PostStmtAssignment_0_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtLinhaLinhaAccess().getPostStmtPostStmtParserRuleCall_0_5_0()); }
		rulePostStmt
		{ after(grammarAccess.getForStmtLinhaLinhaAccess().getPostStmtPostStmtParserRuleCall_0_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinhaLinha__RangeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtLinhaLinhaAccess().getRangeRANGETerminalRuleCall_1_1_0()); }
		RULE_RANGE
		{ after(grammarAccess.getForStmtLinhaLinhaAccess().getRangeRANGETerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmtLinhaLinha__ExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtLinhaLinhaAccess().getExpressionExpressionParserRuleCall_1_2_0()); }
		ruleExpression
		{ after(grammarAccess.getForStmtLinhaLinhaAccess().getExpressionExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ExpressionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getExpressionExpressionParserRuleCall_0()); }
		ruleExpression
		{ after(grammarAccess.getConditionAccess().getExpressionExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostStmt__SimpleStmtAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_0()); }
		ruleSimpleStmt
		{ after(grammarAccess.getPostStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoStmt__GoAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoStmtAccess().getGoGOTerminalRuleCall_0_0()); }
		RULE_GO
		{ after(grammarAccess.getGoStmtAccess().getGoGOTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoStmt__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoStmtAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getGoStmtAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__SelectAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectStmtAccess().getSelectSELECTTerminalRuleCall_0_0()); }
		RULE_SELECT
		{ after(grammarAccess.getSelectStmtAccess().getSelectSELECTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__CommClauseAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectStmtAccess().getCommClauseCommClauseParserRuleCall_2_0()); }
		ruleCommClause
		{ after(grammarAccess.getSelectStmtAccess().getCommClauseCommClauseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__CommCaseAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommClauseAccess().getCommCaseCommCaseParserRuleCall_0_0()); }
		ruleCommCase
		{ after(grammarAccess.getCommClauseAccess().getCommCaseCommCaseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__StatementListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommClauseAccess().getStatementListStatementListParserRuleCall_2_0()); }
		ruleStatementList
		{ after(grammarAccess.getCommClauseAccess().getStatementListStatementListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__CaseAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommCaseAccess().getCaseCASETerminalRuleCall_0_0_0()); }
		RULE_CASE
		{ after(grammarAccess.getCommCaseAccess().getCaseCASETerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__ExpressionAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommCaseAccess().getExpressionExpressionParserRuleCall_0_1_0_0()); }
		ruleExpression
		{ after(grammarAccess.getCommCaseAccess().getExpressionExpressionParserRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__CommCaseLinhaAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommCaseAccess().getCommCaseLinhaCommCaseLinhaParserRuleCall_0_1_1_0()); }
		ruleCommCaseLinha
		{ after(grammarAccess.getCommCaseAccess().getCommCaseLinhaCommCaseLinhaParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__DefaultAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommCaseAccess().getDefaultDEFAULTTerminalRuleCall_1_0()); }
		RULE_DEFAULT
		{ after(grammarAccess.getCommCaseAccess().getDefaultDEFAULTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCaseLinha__ExpressionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommCaseLinhaAccess().getExpressionExpressionParserRuleCall_0_1_0()); }
		ruleExpression
		{ after(grammarAccess.getCommCaseLinhaAccess().getExpressionExpressionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCaseLinha__Expression1Assignment_1_0_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommCaseLinhaAccess().getExpression1ExpressionParserRuleCall_1_0_0_0_1_0()); }
		ruleExpression
		{ after(grammarAccess.getCommCaseLinhaAccess().getExpression1ExpressionParserRuleCall_1_0_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCaseLinha__IdentifierListAssignment_1_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommCaseLinhaAccess().getIdentifierListIdentifierListParserRuleCall_1_0_1_0_0()); }
		ruleIdentifierList
		{ after(grammarAccess.getCommCaseLinhaAccess().getIdentifierListIdentifierListParserRuleCall_1_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCaseLinha__RecvExprAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommCaseLinhaAccess().getRecvExprRecvExprParserRuleCall_1_1_0()); }
		ruleRecvExpr
		{ after(grammarAccess.getCommCaseLinhaAccess().getRecvExprRecvExprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvExpr__ExpressionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecvExprAccess().getExpressionExpressionParserRuleCall_0()); }
		ruleExpression
		{ after(grammarAccess.getRecvExprAccess().getExpressionExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__ReturnAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnStmtAccess().getReturnRETURNTerminalRuleCall_0_0()); }
		RULE_RETURN
		{ after(grammarAccess.getReturnStmtAccess().getReturnRETURNTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__ExpressionListAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnStmtAccess().getExpressionListExpressionListParserRuleCall_1_0()); }
		ruleExpressionList
		{ after(grammarAccess.getReturnStmtAccess().getExpressionListExpressionListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStmt__BreakAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBreakStmtAccess().getBreakBREAKTerminalRuleCall_0_0()); }
		RULE_BREAK
		{ after(grammarAccess.getBreakStmtAccess().getBreakBREAKTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStmt__LabelAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBreakStmtAccess().getLabelLabelParserRuleCall_1_0()); }
		ruleLabel
		{ after(grammarAccess.getBreakStmtAccess().getLabelLabelParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStmt__ContinueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContinueStmtAccess().getContinueCONTINUETerminalRuleCall_0_0()); }
		RULE_CONTINUE
		{ after(grammarAccess.getContinueStmtAccess().getContinueCONTINUETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStmt__LabelAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContinueStmtAccess().getLabelLabelParserRuleCall_1_0()); }
		ruleLabel
		{ after(grammarAccess.getContinueStmtAccess().getLabelLabelParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStmt__GotoAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGotoStmtAccess().getGotoGOTOTerminalRuleCall_0_0()); }
		RULE_GOTO
		{ after(grammarAccess.getGotoStmtAccess().getGotoGOTOTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStmt__LabelAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGotoStmtAccess().getLabelLabelParserRuleCall_1_0()); }
		ruleLabel
		{ after(grammarAccess.getGotoStmtAccess().getLabelLabelParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FallthroughStmt__FallthroughAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFallthroughStmtAccess().getFallthroughFALLTHROUGHTerminalRuleCall_0()); }
		RULE_FALLTHROUGH
		{ after(grammarAccess.getFallthroughStmtAccess().getFallthroughFALLTHROUGHTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeferStmt__DeferAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeferStmtAccess().getDeferDEFERTerminalRuleCall_0_0()); }
		RULE_DEFER
		{ after(grammarAccess.getDeferStmtAccess().getDeferDEFERTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeferStmt__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeferStmtAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getDeferStmtAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__PackageClauseAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceFileAccess().getPackageClausePackageClauseParserRuleCall_1_0()); }
		rulePackageClause
		{ after(grammarAccess.getSourceFileAccess().getPackageClausePackageClauseParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__ImportDeclAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceFileAccess().getImportDeclImportDeclParserRuleCall_2_0()); }
		ruleImportDecl
		{ after(grammarAccess.getSourceFileAccess().getImportDeclImportDeclParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__TopLevelDeclAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceFileAccess().getTopLevelDeclTopLevelDeclParserRuleCall_3_0()); }
		ruleTopLevelDecl
		{ after(grammarAccess.getSourceFileAccess().getTopLevelDeclTopLevelDeclParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageClause__PackageAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageClauseAccess().getPackagePackageKeyword_0_0()); }
		(
			{ before(grammarAccess.getPackageClauseAccess().getPackagePackageKeyword_0_0()); }
			'package'
			{ after(grammarAccess.getPackageClauseAccess().getPackagePackageKeyword_0_0()); }
		)
		{ after(grammarAccess.getPackageClauseAccess().getPackagePackageKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageClause__PackageNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageClauseAccess().getPackageNamePackageNameParserRuleCall_1_0()); }
		rulePackageName
		{ after(grammarAccess.getPackageClauseAccess().getPackageNamePackageNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageName__IdAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageNameAccess().getIdIDENTIFIERTerminalRuleCall_0()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getPackageNameAccess().getIdIDENTIFIERTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__ImporttAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDeclAccess().getImporttImportKeyword_0_0()); }
		(
			{ before(grammarAccess.getImportDeclAccess().getImporttImportKeyword_0_0()); }
			'import'
			{ after(grammarAccess.getImportDeclAccess().getImporttImportKeyword_0_0()); }
		)
		{ after(grammarAccess.getImportDeclAccess().getImporttImportKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__ImportSpecAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDeclAccess().getImportSpecImportSpecParserRuleCall_1_0_0()); }
		ruleImportSpec
		{ after(grammarAccess.getImportDeclAccess().getImportSpecImportSpecParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__ImportSpec1Assignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDeclAccess().getImportSpec1ImportSpecParserRuleCall_1_1_1_0()); }
		ruleImportSpec
		{ after(grammarAccess.getImportDeclAccess().getImportSpec1ImportSpecParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportSpec__PackageNameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportSpecAccess().getPackageNamePackageNameParserRuleCall_0_1_0()); }
		rulePackageName
		{ after(grammarAccess.getImportSpecAccess().getPackageNamePackageNameParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportSpec__STRING_LITAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportSpecAccess().getSTRING_LITSTRING_LITTerminalRuleCall_1_0()); }
		RULE_STRING_LIT
		{ after(grammarAccess.getImportSpecAccess().getSTRING_LITSTRING_LITTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

fragment RULE_NEWLINE : ('\n'|'\r'|'\n\r');

fragment RULE_UNICODE_CHAR : 'nao seei';

fragment RULE_LETTER : ('a'..'z'|'A'..'Z'|'_');

fragment RULE_DECIMAL_DIGIT : '0'..'9';

fragment RULE_OCTAL_DIGIT : '0'..'7';

fragment RULE_HEX_DIGIT : ('0'..'9'|'A'..'F'|'a'..'f');

RULE_BREAK : 'break';

RULE_DEFAULT : 'default';

RULE_INTERFACE : 'interface';

RULE_SELECT : 'select';

RULE_CASE : 'case';

RULE_DEFER : 'defer';

RULE_GO : 'go';

RULE_MAP : 'map';

RULE_STRUCT : 'struct';

RULE_CHAN : 'chan';

RULE_ELSE : 'else';

RULE_GOTO : 'goto';

RULE_SWITCH : 'switch';

RULE_FALLTHROUGH : 'fallthrough';

RULE_IF : 'if';

RULE_RANGE : 'range';

RULE_CONTINUE : 'continue';

RULE_FOR : 'for';

RULE_RETURN : 'return';

RULE_VAR : 'var';

RULE_IDENTIFIER : RULE_LETTER (RULE_LETTER|'0'..'9')*;

RULE_INT_LIT : ('1'..'9' RULE_DECIMAL_DIGIT*|'0' RULE_OCTAL_DIGIT*|'0' ('x'|'X') RULE_HEX_DIGIT+);

RULE_DECIMALS : RULE_INT;

RULE_EXPONENT : ('e'|'E') ('+'|'-')? RULE_DECIMALS;

RULE_RUNE_LIT : '\'' (RULE_UNICODE_VALUE|RULE_BYTE_VALUE) '\'';

fragment RULE_UNICODE_VALUE : (RULE_UNICODE_CHAR|RULE_LITTLE_U_VALUE|RULE_BIG_U_VALUE|RULE_ESCAPED_CHAR);

fragment RULE_BYTE_VALUE : (RULE_OCTAL_BYTE_VALUE|RULE_HEX_BYTE_VALUE);

fragment RULE_OCTAL_BYTE_VALUE : '\\' RULE_OCTAL_DIGIT RULE_OCTAL_DIGIT RULE_OCTAL_DIGIT;

fragment RULE_HEX_BYTE_VALUE : '\\' 'x' RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_LITTLE_U_VALUE : '\\' 'u' RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_BIG_U_VALUE : '\\' 'U' RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_ESCAPED_CHAR : '\\' ('a'|'b'|'f'|'n'|'r'|'t'|'v'|'\\'|'\''|'"');

RULE_STRING_LIT : (RULE_RAW_STRING_LIT|RULE_INTERPRETED_STRING_LIT);

fragment RULE_RAW_STRING_LIT : '\'' (RULE_UNICODE_CHAR|RULE_NEWLINE)* '\'';

fragment RULE_INTERPRETED_STRING_LIT : '"' (RULE_UNICODE_VALUE|RULE_BYTE_VALUE)* '"';

RULE_ANY_OTHER : '#';

RULE_REL_OP : ('=='|'!='|'<'|'<='|'>'|'>=');

RULE_ADD_OP : ('+'|'-'|'|'|'^');

RULE_MUL_OP : ('*'|'/'|'%'|'<<'|'>>'|'&'|'&^');

RULE_UNARY_OP : ('+'|'-'|'!'|'^'|'*'|'&'|'<-');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;
