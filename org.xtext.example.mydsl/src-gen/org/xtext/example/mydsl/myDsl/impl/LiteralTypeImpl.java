/**
 * generated by Xtext 2.10.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.LiteralType;
import org.xtext.example.mydsl.myDsl.LiteralTypeLinha;
import org.xtext.example.mydsl.myDsl.MapType;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.StructType;
import org.xtext.example.mydsl.myDsl.TypeName;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Literal Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.LiteralTypeImpl#getStructType <em>Struct Type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.LiteralTypeImpl#getMapType <em>Map Type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.LiteralTypeImpl#getTypeName <em>Type Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.LiteralTypeImpl#getLiteralTypeLinha <em>Literal Type Linha</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LiteralTypeImpl extends MinimalEObjectImpl.Container implements LiteralType
{
  /**
   * The cached value of the '{@link #getStructType() <em>Struct Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStructType()
   * @generated
   * @ordered
   */
  protected StructType structType;

  /**
   * The cached value of the '{@link #getMapType() <em>Map Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMapType()
   * @generated
   * @ordered
   */
  protected MapType mapType;

  /**
   * The cached value of the '{@link #getTypeName() <em>Type Name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypeName()
   * @generated
   * @ordered
   */
  protected TypeName typeName;

  /**
   * The cached value of the '{@link #getLiteralTypeLinha() <em>Literal Type Linha</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLiteralTypeLinha()
   * @generated
   * @ordered
   */
  protected LiteralTypeLinha literalTypeLinha;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LiteralTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.LITERAL_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StructType getStructType()
  {
    return structType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStructType(StructType newStructType, NotificationChain msgs)
  {
    StructType oldStructType = structType;
    structType = newStructType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.LITERAL_TYPE__STRUCT_TYPE, oldStructType, newStructType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStructType(StructType newStructType)
  {
    if (newStructType != structType)
    {
      NotificationChain msgs = null;
      if (structType != null)
        msgs = ((InternalEObject)structType).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.LITERAL_TYPE__STRUCT_TYPE, null, msgs);
      if (newStructType != null)
        msgs = ((InternalEObject)newStructType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.LITERAL_TYPE__STRUCT_TYPE, null, msgs);
      msgs = basicSetStructType(newStructType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.LITERAL_TYPE__STRUCT_TYPE, newStructType, newStructType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MapType getMapType()
  {
    return mapType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMapType(MapType newMapType, NotificationChain msgs)
  {
    MapType oldMapType = mapType;
    mapType = newMapType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.LITERAL_TYPE__MAP_TYPE, oldMapType, newMapType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMapType(MapType newMapType)
  {
    if (newMapType != mapType)
    {
      NotificationChain msgs = null;
      if (mapType != null)
        msgs = ((InternalEObject)mapType).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.LITERAL_TYPE__MAP_TYPE, null, msgs);
      if (newMapType != null)
        msgs = ((InternalEObject)newMapType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.LITERAL_TYPE__MAP_TYPE, null, msgs);
      msgs = basicSetMapType(newMapType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.LITERAL_TYPE__MAP_TYPE, newMapType, newMapType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TypeName getTypeName()
  {
    return typeName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTypeName(TypeName newTypeName, NotificationChain msgs)
  {
    TypeName oldTypeName = typeName;
    typeName = newTypeName;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.LITERAL_TYPE__TYPE_NAME, oldTypeName, newTypeName);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTypeName(TypeName newTypeName)
  {
    if (newTypeName != typeName)
    {
      NotificationChain msgs = null;
      if (typeName != null)
        msgs = ((InternalEObject)typeName).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.LITERAL_TYPE__TYPE_NAME, null, msgs);
      if (newTypeName != null)
        msgs = ((InternalEObject)newTypeName).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.LITERAL_TYPE__TYPE_NAME, null, msgs);
      msgs = basicSetTypeName(newTypeName, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.LITERAL_TYPE__TYPE_NAME, newTypeName, newTypeName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LiteralTypeLinha getLiteralTypeLinha()
  {
    return literalTypeLinha;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLiteralTypeLinha(LiteralTypeLinha newLiteralTypeLinha, NotificationChain msgs)
  {
    LiteralTypeLinha oldLiteralTypeLinha = literalTypeLinha;
    literalTypeLinha = newLiteralTypeLinha;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.LITERAL_TYPE__LITERAL_TYPE_LINHA, oldLiteralTypeLinha, newLiteralTypeLinha);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLiteralTypeLinha(LiteralTypeLinha newLiteralTypeLinha)
  {
    if (newLiteralTypeLinha != literalTypeLinha)
    {
      NotificationChain msgs = null;
      if (literalTypeLinha != null)
        msgs = ((InternalEObject)literalTypeLinha).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.LITERAL_TYPE__LITERAL_TYPE_LINHA, null, msgs);
      if (newLiteralTypeLinha != null)
        msgs = ((InternalEObject)newLiteralTypeLinha).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.LITERAL_TYPE__LITERAL_TYPE_LINHA, null, msgs);
      msgs = basicSetLiteralTypeLinha(newLiteralTypeLinha, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.LITERAL_TYPE__LITERAL_TYPE_LINHA, newLiteralTypeLinha, newLiteralTypeLinha));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.LITERAL_TYPE__STRUCT_TYPE:
        return basicSetStructType(null, msgs);
      case MyDslPackage.LITERAL_TYPE__MAP_TYPE:
        return basicSetMapType(null, msgs);
      case MyDslPackage.LITERAL_TYPE__TYPE_NAME:
        return basicSetTypeName(null, msgs);
      case MyDslPackage.LITERAL_TYPE__LITERAL_TYPE_LINHA:
        return basicSetLiteralTypeLinha(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.LITERAL_TYPE__STRUCT_TYPE:
        return getStructType();
      case MyDslPackage.LITERAL_TYPE__MAP_TYPE:
        return getMapType();
      case MyDslPackage.LITERAL_TYPE__TYPE_NAME:
        return getTypeName();
      case MyDslPackage.LITERAL_TYPE__LITERAL_TYPE_LINHA:
        return getLiteralTypeLinha();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.LITERAL_TYPE__STRUCT_TYPE:
        setStructType((StructType)newValue);
        return;
      case MyDslPackage.LITERAL_TYPE__MAP_TYPE:
        setMapType((MapType)newValue);
        return;
      case MyDslPackage.LITERAL_TYPE__TYPE_NAME:
        setTypeName((TypeName)newValue);
        return;
      case MyDslPackage.LITERAL_TYPE__LITERAL_TYPE_LINHA:
        setLiteralTypeLinha((LiteralTypeLinha)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.LITERAL_TYPE__STRUCT_TYPE:
        setStructType((StructType)null);
        return;
      case MyDslPackage.LITERAL_TYPE__MAP_TYPE:
        setMapType((MapType)null);
        return;
      case MyDslPackage.LITERAL_TYPE__TYPE_NAME:
        setTypeName((TypeName)null);
        return;
      case MyDslPackage.LITERAL_TYPE__LITERAL_TYPE_LINHA:
        setLiteralTypeLinha((LiteralTypeLinha)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.LITERAL_TYPE__STRUCT_TYPE:
        return structType != null;
      case MyDslPackage.LITERAL_TYPE__MAP_TYPE:
        return mapType != null;
      case MyDslPackage.LITERAL_TYPE__TYPE_NAME:
        return typeName != null;
      case MyDslPackage.LITERAL_TYPE__LITERAL_TYPE_LINHA:
        return literalTypeLinha != null;
    }
    return super.eIsSet(featureID);
  }

} //LiteralTypeImpl
