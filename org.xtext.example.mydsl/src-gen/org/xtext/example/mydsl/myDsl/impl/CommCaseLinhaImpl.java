/**
 * generated by Xtext 2.10.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myDsl.CommCaseLinha;
import org.xtext.example.mydsl.myDsl.Expression;
import org.xtext.example.mydsl.myDsl.IdentifierList;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.RecvExpr;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Comm Case Linha</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.CommCaseLinhaImpl#getExpression <em>Expression</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.CommCaseLinhaImpl#getExpression1 <em>Expression1</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.CommCaseLinhaImpl#getIdentifierList <em>Identifier List</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.CommCaseLinhaImpl#getRecvExpr <em>Recv Expr</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CommCaseLinhaImpl extends MinimalEObjectImpl.Container implements CommCaseLinha
{
  /**
   * The cached value of the '{@link #getExpression() <em>Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpression()
   * @generated
   * @ordered
   */
  protected Expression expression;

  /**
   * The cached value of the '{@link #getExpression1() <em>Expression1</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpression1()
   * @generated
   * @ordered
   */
  protected EList<Expression> expression1;

  /**
   * The cached value of the '{@link #getIdentifierList() <em>Identifier List</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdentifierList()
   * @generated
   * @ordered
   */
  protected IdentifierList identifierList;

  /**
   * The cached value of the '{@link #getRecvExpr() <em>Recv Expr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRecvExpr()
   * @generated
   * @ordered
   */
  protected RecvExpr recvExpr;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CommCaseLinhaImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.COMM_CASE_LINHA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getExpression()
  {
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpression(Expression newExpression, NotificationChain msgs)
  {
    Expression oldExpression = expression;
    expression = newExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.COMM_CASE_LINHA__EXPRESSION, oldExpression, newExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpression(Expression newExpression)
  {
    if (newExpression != expression)
    {
      NotificationChain msgs = null;
      if (expression != null)
        msgs = ((InternalEObject)expression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMM_CASE_LINHA__EXPRESSION, null, msgs);
      if (newExpression != null)
        msgs = ((InternalEObject)newExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMM_CASE_LINHA__EXPRESSION, null, msgs);
      msgs = basicSetExpression(newExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.COMM_CASE_LINHA__EXPRESSION, newExpression, newExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Expression> getExpression1()
  {
    if (expression1 == null)
    {
      expression1 = new EObjectContainmentEList<Expression>(Expression.class, this, MyDslPackage.COMM_CASE_LINHA__EXPRESSION1);
    }
    return expression1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IdentifierList getIdentifierList()
  {
    return identifierList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIdentifierList(IdentifierList newIdentifierList, NotificationChain msgs)
  {
    IdentifierList oldIdentifierList = identifierList;
    identifierList = newIdentifierList;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.COMM_CASE_LINHA__IDENTIFIER_LIST, oldIdentifierList, newIdentifierList);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIdentifierList(IdentifierList newIdentifierList)
  {
    if (newIdentifierList != identifierList)
    {
      NotificationChain msgs = null;
      if (identifierList != null)
        msgs = ((InternalEObject)identifierList).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMM_CASE_LINHA__IDENTIFIER_LIST, null, msgs);
      if (newIdentifierList != null)
        msgs = ((InternalEObject)newIdentifierList).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMM_CASE_LINHA__IDENTIFIER_LIST, null, msgs);
      msgs = basicSetIdentifierList(newIdentifierList, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.COMM_CASE_LINHA__IDENTIFIER_LIST, newIdentifierList, newIdentifierList));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RecvExpr getRecvExpr()
  {
    return recvExpr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRecvExpr(RecvExpr newRecvExpr, NotificationChain msgs)
  {
    RecvExpr oldRecvExpr = recvExpr;
    recvExpr = newRecvExpr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.COMM_CASE_LINHA__RECV_EXPR, oldRecvExpr, newRecvExpr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRecvExpr(RecvExpr newRecvExpr)
  {
    if (newRecvExpr != recvExpr)
    {
      NotificationChain msgs = null;
      if (recvExpr != null)
        msgs = ((InternalEObject)recvExpr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMM_CASE_LINHA__RECV_EXPR, null, msgs);
      if (newRecvExpr != null)
        msgs = ((InternalEObject)newRecvExpr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMM_CASE_LINHA__RECV_EXPR, null, msgs);
      msgs = basicSetRecvExpr(newRecvExpr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.COMM_CASE_LINHA__RECV_EXPR, newRecvExpr, newRecvExpr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.COMM_CASE_LINHA__EXPRESSION:
        return basicSetExpression(null, msgs);
      case MyDslPackage.COMM_CASE_LINHA__EXPRESSION1:
        return ((InternalEList<?>)getExpression1()).basicRemove(otherEnd, msgs);
      case MyDslPackage.COMM_CASE_LINHA__IDENTIFIER_LIST:
        return basicSetIdentifierList(null, msgs);
      case MyDslPackage.COMM_CASE_LINHA__RECV_EXPR:
        return basicSetRecvExpr(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.COMM_CASE_LINHA__EXPRESSION:
        return getExpression();
      case MyDslPackage.COMM_CASE_LINHA__EXPRESSION1:
        return getExpression1();
      case MyDslPackage.COMM_CASE_LINHA__IDENTIFIER_LIST:
        return getIdentifierList();
      case MyDslPackage.COMM_CASE_LINHA__RECV_EXPR:
        return getRecvExpr();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.COMM_CASE_LINHA__EXPRESSION:
        setExpression((Expression)newValue);
        return;
      case MyDslPackage.COMM_CASE_LINHA__EXPRESSION1:
        getExpression1().clear();
        getExpression1().addAll((Collection<? extends Expression>)newValue);
        return;
      case MyDslPackage.COMM_CASE_LINHA__IDENTIFIER_LIST:
        setIdentifierList((IdentifierList)newValue);
        return;
      case MyDslPackage.COMM_CASE_LINHA__RECV_EXPR:
        setRecvExpr((RecvExpr)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.COMM_CASE_LINHA__EXPRESSION:
        setExpression((Expression)null);
        return;
      case MyDslPackage.COMM_CASE_LINHA__EXPRESSION1:
        getExpression1().clear();
        return;
      case MyDslPackage.COMM_CASE_LINHA__IDENTIFIER_LIST:
        setIdentifierList((IdentifierList)null);
        return;
      case MyDslPackage.COMM_CASE_LINHA__RECV_EXPR:
        setRecvExpr((RecvExpr)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.COMM_CASE_LINHA__EXPRESSION:
        return expression != null;
      case MyDslPackage.COMM_CASE_LINHA__EXPRESSION1:
        return expression1 != null && !expression1.isEmpty();
      case MyDslPackage.COMM_CASE_LINHA__IDENTIFIER_LIST:
        return identifierList != null;
      case MyDslPackage.COMM_CASE_LINHA__RECV_EXPR:
        return recvExpr != null;
    }
    return super.eIsSet(featureID);
  }

} //CommCaseLinhaImpl
