/**
 * generated by Xtext 2.10.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.ParameterDecl;
import org.xtext.example.mydsl.myDsl.ParameterList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Parameter List</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ParameterListImpl#getParameterDecl <em>Parameter Decl</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ParameterListImpl#getParameterDecl1 <em>Parameter Decl1</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ParameterListImpl extends MinimalEObjectImpl.Container implements ParameterList
{
  /**
   * The cached value of the '{@link #getParameterDecl() <em>Parameter Decl</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParameterDecl()
   * @generated
   * @ordered
   */
  protected ParameterDecl parameterDecl;

  /**
   * The cached value of the '{@link #getParameterDecl1() <em>Parameter Decl1</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParameterDecl1()
   * @generated
   * @ordered
   */
  protected EList<ParameterDecl> parameterDecl1;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ParameterListImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.PARAMETER_LIST;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ParameterDecl getParameterDecl()
  {
    return parameterDecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetParameterDecl(ParameterDecl newParameterDecl, NotificationChain msgs)
  {
    ParameterDecl oldParameterDecl = parameterDecl;
    parameterDecl = newParameterDecl;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.PARAMETER_LIST__PARAMETER_DECL, oldParameterDecl, newParameterDecl);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setParameterDecl(ParameterDecl newParameterDecl)
  {
    if (newParameterDecl != parameterDecl)
    {
      NotificationChain msgs = null;
      if (parameterDecl != null)
        msgs = ((InternalEObject)parameterDecl).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PARAMETER_LIST__PARAMETER_DECL, null, msgs);
      if (newParameterDecl != null)
        msgs = ((InternalEObject)newParameterDecl).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PARAMETER_LIST__PARAMETER_DECL, null, msgs);
      msgs = basicSetParameterDecl(newParameterDecl, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PARAMETER_LIST__PARAMETER_DECL, newParameterDecl, newParameterDecl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ParameterDecl> getParameterDecl1()
  {
    if (parameterDecl1 == null)
    {
      parameterDecl1 = new EObjectContainmentEList<ParameterDecl>(ParameterDecl.class, this, MyDslPackage.PARAMETER_LIST__PARAMETER_DECL1);
    }
    return parameterDecl1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.PARAMETER_LIST__PARAMETER_DECL:
        return basicSetParameterDecl(null, msgs);
      case MyDslPackage.PARAMETER_LIST__PARAMETER_DECL1:
        return ((InternalEList<?>)getParameterDecl1()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.PARAMETER_LIST__PARAMETER_DECL:
        return getParameterDecl();
      case MyDslPackage.PARAMETER_LIST__PARAMETER_DECL1:
        return getParameterDecl1();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.PARAMETER_LIST__PARAMETER_DECL:
        setParameterDecl((ParameterDecl)newValue);
        return;
      case MyDslPackage.PARAMETER_LIST__PARAMETER_DECL1:
        getParameterDecl1().clear();
        getParameterDecl1().addAll((Collection<? extends ParameterDecl>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.PARAMETER_LIST__PARAMETER_DECL:
        setParameterDecl((ParameterDecl)null);
        return;
      case MyDslPackage.PARAMETER_LIST__PARAMETER_DECL1:
        getParameterDecl1().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.PARAMETER_LIST__PARAMETER_DECL:
        return parameterDecl != null;
      case MyDslPackage.PARAMETER_LIST__PARAMETER_DECL1:
        return parameterDecl1 != null && !parameterDecl1.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ParameterListImpl
