/**
 * generated by Xtext 2.10.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myDsl.ElementList;
import org.xtext.example.mydsl.myDsl.KeyedElement;
import org.xtext.example.mydsl.myDsl.MyDslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Element List</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ElementListImpl#getKeyedElement <em>Keyed Element</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ElementListImpl#getKeyedElement1 <em>Keyed Element1</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ElementListImpl extends MinimalEObjectImpl.Container implements ElementList
{
  /**
   * The cached value of the '{@link #getKeyedElement() <em>Keyed Element</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKeyedElement()
   * @generated
   * @ordered
   */
  protected KeyedElement keyedElement;

  /**
   * The cached value of the '{@link #getKeyedElement1() <em>Keyed Element1</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKeyedElement1()
   * @generated
   * @ordered
   */
  protected EList<KeyedElement> keyedElement1;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ElementListImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.ELEMENT_LIST;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public KeyedElement getKeyedElement()
  {
    return keyedElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetKeyedElement(KeyedElement newKeyedElement, NotificationChain msgs)
  {
    KeyedElement oldKeyedElement = keyedElement;
    keyedElement = newKeyedElement;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.ELEMENT_LIST__KEYED_ELEMENT, oldKeyedElement, newKeyedElement);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setKeyedElement(KeyedElement newKeyedElement)
  {
    if (newKeyedElement != keyedElement)
    {
      NotificationChain msgs = null;
      if (keyedElement != null)
        msgs = ((InternalEObject)keyedElement).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.ELEMENT_LIST__KEYED_ELEMENT, null, msgs);
      if (newKeyedElement != null)
        msgs = ((InternalEObject)newKeyedElement).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.ELEMENT_LIST__KEYED_ELEMENT, null, msgs);
      msgs = basicSetKeyedElement(newKeyedElement, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.ELEMENT_LIST__KEYED_ELEMENT, newKeyedElement, newKeyedElement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<KeyedElement> getKeyedElement1()
  {
    if (keyedElement1 == null)
    {
      keyedElement1 = new EObjectContainmentEList<KeyedElement>(KeyedElement.class, this, MyDslPackage.ELEMENT_LIST__KEYED_ELEMENT1);
    }
    return keyedElement1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.ELEMENT_LIST__KEYED_ELEMENT:
        return basicSetKeyedElement(null, msgs);
      case MyDslPackage.ELEMENT_LIST__KEYED_ELEMENT1:
        return ((InternalEList<?>)getKeyedElement1()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.ELEMENT_LIST__KEYED_ELEMENT:
        return getKeyedElement();
      case MyDslPackage.ELEMENT_LIST__KEYED_ELEMENT1:
        return getKeyedElement1();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.ELEMENT_LIST__KEYED_ELEMENT:
        setKeyedElement((KeyedElement)newValue);
        return;
      case MyDslPackage.ELEMENT_LIST__KEYED_ELEMENT1:
        getKeyedElement1().clear();
        getKeyedElement1().addAll((Collection<? extends KeyedElement>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.ELEMENT_LIST__KEYED_ELEMENT:
        setKeyedElement((KeyedElement)null);
        return;
      case MyDslPackage.ELEMENT_LIST__KEYED_ELEMENT1:
        getKeyedElement1().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.ELEMENT_LIST__KEYED_ELEMENT:
        return keyedElement != null;
      case MyDslPackage.ELEMENT_LIST__KEYED_ELEMENT1:
        return keyedElement1 != null && !keyedElement1.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ElementListImpl
