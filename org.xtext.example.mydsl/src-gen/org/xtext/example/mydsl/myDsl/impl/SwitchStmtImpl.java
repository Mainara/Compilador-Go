/**
 * generated by Xtext 2.10.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.SimpleStmt;
import org.xtext.example.mydsl.myDsl.SwitchStmt;
import org.xtext.example.mydsl.myDsl.SwitchStmtLinha;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Switch Stmt</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.SwitchStmtImpl#getSwitch <em>Switch</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.SwitchStmtImpl#getSimpleStmt <em>Simple Stmt</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.SwitchStmtImpl#getSwitchStmtLinha <em>Switch Stmt Linha</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SwitchStmtImpl extends MinimalEObjectImpl.Container implements SwitchStmt
{
  /**
   * The default value of the '{@link #getSwitch() <em>Switch</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSwitch()
   * @generated
   * @ordered
   */
  protected static final String SWITCH_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSwitch() <em>Switch</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSwitch()
   * @generated
   * @ordered
   */
  protected String switch_ = SWITCH_EDEFAULT;

  /**
   * The cached value of the '{@link #getSimpleStmt() <em>Simple Stmt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSimpleStmt()
   * @generated
   * @ordered
   */
  protected SimpleStmt simpleStmt;

  /**
   * The cached value of the '{@link #getSwitchStmtLinha() <em>Switch Stmt Linha</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSwitchStmtLinha()
   * @generated
   * @ordered
   */
  protected SwitchStmtLinha switchStmtLinha;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SwitchStmtImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.SWITCH_STMT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSwitch()
  {
    return switch_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSwitch(String newSwitch)
  {
    String oldSwitch = switch_;
    switch_ = newSwitch;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SWITCH_STMT__SWITCH, oldSwitch, switch_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SimpleStmt getSimpleStmt()
  {
    return simpleStmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSimpleStmt(SimpleStmt newSimpleStmt, NotificationChain msgs)
  {
    SimpleStmt oldSimpleStmt = simpleStmt;
    simpleStmt = newSimpleStmt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.SWITCH_STMT__SIMPLE_STMT, oldSimpleStmt, newSimpleStmt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSimpleStmt(SimpleStmt newSimpleStmt)
  {
    if (newSimpleStmt != simpleStmt)
    {
      NotificationChain msgs = null;
      if (simpleStmt != null)
        msgs = ((InternalEObject)simpleStmt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SWITCH_STMT__SIMPLE_STMT, null, msgs);
      if (newSimpleStmt != null)
        msgs = ((InternalEObject)newSimpleStmt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SWITCH_STMT__SIMPLE_STMT, null, msgs);
      msgs = basicSetSimpleStmt(newSimpleStmt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SWITCH_STMT__SIMPLE_STMT, newSimpleStmt, newSimpleStmt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SwitchStmtLinha getSwitchStmtLinha()
  {
    return switchStmtLinha;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSwitchStmtLinha(SwitchStmtLinha newSwitchStmtLinha, NotificationChain msgs)
  {
    SwitchStmtLinha oldSwitchStmtLinha = switchStmtLinha;
    switchStmtLinha = newSwitchStmtLinha;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.SWITCH_STMT__SWITCH_STMT_LINHA, oldSwitchStmtLinha, newSwitchStmtLinha);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSwitchStmtLinha(SwitchStmtLinha newSwitchStmtLinha)
  {
    if (newSwitchStmtLinha != switchStmtLinha)
    {
      NotificationChain msgs = null;
      if (switchStmtLinha != null)
        msgs = ((InternalEObject)switchStmtLinha).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SWITCH_STMT__SWITCH_STMT_LINHA, null, msgs);
      if (newSwitchStmtLinha != null)
        msgs = ((InternalEObject)newSwitchStmtLinha).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SWITCH_STMT__SWITCH_STMT_LINHA, null, msgs);
      msgs = basicSetSwitchStmtLinha(newSwitchStmtLinha, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SWITCH_STMT__SWITCH_STMT_LINHA, newSwitchStmtLinha, newSwitchStmtLinha));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.SWITCH_STMT__SIMPLE_STMT:
        return basicSetSimpleStmt(null, msgs);
      case MyDslPackage.SWITCH_STMT__SWITCH_STMT_LINHA:
        return basicSetSwitchStmtLinha(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.SWITCH_STMT__SWITCH:
        return getSwitch();
      case MyDslPackage.SWITCH_STMT__SIMPLE_STMT:
        return getSimpleStmt();
      case MyDslPackage.SWITCH_STMT__SWITCH_STMT_LINHA:
        return getSwitchStmtLinha();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.SWITCH_STMT__SWITCH:
        setSwitch((String)newValue);
        return;
      case MyDslPackage.SWITCH_STMT__SIMPLE_STMT:
        setSimpleStmt((SimpleStmt)newValue);
        return;
      case MyDslPackage.SWITCH_STMT__SWITCH_STMT_LINHA:
        setSwitchStmtLinha((SwitchStmtLinha)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.SWITCH_STMT__SWITCH:
        setSwitch(SWITCH_EDEFAULT);
        return;
      case MyDslPackage.SWITCH_STMT__SIMPLE_STMT:
        setSimpleStmt((SimpleStmt)null);
        return;
      case MyDslPackage.SWITCH_STMT__SWITCH_STMT_LINHA:
        setSwitchStmtLinha((SwitchStmtLinha)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.SWITCH_STMT__SWITCH:
        return SWITCH_EDEFAULT == null ? switch_ != null : !SWITCH_EDEFAULT.equals(switch_);
      case MyDslPackage.SWITCH_STMT__SIMPLE_STMT:
        return simpleStmt != null;
      case MyDslPackage.SWITCH_STMT__SWITCH_STMT_LINHA:
        return switchStmtLinha != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (switch: ");
    result.append(switch_);
    result.append(')');
    return result.toString();
  }

} //SwitchStmtImpl
