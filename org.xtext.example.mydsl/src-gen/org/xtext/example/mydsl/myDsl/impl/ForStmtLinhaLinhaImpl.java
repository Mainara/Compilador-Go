/**
 * generated by Xtext 2.10.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.Condition;
import org.xtext.example.mydsl.myDsl.Expression;
import org.xtext.example.mydsl.myDsl.ExpressionList;
import org.xtext.example.mydsl.myDsl.ForStmtLinhaLinha;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.PostStmt;
import org.xtext.example.mydsl.myDsl.assign_op;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>For Stmt Linha Linha</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ForStmtLinhaLinhaImpl#getAssign_op <em>Assign op</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ForStmtLinhaLinhaImpl#getExpressionList <em>Expression List</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ForStmtLinhaLinhaImpl#getCondition <em>Condition</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ForStmtLinhaLinhaImpl#getPostStmt <em>Post Stmt</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ForStmtLinhaLinhaImpl#getRange <em>Range</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ForStmtLinhaLinhaImpl#getExpression <em>Expression</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ForStmtLinhaLinhaImpl extends MinimalEObjectImpl.Container implements ForStmtLinhaLinha
{
  /**
   * The cached value of the '{@link #getAssign_op() <em>Assign op</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAssign_op()
   * @generated
   * @ordered
   */
  protected assign_op assign_op;

  /**
   * The cached value of the '{@link #getExpressionList() <em>Expression List</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpressionList()
   * @generated
   * @ordered
   */
  protected ExpressionList expressionList;

  /**
   * The cached value of the '{@link #getCondition() <em>Condition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCondition()
   * @generated
   * @ordered
   */
  protected Condition condition;

  /**
   * The cached value of the '{@link #getPostStmt() <em>Post Stmt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPostStmt()
   * @generated
   * @ordered
   */
  protected PostStmt postStmt;

  /**
   * The default value of the '{@link #getRange() <em>Range</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRange()
   * @generated
   * @ordered
   */
  protected static final String RANGE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRange() <em>Range</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRange()
   * @generated
   * @ordered
   */
  protected String range = RANGE_EDEFAULT;

  /**
   * The cached value of the '{@link #getExpression() <em>Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpression()
   * @generated
   * @ordered
   */
  protected Expression expression;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ForStmtLinhaLinhaImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.FOR_STMT_LINHA_LINHA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public assign_op getAssign_op()
  {
    return assign_op;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAssign_op(assign_op newAssign_op, NotificationChain msgs)
  {
    assign_op oldAssign_op = assign_op;
    assign_op = newAssign_op;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.FOR_STMT_LINHA_LINHA__ASSIGN_OP, oldAssign_op, newAssign_op);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAssign_op(assign_op newAssign_op)
  {
    if (newAssign_op != assign_op)
    {
      NotificationChain msgs = null;
      if (assign_op != null)
        msgs = ((InternalEObject)assign_op).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.FOR_STMT_LINHA_LINHA__ASSIGN_OP, null, msgs);
      if (newAssign_op != null)
        msgs = ((InternalEObject)newAssign_op).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.FOR_STMT_LINHA_LINHA__ASSIGN_OP, null, msgs);
      msgs = basicSetAssign_op(newAssign_op, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.FOR_STMT_LINHA_LINHA__ASSIGN_OP, newAssign_op, newAssign_op));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ExpressionList getExpressionList()
  {
    return expressionList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpressionList(ExpressionList newExpressionList, NotificationChain msgs)
  {
    ExpressionList oldExpressionList = expressionList;
    expressionList = newExpressionList;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.FOR_STMT_LINHA_LINHA__EXPRESSION_LIST, oldExpressionList, newExpressionList);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpressionList(ExpressionList newExpressionList)
  {
    if (newExpressionList != expressionList)
    {
      NotificationChain msgs = null;
      if (expressionList != null)
        msgs = ((InternalEObject)expressionList).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.FOR_STMT_LINHA_LINHA__EXPRESSION_LIST, null, msgs);
      if (newExpressionList != null)
        msgs = ((InternalEObject)newExpressionList).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.FOR_STMT_LINHA_LINHA__EXPRESSION_LIST, null, msgs);
      msgs = basicSetExpressionList(newExpressionList, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.FOR_STMT_LINHA_LINHA__EXPRESSION_LIST, newExpressionList, newExpressionList));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Condition getCondition()
  {
    return condition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCondition(Condition newCondition, NotificationChain msgs)
  {
    Condition oldCondition = condition;
    condition = newCondition;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.FOR_STMT_LINHA_LINHA__CONDITION, oldCondition, newCondition);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCondition(Condition newCondition)
  {
    if (newCondition != condition)
    {
      NotificationChain msgs = null;
      if (condition != null)
        msgs = ((InternalEObject)condition).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.FOR_STMT_LINHA_LINHA__CONDITION, null, msgs);
      if (newCondition != null)
        msgs = ((InternalEObject)newCondition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.FOR_STMT_LINHA_LINHA__CONDITION, null, msgs);
      msgs = basicSetCondition(newCondition, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.FOR_STMT_LINHA_LINHA__CONDITION, newCondition, newCondition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PostStmt getPostStmt()
  {
    return postStmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPostStmt(PostStmt newPostStmt, NotificationChain msgs)
  {
    PostStmt oldPostStmt = postStmt;
    postStmt = newPostStmt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.FOR_STMT_LINHA_LINHA__POST_STMT, oldPostStmt, newPostStmt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPostStmt(PostStmt newPostStmt)
  {
    if (newPostStmt != postStmt)
    {
      NotificationChain msgs = null;
      if (postStmt != null)
        msgs = ((InternalEObject)postStmt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.FOR_STMT_LINHA_LINHA__POST_STMT, null, msgs);
      if (newPostStmt != null)
        msgs = ((InternalEObject)newPostStmt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.FOR_STMT_LINHA_LINHA__POST_STMT, null, msgs);
      msgs = basicSetPostStmt(newPostStmt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.FOR_STMT_LINHA_LINHA__POST_STMT, newPostStmt, newPostStmt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getRange()
  {
    return range;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRange(String newRange)
  {
    String oldRange = range;
    range = newRange;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.FOR_STMT_LINHA_LINHA__RANGE, oldRange, range));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getExpression()
  {
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpression(Expression newExpression, NotificationChain msgs)
  {
    Expression oldExpression = expression;
    expression = newExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.FOR_STMT_LINHA_LINHA__EXPRESSION, oldExpression, newExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpression(Expression newExpression)
  {
    if (newExpression != expression)
    {
      NotificationChain msgs = null;
      if (expression != null)
        msgs = ((InternalEObject)expression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.FOR_STMT_LINHA_LINHA__EXPRESSION, null, msgs);
      if (newExpression != null)
        msgs = ((InternalEObject)newExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.FOR_STMT_LINHA_LINHA__EXPRESSION, null, msgs);
      msgs = basicSetExpression(newExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.FOR_STMT_LINHA_LINHA__EXPRESSION, newExpression, newExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.FOR_STMT_LINHA_LINHA__ASSIGN_OP:
        return basicSetAssign_op(null, msgs);
      case MyDslPackage.FOR_STMT_LINHA_LINHA__EXPRESSION_LIST:
        return basicSetExpressionList(null, msgs);
      case MyDslPackage.FOR_STMT_LINHA_LINHA__CONDITION:
        return basicSetCondition(null, msgs);
      case MyDslPackage.FOR_STMT_LINHA_LINHA__POST_STMT:
        return basicSetPostStmt(null, msgs);
      case MyDslPackage.FOR_STMT_LINHA_LINHA__EXPRESSION:
        return basicSetExpression(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.FOR_STMT_LINHA_LINHA__ASSIGN_OP:
        return getAssign_op();
      case MyDslPackage.FOR_STMT_LINHA_LINHA__EXPRESSION_LIST:
        return getExpressionList();
      case MyDslPackage.FOR_STMT_LINHA_LINHA__CONDITION:
        return getCondition();
      case MyDslPackage.FOR_STMT_LINHA_LINHA__POST_STMT:
        return getPostStmt();
      case MyDslPackage.FOR_STMT_LINHA_LINHA__RANGE:
        return getRange();
      case MyDslPackage.FOR_STMT_LINHA_LINHA__EXPRESSION:
        return getExpression();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.FOR_STMT_LINHA_LINHA__ASSIGN_OP:
        setAssign_op((assign_op)newValue);
        return;
      case MyDslPackage.FOR_STMT_LINHA_LINHA__EXPRESSION_LIST:
        setExpressionList((ExpressionList)newValue);
        return;
      case MyDslPackage.FOR_STMT_LINHA_LINHA__CONDITION:
        setCondition((Condition)newValue);
        return;
      case MyDslPackage.FOR_STMT_LINHA_LINHA__POST_STMT:
        setPostStmt((PostStmt)newValue);
        return;
      case MyDslPackage.FOR_STMT_LINHA_LINHA__RANGE:
        setRange((String)newValue);
        return;
      case MyDslPackage.FOR_STMT_LINHA_LINHA__EXPRESSION:
        setExpression((Expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.FOR_STMT_LINHA_LINHA__ASSIGN_OP:
        setAssign_op((assign_op)null);
        return;
      case MyDslPackage.FOR_STMT_LINHA_LINHA__EXPRESSION_LIST:
        setExpressionList((ExpressionList)null);
        return;
      case MyDslPackage.FOR_STMT_LINHA_LINHA__CONDITION:
        setCondition((Condition)null);
        return;
      case MyDslPackage.FOR_STMT_LINHA_LINHA__POST_STMT:
        setPostStmt((PostStmt)null);
        return;
      case MyDslPackage.FOR_STMT_LINHA_LINHA__RANGE:
        setRange(RANGE_EDEFAULT);
        return;
      case MyDslPackage.FOR_STMT_LINHA_LINHA__EXPRESSION:
        setExpression((Expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.FOR_STMT_LINHA_LINHA__ASSIGN_OP:
        return assign_op != null;
      case MyDslPackage.FOR_STMT_LINHA_LINHA__EXPRESSION_LIST:
        return expressionList != null;
      case MyDslPackage.FOR_STMT_LINHA_LINHA__CONDITION:
        return condition != null;
      case MyDslPackage.FOR_STMT_LINHA_LINHA__POST_STMT:
        return postStmt != null;
      case MyDslPackage.FOR_STMT_LINHA_LINHA__RANGE:
        return RANGE_EDEFAULT == null ? range != null : !RANGE_EDEFAULT.equals(range);
      case MyDslPackage.FOR_STMT_LINHA_LINHA__EXPRESSION:
        return expression != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (range: ");
    result.append(range);
    result.append(')');
    return result.toString();
  }

} //ForStmtLinhaLinhaImpl
