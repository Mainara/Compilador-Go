/**
 * generated by Xtext 2.10.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myDsl.ConstDecl;
import org.xtext.example.mydsl.myDsl.ConstSpec;
import org.xtext.example.mydsl.myDsl.MyDslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Const Decl</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ConstDeclImpl#getConst <em>Const</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ConstDeclImpl#getConstSpec <em>Const Spec</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ConstDeclImpl#getConstSpec1 <em>Const Spec1</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ConstDeclImpl extends MinimalEObjectImpl.Container implements ConstDecl
{
  /**
   * The default value of the '{@link #getConst() <em>Const</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConst()
   * @generated
   * @ordered
   */
  protected static final String CONST_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getConst() <em>Const</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConst()
   * @generated
   * @ordered
   */
  protected String const_ = CONST_EDEFAULT;

  /**
   * The cached value of the '{@link #getConstSpec() <em>Const Spec</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstSpec()
   * @generated
   * @ordered
   */
  protected ConstSpec constSpec;

  /**
   * The cached value of the '{@link #getConstSpec1() <em>Const Spec1</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstSpec1()
   * @generated
   * @ordered
   */
  protected EList<ConstSpec> constSpec1;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ConstDeclImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.CONST_DECL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getConst()
  {
    return const_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setConst(String newConst)
  {
    String oldConst = const_;
    const_ = newConst;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.CONST_DECL__CONST, oldConst, const_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ConstSpec getConstSpec()
  {
    return constSpec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConstSpec(ConstSpec newConstSpec, NotificationChain msgs)
  {
    ConstSpec oldConstSpec = constSpec;
    constSpec = newConstSpec;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.CONST_DECL__CONST_SPEC, oldConstSpec, newConstSpec);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setConstSpec(ConstSpec newConstSpec)
  {
    if (newConstSpec != constSpec)
    {
      NotificationChain msgs = null;
      if (constSpec != null)
        msgs = ((InternalEObject)constSpec).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.CONST_DECL__CONST_SPEC, null, msgs);
      if (newConstSpec != null)
        msgs = ((InternalEObject)newConstSpec).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.CONST_DECL__CONST_SPEC, null, msgs);
      msgs = basicSetConstSpec(newConstSpec, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.CONST_DECL__CONST_SPEC, newConstSpec, newConstSpec));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ConstSpec> getConstSpec1()
  {
    if (constSpec1 == null)
    {
      constSpec1 = new EObjectContainmentEList<ConstSpec>(ConstSpec.class, this, MyDslPackage.CONST_DECL__CONST_SPEC1);
    }
    return constSpec1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.CONST_DECL__CONST_SPEC:
        return basicSetConstSpec(null, msgs);
      case MyDslPackage.CONST_DECL__CONST_SPEC1:
        return ((InternalEList<?>)getConstSpec1()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.CONST_DECL__CONST:
        return getConst();
      case MyDslPackage.CONST_DECL__CONST_SPEC:
        return getConstSpec();
      case MyDslPackage.CONST_DECL__CONST_SPEC1:
        return getConstSpec1();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.CONST_DECL__CONST:
        setConst((String)newValue);
        return;
      case MyDslPackage.CONST_DECL__CONST_SPEC:
        setConstSpec((ConstSpec)newValue);
        return;
      case MyDslPackage.CONST_DECL__CONST_SPEC1:
        getConstSpec1().clear();
        getConstSpec1().addAll((Collection<? extends ConstSpec>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.CONST_DECL__CONST:
        setConst(CONST_EDEFAULT);
        return;
      case MyDslPackage.CONST_DECL__CONST_SPEC:
        setConstSpec((ConstSpec)null);
        return;
      case MyDslPackage.CONST_DECL__CONST_SPEC1:
        getConstSpec1().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.CONST_DECL__CONST:
        return CONST_EDEFAULT == null ? const_ != null : !CONST_EDEFAULT.equals(const_);
      case MyDslPackage.CONST_DECL__CONST_SPEC:
        return constSpec != null;
      case MyDslPackage.CONST_DECL__CONST_SPEC1:
        return constSpec1 != null && !constSpec1.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (const: ");
    result.append(const_);
    result.append(')');
    return result.toString();
  }

} //ConstDeclImpl
