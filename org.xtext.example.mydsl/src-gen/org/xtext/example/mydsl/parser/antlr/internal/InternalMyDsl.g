/*
 * generated by Xtext 2.10.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getGreetingsSourceFileParserRuleCall_0());
			}
			lv_greetings_0_0=ruleSourceFile
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"greetings",
					lv_greetings_0_0,
					"org.xtext.example.mydsl.MyDsl.SourceFile");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeAccess().getTypeNameTypeNameParserRuleCall_0_0());
				}
				lv_typeName_0_0=ruleTypeName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeRule());
					}
					set(
						$current,
						"typeName",
						lv_typeName_0_0,
						"org.xtext.example.mydsl.MyDsl.TypeName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeAccess().getTypeLitTypeLitParserRuleCall_1_0());
				}
				lv_typeLit_1_0=ruleTypeLit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeRule());
					}
					set(
						$current,
						"typeLit",
						lv_typeLit_1_0,
						"org.xtext.example.mydsl.MyDsl.TypeLit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeAccess().getTypeTypeParserRuleCall_2_1_0());
					}
					lv_type_3_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeRule());
						}
						set(
							$current,
							"type",
							lv_type_3_0,
							"org.xtext.example.mydsl.MyDsl.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2());
			}
		)
	)
;

// Entry rule entryRuleTypeName
entryRuleTypeName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeNameRule()); }
	iv_ruleTypeName=ruleTypeName
	{ $current=$iv_ruleTypeName.current; }
	EOF;

// Rule TypeName
ruleTypeName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_id_0_0=RULE_IDENTIFIER
			{
				newLeafNode(lv_id_0_0, grammarAccess.getTypeNameAccess().getIdIDENTIFIERTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTypeNameRule());
				}
				setWithLastConsumed(
					$current,
					"id",
					lv_id_0_0,
					"org.xtext.example.mydsl.MyDsl.IDENTIFIER");
			}
		)
	)
;

// Entry rule entryRuleTypeLit
entryRuleTypeLit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeLitRule()); }
	iv_ruleTypeLit=ruleTypeLit
	{ $current=$iv_ruleTypeLit.current; }
	EOF;

// Rule TypeLit
ruleTypeLit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='['
			{
				newLeafNode(otherlv_0, grammarAccess.getTypeLitAccess().getLeftSquareBracketKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeLitAccess().getTypeLitLinhaTypeLitLinhaParserRuleCall_0_1_0());
					}
					lv_typeLitLinha_1_0=ruleTypeLitLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeLitRule());
						}
						set(
							$current,
							"typeLitLinha",
							lv_typeLitLinha_1_0,
							"org.xtext.example.mydsl.MyDsl.TypeLitLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeLitAccess().getSrtuctTypeStructTypeParserRuleCall_1_0());
				}
				lv_srtuctType_2_0=ruleStructType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeLitRule());
					}
					set(
						$current,
						"srtuctType",
						lv_srtuctType_2_0,
						"org.xtext.example.mydsl.MyDsl.StructType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeLitAccess().getPointerTypePointerTypeParserRuleCall_2_0());
				}
				lv_pointerType_3_0=rulePointerType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeLitRule());
					}
					set(
						$current,
						"pointerType",
						lv_pointerType_3_0,
						"org.xtext.example.mydsl.MyDsl.PointerType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeLitAccess().getFunctionTypeFunctionTypeParserRuleCall_3_0());
				}
				lv_functionType_4_0=ruleFunctionType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeLitRule());
					}
					set(
						$current,
						"functionType",
						lv_functionType_4_0,
						"org.xtext.example.mydsl.MyDsl.FunctionType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeLitAccess().getInterfaceTypeInterfaceTypeParserRuleCall_4_0());
				}
				lv_interfaceType_5_0=ruleInterfaceType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeLitRule());
					}
					set(
						$current,
						"interfaceType",
						lv_interfaceType_5_0,
						"org.xtext.example.mydsl.MyDsl.InterfaceType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeLitAccess().getMapTypeMapTypeParserRuleCall_5_0());
				}
				lv_mapType_6_0=ruleMapType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeLitRule());
					}
					set(
						$current,
						"mapType",
						lv_mapType_6_0,
						"org.xtext.example.mydsl.MyDsl.MapType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeLitAccess().getChannelTypeChannelTypeParserRuleCall_6_0());
				}
				lv_channelType_7_0=ruleChannelType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeLitRule());
					}
					set(
						$current,
						"channelType",
						lv_channelType_7_0,
						"org.xtext.example.mydsl.MyDsl.ChannelType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTypeLitLinha
entryRuleTypeLitLinha returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeLitLinhaRule()); }
	iv_ruleTypeLitLinha=ruleTypeLitLinha
	{ $current=$iv_ruleTypeLitLinha.current; }
	EOF;

// Rule TypeLitLinha
ruleTypeLitLinha returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeLitLinhaAccess().getArrayLengthArrayLengthParserRuleCall_0_0_0());
					}
					lv_arrayLength_0_0=ruleArrayLength
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeLitLinhaRule());
						}
						set(
							$current,
							"arrayLength",
							lv_arrayLength_0_0,
							"org.xtext.example.mydsl.MyDsl.ArrayLength");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1=']'
			{
				newLeafNode(otherlv_1, grammarAccess.getTypeLitLinhaAccess().getRightSquareBracketKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeLitLinhaAccess().getElementTypeElementTypeParserRuleCall_0_2_0());
					}
					lv_elementType_2_0=ruleElementType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeLitLinhaRule());
						}
						set(
							$current,
							"elementType",
							lv_elementType_2_0,
							"org.xtext.example.mydsl.MyDsl.ElementType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_3=']'
			{
				newLeafNode(otherlv_3, grammarAccess.getTypeLitLinhaAccess().getRightSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeLitLinhaAccess().getElementTypeElementTypeParserRuleCall_1_1_0());
					}
					lv_elementType_4_0=ruleElementType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeLitLinhaRule());
						}
						set(
							$current,
							"elementType",
							lv_elementType_4_0,
							"org.xtext.example.mydsl.MyDsl.ElementType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleArrayLength
entryRuleArrayLength returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayLengthRule()); }
	iv_ruleArrayLength=ruleArrayLength
	{ $current=$iv_ruleArrayLength.current; }
	EOF;

// Rule ArrayLength
ruleArrayLength returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getArrayLengthAccess().getExpressionExpressionParserRuleCall_0());
			}
			lv_expression_0_0=ruleExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getArrayLengthRule());
				}
				set(
					$current,
					"expression",
					lv_expression_0_0,
					"org.xtext.example.mydsl.MyDsl.Expression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleElementType
entryRuleElementType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementTypeRule()); }
	iv_ruleElementType=ruleElementType
	{ $current=$iv_ruleElementType.current; }
	EOF;

// Rule ElementType
ruleElementType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getElementTypeAccess().getTypeTypeParserRuleCall_0());
			}
			lv_type_0_0=ruleType
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getElementTypeRule());
				}
				set(
					$current,
					"type",
					lv_type_0_0,
					"org.xtext.example.mydsl.MyDsl.Type");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleStructType
entryRuleStructType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStructTypeRule()); }
	iv_ruleStructType=ruleStructType
	{ $current=$iv_ruleStructType.current; }
	EOF;

// Rule StructType
ruleStructType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_struct_0_0=RULE_STRUCT
				{
					newLeafNode(lv_struct_0_0, grammarAccess.getStructTypeAccess().getStructSTRUCTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStructTypeRule());
					}
					setWithLastConsumed(
						$current,
						"struct",
						lv_struct_0_0,
						"org.xtext.example.mydsl.MyDsl.STRUCT");
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStructTypeAccess().getFieldDeclFieldDeclParserRuleCall_2_0());
				}
				lv_fieldDecl_2_0=ruleFieldDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStructTypeRule());
					}
					add(
						$current,
						"fieldDecl",
						lv_fieldDecl_2_0,
						"org.xtext.example.mydsl.MyDsl.FieldDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleFieldDecl
entryRuleFieldDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldDeclRule()); }
	iv_ruleFieldDecl=ruleFieldDecl
	{ $current=$iv_ruleFieldDecl.current; }
	EOF;

// Rule FieldDecl
ruleFieldDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFieldDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0_0_0());
						}
						lv_identifierList_0_0=ruleIdentifierList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFieldDeclRule());
							}
							set(
								$current,
								"identifierList",
								lv_identifierList_0_0,
								"org.xtext.example.mydsl.MyDsl.IdentifierList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_0_0_1_0());
						}
						lv_type_1_0=ruleType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFieldDeclRule());
							}
							set(
								$current,
								"type",
								lv_type_1_0,
								"org.xtext.example.mydsl.MyDsl.Type");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getFieldDeclAccess().getEmbeddedFieldEmbeddedFieldParserRuleCall_0_1_0());
					}
					lv_embeddedField_2_0=ruleEmbeddedField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFieldDeclRule());
						}
						set(
							$current,
							"embeddedField",
							lv_embeddedField_2_0,
							"org.xtext.example.mydsl.MyDsl.EmbeddedField");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldDeclAccess().getTagTagParserRuleCall_1_0());
				}
				lv_tag_3_0=ruleTag
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldDeclRule());
					}
					set(
						$current,
						"tag",
						lv_tag_3_0,
						"org.xtext.example.mydsl.MyDsl.Tag");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleEmbeddedField
entryRuleEmbeddedField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmbeddedFieldRule()); }
	iv_ruleEmbeddedField=ruleEmbeddedField
	{ $current=$iv_ruleEmbeddedField.current; }
	EOF;

// Rule EmbeddedField
ruleEmbeddedField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='*'
			{
				newLeafNode(otherlv_0, grammarAccess.getEmbeddedFieldAccess().getAsteriskKeyword_0());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getEmbeddedFieldAccess().getTypeNameTypeNameParserRuleCall_1_0());
				}
				lv_typeName_1_0=ruleTypeName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEmbeddedFieldRule());
					}
					set(
						$current,
						"typeName",
						lv_typeName_1_0,
						"org.xtext.example.mydsl.MyDsl.TypeName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTag
entryRuleTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTagRule()); }
	iv_ruleTag=ruleTag
	{ $current=$iv_ruleTag.current; }
	EOF;

// Rule Tag
ruleTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_string_lit_0_0=RULE_STRING_LIT
			{
				newLeafNode(lv_string_lit_0_0, grammarAccess.getTagAccess().getString_litSTRING_LITTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTagRule());
				}
				setWithLastConsumed(
					$current,
					"string_lit",
					lv_string_lit_0_0,
					"org.xtext.example.mydsl.MyDsl.STRING_LIT");
			}
		)
	)
;

// Entry rule entryRulePointerType
entryRulePointerType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPointerTypeRule()); }
	iv_rulePointerType=rulePointerType
	{ $current=$iv_rulePointerType.current; }
	EOF;

// Rule PointerType
rulePointerType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='*'
		{
			newLeafNode(otherlv_0, grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPointerTypeAccess().getBaseTypeBaseTypeParserRuleCall_1_0());
				}
				lv_baseType_1_0=ruleBaseType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPointerTypeRule());
					}
					set(
						$current,
						"baseType",
						lv_baseType_1_0,
						"org.xtext.example.mydsl.MyDsl.BaseType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBaseType
entryRuleBaseType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBaseTypeRule()); }
	iv_ruleBaseType=ruleBaseType
	{ $current=$iv_ruleBaseType.current; }
	EOF;

// Rule BaseType
ruleBaseType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getBaseTypeAccess().getTypeTypeParserRuleCall_0());
			}
			lv_type_0_0=ruleType
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getBaseTypeRule());
				}
				set(
					$current,
					"type",
					lv_type_0_0,
					"org.xtext.example.mydsl.MyDsl.Type");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleFunctionType
entryRuleFunctionType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionTypeRule()); }
	iv_ruleFunctionType=ruleFunctionType
	{ $current=$iv_ruleFunctionType.current; }
	EOF;

// Rule FunctionType
ruleFunctionType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_func_0_0='func'
				{
					newLeafNode(lv_func_0_0, grammarAccess.getFunctionTypeAccess().getFuncFuncKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionTypeRule());
					}
					setWithLastConsumed($current, "func", lv_func_0_0, "func");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionTypeAccess().getSignatureSignatureParserRuleCall_1_0());
				}
				lv_signature_1_0=ruleSignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionTypeRule());
					}
					set(
						$current,
						"signature",
						lv_signature_1_0,
						"org.xtext.example.mydsl.MyDsl.Signature");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSignature
entryRuleSignature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSignatureRule()); }
	iv_ruleSignature=ruleSignature
	{ $current=$iv_ruleSignature.current; }
	EOF;

// Rule Signature
ruleSignature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSignatureAccess().getParametersParametersParserRuleCall_0_0());
				}
				lv_parameters_0_0=ruleParameters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSignatureRule());
					}
					set(
						$current,
						"parameters",
						lv_parameters_0_0,
						"org.xtext.example.mydsl.MyDsl.Parameters");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0());
				}
				lv_result_1_0=ruleResult
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSignatureRule());
					}
					set(
						$current,
						"result",
						lv_result_1_0,
						"org.xtext.example.mydsl.MyDsl.Result");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleResult
entryRuleResult returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResultRule()); }
	iv_ruleResult=ruleResult
	{ $current=$iv_ruleResult.current; }
	EOF;

// Rule Result
ruleResult returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getResultAccess().getParametersParametersParserRuleCall_0_0());
				}
				lv_parameters_0_0=ruleParameters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResultRule());
					}
					set(
						$current,
						"parameters",
						lv_parameters_0_0,
						"org.xtext.example.mydsl.MyDsl.Parameters");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getResultAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResultRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.example.mydsl.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParameters
entryRuleParameters returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParametersRule()); }
	iv_ruleParameters=ruleParameters
	{ $current=$iv_ruleParameters.current; }
	EOF;

// Rule Parameters
ruleParameters returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getParametersAccess().getParametersAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParametersAccess().getParameterListParameterListParserRuleCall_2_0());
				}
				lv_parameterList_2_0=ruleParameterList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParametersRule());
					}
					set(
						$current,
						"parameterList",
						lv_parameterList_2_0,
						"org.xtext.example.mydsl.MyDsl.ParameterList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getParametersAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleParameterList
entryRuleParameterList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterListRule()); }
	iv_ruleParameterList=ruleParameterList
	{ $current=$iv_ruleParameterList.current; }
	EOF;

// Rule ParameterList
ruleParameterList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterListAccess().getParameterDeclParameterDeclParserRuleCall_0_0());
				}
				lv_parameterDecl_0_0=ruleParameterDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterListRule());
					}
					set(
						$current,
						"parameterDecl",
						lv_parameterDecl_0_0,
						"org.xtext.example.mydsl.MyDsl.ParameterDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterListAccess().getParameterDecl1ParameterDeclParserRuleCall_1_1_0());
					}
					lv_parameterDecl1_2_0=ruleParameterDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterListRule());
						}
						add(
							$current,
							"parameterDecl1",
							lv_parameterDecl1_2_0,
							"org.xtext.example.mydsl.MyDsl.ParameterDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleParameterDecl
entryRuleParameterDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterDeclRule()); }
	iv_ruleParameterDecl=ruleParameterDecl
	{ $current=$iv_ruleParameterDecl.current; }
	EOF;

// Rule ParameterDecl
ruleParameterDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0());
				}
				lv_identifierList_0_0=ruleIdentifierList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterDeclRule());
					}
					set(
						$current,
						"identifierList",
						lv_identifierList_0_0,
						"org.xtext.example.mydsl.MyDsl.IdentifierList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_1='...'
			{
				newLeafNode(otherlv_1, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterDeclAccess().getTypeTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterDeclRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.mydsl.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInterfaceType
entryRuleInterfaceType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceTypeRule()); }
	iv_ruleInterfaceType=ruleInterfaceType
	{ $current=$iv_ruleInterfaceType.current; }
	EOF;

// Rule InterfaceType
ruleInterfaceType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_interface_0_0=RULE_INTERFACE
				{
					newLeafNode(lv_interface_0_0, grammarAccess.getInterfaceTypeAccess().getInterfaceINTERFACETerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInterfaceTypeRule());
					}
					setWithLastConsumed(
						$current,
						"interface",
						lv_interface_0_0,
						"org.xtext.example.mydsl.MyDsl.INTERFACE");
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceTypeAccess().getMethodSpecMethodSpecParserRuleCall_2_0());
				}
				lv_methodSpec_2_0=ruleMethodSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceTypeRule());
					}
					add(
						$current,
						"methodSpec",
						lv_methodSpec_2_0,
						"org.xtext.example.mydsl.MyDsl.MethodSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleMethodSpec
entryRuleMethodSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodSpecRule()); }
	iv_ruleMethodSpec=ruleMethodSpec
	{ $current=$iv_ruleMethodSpec.current; }
	EOF;

// Rule MethodSpec
ruleMethodSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodSpecAccess().getMethodNameMethodNameParserRuleCall_0_0_0());
					}
					lv_methodName_0_0=ruleMethodName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodSpecRule());
						}
						set(
							$current,
							"methodName",
							lv_methodName_0_0,
							"org.xtext.example.mydsl.MyDsl.MethodName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodSpecAccess().getSignatureSignatureParserRuleCall_0_1_0());
					}
					lv_Signature_1_0=ruleSignature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodSpecRule());
						}
						set(
							$current,
							"Signature",
							lv_Signature_1_0,
							"org.xtext.example.mydsl.MyDsl.Signature");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodSpecAccess().getInterfaceTypeNameInterfaceTypeNameParserRuleCall_1_0());
				}
				lv_interfaceTypeName_2_0=ruleInterfaceTypeName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodSpecRule());
					}
					set(
						$current,
						"interfaceTypeName",
						lv_interfaceTypeName_2_0,
						"org.xtext.example.mydsl.MyDsl.InterfaceTypeName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMethodName
entryRuleMethodName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodNameRule()); }
	iv_ruleMethodName=ruleMethodName
	{ $current=$iv_ruleMethodName.current; }
	EOF;

// Rule MethodName
ruleMethodName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_id_0_0=RULE_IDENTIFIER
			{
				newLeafNode(lv_id_0_0, grammarAccess.getMethodNameAccess().getIdIDENTIFIERTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getMethodNameRule());
				}
				setWithLastConsumed(
					$current,
					"id",
					lv_id_0_0,
					"org.xtext.example.mydsl.MyDsl.IDENTIFIER");
			}
		)
	)
;

// Entry rule entryRuleInterfaceTypeName
entryRuleInterfaceTypeName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceTypeNameRule()); }
	iv_ruleInterfaceTypeName=ruleInterfaceTypeName
	{ $current=$iv_ruleInterfaceTypeName.current; }
	EOF;

// Rule InterfaceTypeName
ruleInterfaceTypeName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getInterfaceTypeNameAccess().getTypeNameTypeNameParserRuleCall_0());
			}
			lv_typeName_0_0=ruleTypeName
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getInterfaceTypeNameRule());
				}
				set(
					$current,
					"typeName",
					lv_typeName_0_0,
					"org.xtext.example.mydsl.MyDsl.TypeName");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleMapType
entryRuleMapType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapTypeRule()); }
	iv_ruleMapType=ruleMapType
	{ $current=$iv_ruleMapType.current; }
	EOF;

// Rule MapType
ruleMapType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_map_0_0=RULE_MAP
				{
					newLeafNode(lv_map_0_0, grammarAccess.getMapTypeAccess().getMapMAPTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMapTypeRule());
					}
					setWithLastConsumed(
						$current,
						"map",
						lv_map_0_0,
						"org.xtext.example.mydsl.MyDsl.MAP");
				}
			)
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapTypeAccess().getKeyTypeKeyTypeParserRuleCall_2_0());
				}
				lv_keyType_2_0=ruleKeyType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapTypeRule());
					}
					set(
						$current,
						"keyType",
						lv_keyType_2_0,
						"org.xtext.example.mydsl.MyDsl.KeyType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapTypeAccess().getElementTypeElementTypeParserRuleCall_4_0());
				}
				lv_elementType_4_0=ruleElementType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapTypeRule());
					}
					set(
						$current,
						"elementType",
						lv_elementType_4_0,
						"org.xtext.example.mydsl.MyDsl.ElementType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleKeyType
entryRuleKeyType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyTypeRule()); }
	iv_ruleKeyType=ruleKeyType
	{ $current=$iv_ruleKeyType.current; }
	EOF;

// Rule KeyType
ruleKeyType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getKeyTypeAccess().getTypeTypeParserRuleCall_0());
			}
			lv_type_0_0=ruleType
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getKeyTypeRule());
				}
				set(
					$current,
					"type",
					lv_type_0_0,
					"org.xtext.example.mydsl.MyDsl.Type");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleChannelType
entryRuleChannelType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChannelTypeRule()); }
	iv_ruleChannelType=ruleChannelType
	{ $current=$iv_ruleChannelType.current; }
	EOF;

// Rule ChannelType
ruleChannelType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						lv_chan_0_0=RULE_CHAN
						{
							newLeafNode(lv_chan_0_0, grammarAccess.getChannelTypeAccess().getChanCHANTerminalRuleCall_0_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getChannelTypeRule());
							}
							setWithLastConsumed(
								$current,
								"chan",
								lv_chan_0_0,
								"org.xtext.example.mydsl.MyDsl.CHAN");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getChannelTypeAccess().getChannelTypeLinhaChannelTypeLinhaParserRuleCall_0_0_1_0());
						}
						lv_channelTypeLinha_1_0=ruleChannelTypeLinha
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getChannelTypeRule());
							}
							set(
								$current,
								"channelTypeLinha",
								lv_channelTypeLinha_1_0,
								"org.xtext.example.mydsl.MyDsl.ChannelTypeLinha");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_2='<-'
				{
					newLeafNode(otherlv_2, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_0());
				}
				(
					(
						lv_chan_3_0=RULE_CHAN
						{
							newLeafNode(lv_chan_3_0, grammarAccess.getChannelTypeAccess().getChanCHANTerminalRuleCall_0_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getChannelTypeRule());
							}
							setWithLastConsumed(
								$current,
								"chan",
								lv_chan_3_0,
								"org.xtext.example.mydsl.MyDsl.CHAN");
						}
					)
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getChannelTypeAccess().getElementTypeElementTypeParserRuleCall_1_0());
				}
				lv_elementType_4_0=ruleElementType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChannelTypeRule());
					}
					set(
						$current,
						"elementType",
						lv_elementType_4_0,
						"org.xtext.example.mydsl.MyDsl.ElementType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleChannelTypeLinha
entryRuleChannelTypeLinha returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChannelTypeLinhaRule()); }
	iv_ruleChannelTypeLinha=ruleChannelTypeLinha
	{ $current=$iv_ruleChannelTypeLinha.current; }
	EOF;

// Rule ChannelTypeLinha
ruleChannelTypeLinha returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<-'
		{
			newLeafNode(otherlv_0, grammarAccess.getChannelTypeLinhaAccess().getLessThanSignHyphenMinusKeyword_0());
		}
		    |
		(
			(
				lv_aNY_OTHER_1_0=RULE_ANY_OTHER
				{
					newLeafNode(lv_aNY_OTHER_1_0, grammarAccess.getChannelTypeLinhaAccess().getANY_OTHERANY_OTHERTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getChannelTypeLinhaRule());
					}
					setWithLastConsumed(
						$current,
						"aNY_OTHER",
						lv_aNY_OTHER_1_0,
						"org.xtext.example.mydsl.MyDsl.ANY_OTHER");
				}
			)
		)
	)
;

// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	iv_ruleBlock=ruleBlock
	{ $current=$iv_ruleBlock.current; }
	EOF;

// Rule Block
ruleBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockAccess().getStatementListStatementListParserRuleCall_1_0());
				}
				lv_statementList_1_0=ruleStatementList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockRule());
					}
					set(
						$current,
						"statementList",
						lv_statementList_1_0,
						"org.xtext.example.mydsl.MyDsl.StatementList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleStatementList
entryRuleStatementList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementListRule()); }
	iv_ruleStatementList=ruleStatementList
	{ $current=$iv_ruleStatementList.current; }
	EOF;

// Rule StatementList
ruleStatementList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getStatementListAccess().getStatementListAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementListAccess().getStatementsStatementParserRuleCall_1_0_0());
					}
					lv_statements_1_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementListRule());
						}
						add(
							$current,
							"statements",
							lv_statements_1_0,
							"org.xtext.example.mydsl.MyDsl.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getStatementListAccess().getSemicolonKeyword_1_1());
			}
		)*
	)
;

// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruleDeclaration=ruleDeclaration
	{ $current=$iv_ruleDeclaration.current; }
	EOF;

// Rule Declaration
ruleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarationAccess().getConstDeclConstDeclParserRuleCall_0_0());
				}
				lv_constDecl_0_0=ruleConstDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarationRule());
					}
					set(
						$current,
						"constDecl",
						lv_constDecl_0_0,
						"org.xtext.example.mydsl.MyDsl.ConstDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarationAccess().getTypeDeclTypeDeclParserRuleCall_1_0());
				}
				lv_typeDecl_1_0=ruleTypeDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarationRule());
					}
					set(
						$current,
						"typeDecl",
						lv_typeDecl_1_0,
						"org.xtext.example.mydsl.MyDsl.TypeDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarationAccess().getVarDeclVarDeclParserRuleCall_2_0());
				}
				lv_varDecl_2_0=ruleVarDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarationRule());
					}
					set(
						$current,
						"varDecl",
						lv_varDecl_2_0,
						"org.xtext.example.mydsl.MyDsl.VarDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTopLevelDecl
entryRuleTopLevelDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTopLevelDeclRule()); }
	iv_ruleTopLevelDecl=ruleTopLevelDecl
	{ $current=$iv_ruleTopLevelDecl.current; }
	EOF;

// Rule TopLevelDecl
ruleTopLevelDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTopLevelDeclAccess().getDeclarationDeclarationParserRuleCall_0_0());
				}
				lv_declaration_0_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTopLevelDeclRule());
					}
					set(
						$current,
						"declaration",
						lv_declaration_0_0,
						"org.xtext.example.mydsl.MyDsl.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTopLevelDeclAccess().getFunctionDeclFunctionDeclParserRuleCall_1_0());
				}
				lv_functionDecl_1_0=ruleFunctionDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTopLevelDeclRule());
					}
					set(
						$current,
						"functionDecl",
						lv_functionDecl_1_0,
						"org.xtext.example.mydsl.MyDsl.FunctionDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTopLevelDeclAccess().getMethodDeclMethodDeclParserRuleCall_2_0());
				}
				lv_methodDecl_2_0=ruleMethodDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTopLevelDeclRule());
					}
					set(
						$current,
						"methodDecl",
						lv_methodDecl_2_0,
						"org.xtext.example.mydsl.MyDsl.MethodDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConstDecl
entryRuleConstDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstDeclRule()); }
	iv_ruleConstDecl=ruleConstDecl
	{ $current=$iv_ruleConstDecl.current; }
	EOF;

// Rule ConstDecl
ruleConstDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_const_0_0='const'
				{
					newLeafNode(lv_const_0_0, grammarAccess.getConstDeclAccess().getConstConstKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstDeclRule());
					}
					setWithLastConsumed($current, "const", lv_const_0_0, "const");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConstDeclAccess().getConstSpecConstSpecParserRuleCall_1_0_0());
					}
					lv_constSpec_1_0=ruleConstSpec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstDeclRule());
						}
						set(
							$current,
							"constSpec",
							lv_constSpec_1_0,
							"org.xtext.example.mydsl.MyDsl.ConstSpec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_2='('
				{
					newLeafNode(otherlv_2, grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConstDeclAccess().getConstSpec1ConstSpecParserRuleCall_1_1_1_0());
						}
						lv_constSpec1_3_0=ruleConstSpec
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConstDeclRule());
							}
							add(
								$current,
								"constSpec1",
								lv_constSpec1_3_0,
								"org.xtext.example.mydsl.MyDsl.ConstSpec");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_4=')'
				{
					newLeafNode(otherlv_4, grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_1_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleConstSpec
entryRuleConstSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstSpecRule()); }
	iv_ruleConstSpec=ruleConstSpec
	{ $current=$iv_ruleConstSpec.current; }
	EOF;

// Rule ConstSpec
ruleConstSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConstSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0());
				}
				lv_identifierList_0_0=ruleIdentifierList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstSpecRule());
					}
					set(
						$current,
						"identifierList",
						lv_identifierList_0_0,
						"org.xtext.example.mydsl.MyDsl.IdentifierList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConstSpecAccess().getTypeTypeParserRuleCall_1_0_0());
					}
					lv_type_1_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstSpecRule());
						}
						set(
							$current,
							"type",
							lv_type_1_0,
							"org.xtext.example.mydsl.MyDsl.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getConstSpecAccess().getEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConstSpecAccess().getExpressionListExpressionListParserRuleCall_1_2_0());
					}
					lv_expressionList_3_0=ruleExpressionList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstSpecRule());
						}
						set(
							$current,
							"expressionList",
							lv_expressionList_3_0,
							"org.xtext.example.mydsl.MyDsl.ExpressionList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleIdentifierList
entryRuleIdentifierList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdentifierListRule()); }
	iv_ruleIdentifierList=ruleIdentifierList
	{ $current=$iv_ruleIdentifierList.current; }
	EOF;

// Rule IdentifierList
ruleIdentifierList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_id_0_0=RULE_IDENTIFIER
				{
					newLeafNode(lv_id_0_0, grammarAccess.getIdentifierListAccess().getIdIDENTIFIERTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIdentifierListRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_0_0,
						"org.xtext.example.mydsl.MyDsl.IDENTIFIER");
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getIdentifierListAccess().getCommaKeyword_1_0());
			}
			(
				(
					lv_id1_2_0=RULE_IDENTIFIER
					{
						newLeafNode(lv_id1_2_0, grammarAccess.getIdentifierListAccess().getId1IDENTIFIERTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIdentifierListRule());
						}
						addWithLastConsumed(
							$current,
							"id1",
							lv_id1_2_0,
							"org.xtext.example.mydsl.MyDsl.IDENTIFIER");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExpressionList
entryRuleExpressionList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionListRule()); }
	iv_ruleExpressionList=ruleExpressionList
	{ $current=$iv_ruleExpressionList.current; }
	EOF;

// Rule ExpressionList
ruleExpressionList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_0_0());
				}
				lv_expression_0_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionListRule());
					}
					set(
						$current,
						"expression",
						lv_expression_0_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getExpressionListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionListAccess().getExpression1ExpressionParserRuleCall_1_1_0());
					}
					lv_expression1_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionListRule());
						}
						add(
							$current,
							"expression1",
							lv_expression1_2_0,
							"org.xtext.example.mydsl.MyDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTypeDecl
entryRuleTypeDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeDeclRule()); }
	iv_ruleTypeDecl=ruleTypeDecl
	{ $current=$iv_ruleTypeDecl.current; }
	EOF;

// Rule TypeDecl
ruleTypeDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_typekeyword_0_0='type'
				{
					newLeafNode(lv_typekeyword_0_0, grammarAccess.getTypeDeclAccess().getTypekeywordTypeKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeDeclRule());
					}
					setWithLastConsumed($current, "typekeyword", lv_typekeyword_0_0, "type");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeDeclAccess().getTypeSpecTypeSpecParserRuleCall_1_0_0());
					}
					lv_typeSpec_1_0=ruleTypeSpec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeDeclRule());
						}
						set(
							$current,
							"typeSpec",
							lv_typeSpec_1_0,
							"org.xtext.example.mydsl.MyDsl.TypeSpec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_2='('
				{
					newLeafNode(otherlv_2, grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTypeDeclAccess().getTypeSpec1TypeSpecParserRuleCall_1_1_1_0());
						}
						lv_typeSpec1_3_0=ruleTypeSpec
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTypeDeclRule());
							}
							add(
								$current,
								"typeSpec1",
								lv_typeSpec1_3_0,
								"org.xtext.example.mydsl.MyDsl.TypeSpec");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_4=')'
				{
					newLeafNode(otherlv_4, grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_1_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleTypeSpec
entryRuleTypeSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSpecRule()); }
	iv_ruleTypeSpec=ruleTypeSpec
	{ $current=$iv_ruleTypeSpec.current; }
	EOF;

// Rule TypeSpec
ruleTypeSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeSpecAccess().getAliasDeclAliasDeclParserRuleCall_0_0());
				}
				lv_aliasDecl_0_0=ruleAliasDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeSpecRule());
					}
					set(
						$current,
						"aliasDecl",
						lv_aliasDecl_0_0,
						"org.xtext.example.mydsl.MyDsl.AliasDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeSpecAccess().getTypeDefTypeDefParserRuleCall_1_0());
				}
				lv_typeDef_1_0=ruleTypeDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeSpecRule());
					}
					set(
						$current,
						"typeDef",
						lv_typeDef_1_0,
						"org.xtext.example.mydsl.MyDsl.TypeDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAliasDecl
entryRuleAliasDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAliasDeclRule()); }
	iv_ruleAliasDecl=ruleAliasDecl
	{ $current=$iv_ruleAliasDecl.current; }
	EOF;

// Rule AliasDecl
ruleAliasDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_id_0_0=RULE_IDENTIFIER
				{
					newLeafNode(lv_id_0_0, grammarAccess.getAliasDeclAccess().getIdIDENTIFIERTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAliasDeclRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_0_0,
						"org.xtext.example.mydsl.MyDsl.IDENTIFIER");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAliasDeclAccess().getTypeTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAliasDeclRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.mydsl.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTypeDef
entryRuleTypeDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeDefRule()); }
	iv_ruleTypeDef=ruleTypeDef
	{ $current=$iv_ruleTypeDef.current; }
	EOF;

// Rule TypeDef
ruleTypeDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_id_0_0=RULE_IDENTIFIER
				{
					newLeafNode(lv_id_0_0, grammarAccess.getTypeDefAccess().getIdIDENTIFIERTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeDefRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_0_0,
						"org.xtext.example.mydsl.MyDsl.IDENTIFIER");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeDefAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeDefRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.example.mydsl.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVarDecl
entryRuleVarDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarDeclRule()); }
	iv_ruleVarDecl=ruleVarDecl
	{ $current=$iv_ruleVarDecl.current; }
	EOF;

// Rule VarDecl
ruleVarDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_var_0_0='var'
				{
					newLeafNode(lv_var_0_0, grammarAccess.getVarDeclAccess().getVarVarKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVarDeclRule());
					}
					setWithLastConsumed($current, "var", lv_var_0_0, "var");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getVarDeclAccess().getVarSpecVarSpecParserRuleCall_1_0_0());
					}
					lv_varSpec_1_0=ruleVarSpec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVarDeclRule());
						}
						set(
							$current,
							"varSpec",
							lv_varSpec_1_0,
							"org.xtext.example.mydsl.MyDsl.VarSpec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_2='('
				{
					newLeafNode(otherlv_2, grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVarDeclAccess().getVarSpec1VarSpecParserRuleCall_1_1_1_0());
						}
						lv_varSpec1_3_0=ruleVarSpec
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVarDeclRule());
							}
							add(
								$current,
								"varSpec1",
								lv_varSpec1_3_0,
								"org.xtext.example.mydsl.MyDsl.VarSpec");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_4=')'
				{
					newLeafNode(otherlv_4, grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_1_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleVarSpec
entryRuleVarSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarSpecRule()); }
	iv_ruleVarSpec=ruleVarSpec
	{ $current=$iv_ruleVarSpec.current; }
	EOF;

// Rule VarSpec
ruleVarSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVarSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0());
				}
				lv_IdentifierList_0_0=ruleIdentifierList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarSpecRule());
					}
					set(
						$current,
						"IdentifierList",
						lv_IdentifierList_0_0,
						"org.xtext.example.mydsl.MyDsl.IdentifierList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getVarSpecAccess().getTypeTypeParserRuleCall_1_0_0_0());
						}
						lv_type_1_0=ruleType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVarSpecRule());
							}
							set(
								$current,
								"type",
								lv_type_1_0,
								"org.xtext.example.mydsl.MyDsl.Type");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_2='='
					{
						newLeafNode(otherlv_2, grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_0());
							}
							lv_expressionList_3_0=ruleExpressionList
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getVarSpecRule());
								}
								set(
									$current,
									"expressionList",
									lv_expressionList_3_0,
									"org.xtext.example.mydsl.MyDsl.ExpressionList");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
			)
			    |
			(
				otherlv_4='='
				{
					newLeafNode(otherlv_4, grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_1_1_0());
						}
						lv_expressionList_5_0=ruleExpressionList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVarSpecRule());
							}
							set(
								$current,
								"expressionList",
								lv_expressionList_5_0,
								"org.xtext.example.mydsl.MyDsl.ExpressionList");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleShortVarDecl
entryRuleShortVarDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShortVarDeclRule()); }
	iv_ruleShortVarDecl=ruleShortVarDecl
	{ $current=$iv_ruleShortVarDecl.current; }
	EOF;

// Rule ShortVarDecl
ruleShortVarDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getShortVarDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0());
				}
				lv_identifierList_0_0=ruleIdentifierList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShortVarDeclRule());
					}
					set(
						$current,
						"identifierList",
						lv_identifierList_0_0,
						"org.xtext.example.mydsl.MyDsl.IdentifierList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':='
		{
			newLeafNode(otherlv_1, grammarAccess.getShortVarDeclAccess().getColonEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getShortVarDeclAccess().getExpressionListExpressionListParserRuleCall_2_0());
				}
				lv_expressionList_2_0=ruleExpressionList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShortVarDeclRule());
					}
					set(
						$current,
						"expressionList",
						lv_expressionList_2_0,
						"org.xtext.example.mydsl.MyDsl.ExpressionList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFunctionDecl
entryRuleFunctionDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionDeclRule()); }
	iv_ruleFunctionDecl=ruleFunctionDecl
	{ $current=$iv_ruleFunctionDecl.current; }
	EOF;

// Rule FunctionDecl
ruleFunctionDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='func'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionDeclAccess().getFuncKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionDeclAccess().getFunctionNameFunctionNameParserRuleCall_1_0());
				}
				lv_functionName_1_0=ruleFunctionName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
					}
					set(
						$current,
						"functionName",
						lv_functionName_1_0,
						"org.xtext.example.mydsl.MyDsl.FunctionName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionDeclAccess().getSignatureSignatureParserRuleCall_2_0());
				}
				lv_signature_2_0=ruleSignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
					}
					set(
						$current,
						"signature",
						lv_signature_2_0,
						"org.xtext.example.mydsl.MyDsl.Signature");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionDeclAccess().getFunctionBodyFunctionBodyParserRuleCall_3_0());
				}
				lv_functionBody_3_0=ruleFunctionBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
					}
					set(
						$current,
						"functionBody",
						lv_functionBody_3_0,
						"org.xtext.example.mydsl.MyDsl.FunctionBody");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleFunctionName
entryRuleFunctionName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionNameRule()); }
	iv_ruleFunctionName=ruleFunctionName
	{ $current=$iv_ruleFunctionName.current; }
	EOF;

// Rule FunctionName
ruleFunctionName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_id_0_0=RULE_IDENTIFIER
			{
				newLeafNode(lv_id_0_0, grammarAccess.getFunctionNameAccess().getIdIDENTIFIERTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFunctionNameRule());
				}
				setWithLastConsumed(
					$current,
					"id",
					lv_id_0_0,
					"org.xtext.example.mydsl.MyDsl.IDENTIFIER");
			}
		)
	)
;

// Entry rule entryRuleFunctionBody
entryRuleFunctionBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionBodyRule()); }
	iv_ruleFunctionBody=ruleFunctionBody
	{ $current=$iv_ruleFunctionBody.current; }
	EOF;

// Rule FunctionBody
ruleFunctionBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getFunctionBodyAccess().getBlockBlockParserRuleCall_0());
			}
			lv_block_0_0=ruleBlock
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
				}
				set(
					$current,
					"block",
					lv_block_0_0,
					"org.xtext.example.mydsl.MyDsl.Block");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleMethodDecl
entryRuleMethodDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodDeclRule()); }
	iv_ruleMethodDecl=ruleMethodDecl
	{ $current=$iv_ruleMethodDecl.current; }
	EOF;

// Rule MethodDecl
ruleMethodDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='func'
		{
			newLeafNode(otherlv_0, grammarAccess.getMethodDeclAccess().getFuncKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodDeclAccess().getReceiverReceiverParserRuleCall_1_0());
				}
				lv_receiver_1_0=ruleReceiver
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodDeclRule());
					}
					set(
						$current,
						"receiver",
						lv_receiver_1_0,
						"org.xtext.example.mydsl.MyDsl.Receiver");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodDeclAccess().getMethodNameMethodNameParserRuleCall_2_0());
				}
				lv_methodName_2_0=ruleMethodName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodDeclRule());
					}
					set(
						$current,
						"methodName",
						lv_methodName_2_0,
						"org.xtext.example.mydsl.MyDsl.MethodName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodDeclAccess().getSignatureSignatureParserRuleCall_3_0());
				}
				lv_signature_3_0=ruleSignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodDeclRule());
					}
					set(
						$current,
						"signature",
						lv_signature_3_0,
						"org.xtext.example.mydsl.MyDsl.Signature");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodDeclAccess().getFunctionBodyFunctionBodyParserRuleCall_4_0());
				}
				lv_functionBody_4_0=ruleFunctionBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodDeclRule());
					}
					set(
						$current,
						"functionBody",
						lv_functionBody_4_0,
						"org.xtext.example.mydsl.MyDsl.FunctionBody");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleReceiver
entryRuleReceiver returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReceiverRule()); }
	iv_ruleReceiver=ruleReceiver
	{ $current=$iv_ruleReceiver.current; }
	EOF;

// Rule Receiver
ruleReceiver returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getReceiverAccess().getParametersParametersParserRuleCall_0());
			}
			lv_parameters_0_0=ruleParameters
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getReceiverRule());
				}
				set(
					$current,
					"parameters",
					lv_parameters_0_0,
					"org.xtext.example.mydsl.MyDsl.Parameters");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleOperand
entryRuleOperand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperandRule()); }
	iv_ruleOperand=ruleOperand
	{ $current=$iv_ruleOperand.current; }
	EOF;

// Rule Operand
ruleOperand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_0());
				}
				lv_literal_0_0=ruleLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperandRule());
					}
					set(
						$current,
						"literal",
						lv_literal_0_0,
						"org.xtext.example.mydsl.MyDsl.Literal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getOperandAccess().getOperandNameOperandNameParserRuleCall_1_0());
				}
				lv_operandName_1_0=ruleOperandName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperandRule());
					}
					set(
						$current,
						"operandName",
						lv_operandName_1_0,
						"org.xtext.example.mydsl.MyDsl.OperandName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getOperandAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperandAccess().getExpressionExpressionParserRuleCall_2_1_0());
					}
					lv_expression_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperandRule());
						}
						set(
							$current,
							"expression",
							lv_expression_3_0,
							"org.xtext.example.mydsl.MyDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getOperandAccess().getRightParenthesisKeyword_2_2());
			}
		)
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralAccess().getBasicLitBasicLitParserRuleCall_0_0());
				}
				lv_basicLit_0_0=ruleBasicLit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralRule());
					}
					set(
						$current,
						"basicLit",
						lv_basicLit_0_0,
						"org.xtext.example.mydsl.MyDsl.BasicLit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralAccess().getCompositeLitCompositeLitParserRuleCall_1_0());
				}
				lv_compositeLit_1_0=ruleCompositeLit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralRule());
					}
					set(
						$current,
						"compositeLit",
						lv_compositeLit_1_0,
						"org.xtext.example.mydsl.MyDsl.CompositeLit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralAccess().getFunctionLitFunctionLitParserRuleCall_2_0());
				}
				lv_functionLit_2_0=ruleFunctionLit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralRule());
					}
					set(
						$current,
						"functionLit",
						lv_functionLit_2_0,
						"org.xtext.example.mydsl.MyDsl.FunctionLit");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBasicLit
entryRuleBasicLit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasicLitRule()); }
	iv_ruleBasicLit=ruleBasicLit
	{ $current=$iv_ruleBasicLit.current; }
	EOF;

// Rule BasicLit
ruleBasicLit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_int_lit_0_0=RULE_INT_LIT
				{
					newLeafNode(lv_int_lit_0_0, grammarAccess.getBasicLitAccess().getInt_litINT_LITTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBasicLitRule());
					}
					setWithLastConsumed(
						$current,
						"int_lit",
						lv_int_lit_0_0,
						"org.xtext.example.mydsl.MyDsl.INT_LIT");
				}
			)
		)
		    |
		(
			(
				lv_float_lit_1_0=RULE_FLOAT_LIT
				{
					newLeafNode(lv_float_lit_1_0, grammarAccess.getBasicLitAccess().getFloat_litFLOAT_LITTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBasicLitRule());
					}
					setWithLastConsumed(
						$current,
						"float_lit",
						lv_float_lit_1_0,
						"org.xtext.example.mydsl.MyDsl.FLOAT_LIT");
				}
			)
		)
		    |
		(
			(
				lv_imaginary_lit_2_0=RULE_IMAGINARY_LIT
				{
					newLeafNode(lv_imaginary_lit_2_0, grammarAccess.getBasicLitAccess().getImaginary_litIMAGINARY_LITTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBasicLitRule());
					}
					setWithLastConsumed(
						$current,
						"imaginary_lit",
						lv_imaginary_lit_2_0,
						"org.xtext.example.mydsl.MyDsl.IMAGINARY_LIT");
				}
			)
		)
		    |
		(
			(
				lv_rune_lit_3_0=RULE_RUNE_LIT
				{
					newLeafNode(lv_rune_lit_3_0, grammarAccess.getBasicLitAccess().getRune_litRUNE_LITTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBasicLitRule());
					}
					setWithLastConsumed(
						$current,
						"rune_lit",
						lv_rune_lit_3_0,
						"org.xtext.example.mydsl.MyDsl.RUNE_LIT");
				}
			)
		)
		    |
		(
			(
				lv_string_lit_4_0=RULE_STRING_LIT
				{
					newLeafNode(lv_string_lit_4_0, grammarAccess.getBasicLitAccess().getString_litSTRING_LITTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBasicLitRule());
					}
					setWithLastConsumed(
						$current,
						"string_lit",
						lv_string_lit_4_0,
						"org.xtext.example.mydsl.MyDsl.STRING_LIT");
				}
			)
		)
	)
;

// Entry rule entryRuleOperandName
entryRuleOperandName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperandNameRule()); }
	iv_ruleOperandName=ruleOperandName
	{ $current=$iv_ruleOperandName.current; }
	EOF;

// Rule OperandName
ruleOperandName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_id_0_0=RULE_IDENTIFIER
			{
				newLeafNode(lv_id_0_0, grammarAccess.getOperandNameAccess().getIdIDENTIFIERTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getOperandNameRule());
				}
				setWithLastConsumed(
					$current,
					"id",
					lv_id_0_0,
					"org.xtext.example.mydsl.MyDsl.IDENTIFIER");
			}
		)
	)
;

// Entry rule entryRuleCompositeLit
entryRuleCompositeLit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositeLitRule()); }
	iv_ruleCompositeLit=ruleCompositeLit
	{ $current=$iv_ruleCompositeLit.current; }
	EOF;

// Rule CompositeLit
ruleCompositeLit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteralTypeLiteralTypeParserRuleCall_0_0());
				}
				lv_literalType_0_0=ruleLiteralType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositeLitRule());
					}
					set(
						$current,
						"literalType",
						lv_literalType_0_0,
						"org.xtext.example.mydsl.MyDsl.LiteralType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteralValueLiteralValueParserRuleCall_1_0());
				}
				lv_literalValue_1_0=ruleLiteralValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositeLitRule());
					}
					set(
						$current,
						"literalValue",
						lv_literalValue_1_0,
						"org.xtext.example.mydsl.MyDsl.LiteralValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLiteralType
entryRuleLiteralType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralTypeRule()); }
	iv_ruleLiteralType=ruleLiteralType
	{ $current=$iv_ruleLiteralType.current; }
	EOF;

// Rule LiteralType
ruleLiteralType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralTypeAccess().getStructTypeStructTypeParserRuleCall_0_0());
				}
				lv_structType_0_0=ruleStructType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
					}
					set(
						$current,
						"structType",
						lv_structType_0_0,
						"org.xtext.example.mydsl.MyDsl.StructType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralTypeAccess().getMapTypeMapTypeParserRuleCall_1_0());
				}
				lv_mapType_1_0=ruleMapType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
					}
					set(
						$current,
						"mapType",
						lv_mapType_1_0,
						"org.xtext.example.mydsl.MyDsl.MapType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeNameTypeNameParserRuleCall_2_0());
				}
				lv_typeName_2_0=ruleTypeName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
					}
					set(
						$current,
						"typeName",
						lv_typeName_2_0,
						"org.xtext.example.mydsl.MyDsl.TypeName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_3='['
			{
				newLeafNode(otherlv_3, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralTypeAccess().getLiteralTypeLinhaLiteralTypeLinhaParserRuleCall_3_1_0());
					}
					lv_literalTypeLinha_4_0=ruleLiteralTypeLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
						}
						set(
							$current,
							"literalTypeLinha",
							lv_literalTypeLinha_4_0,
							"org.xtext.example.mydsl.MyDsl.LiteralTypeLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleLiteralTypeLinha
entryRuleLiteralTypeLinha returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralTypeLinhaRule()); }
	iv_ruleLiteralTypeLinha=ruleLiteralTypeLinha
	{ $current=$iv_ruleLiteralTypeLinha.current; }
	EOF;

// Rule LiteralTypeLinha
ruleLiteralTypeLinha returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralTypeLinhaAccess().getArrayLengthArrayLengthParserRuleCall_0_0_0());
					}
					lv_arrayLength_0_0=ruleArrayLength
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralTypeLinhaRule());
						}
						set(
							$current,
							"arrayLength",
							lv_arrayLength_0_0,
							"org.xtext.example.mydsl.MyDsl.ArrayLength");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1=']'
			{
				newLeafNode(otherlv_1, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeElementTypeParserRuleCall_0_2_0());
					}
					lv_elementType_2_0=ruleElementType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralTypeLinhaRule());
						}
						set(
							$current,
							"elementType",
							lv_elementType_2_0,
							"org.xtext.example.mydsl.MyDsl.ElementType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_3='...'
			{
				newLeafNode(otherlv_3, grammarAccess.getLiteralTypeLinhaAccess().getFullStopFullStopFullStopKeyword_1_0());
			}
			otherlv_4=']'
			{
				newLeafNode(otherlv_4, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeElementTypeParserRuleCall_1_2_0());
					}
					lv_elementType_5_0=ruleElementType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralTypeLinhaRule());
						}
						set(
							$current,
							"elementType",
							lv_elementType_5_0,
							"org.xtext.example.mydsl.MyDsl.ElementType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_6=']'
			{
				newLeafNode(otherlv_6, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeElementTypeParserRuleCall_2_1_0());
					}
					lv_elementType_7_0=ruleElementType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralTypeLinhaRule());
						}
						set(
							$current,
							"elementType",
							lv_elementType_7_0,
							"org.xtext.example.mydsl.MyDsl.ElementType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleLiteralValue
entryRuleLiteralValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralValueRule()); }
	iv_ruleLiteralValue=ruleLiteralValue
	{ $current=$iv_ruleLiteralValue.current; }
	EOF;

// Rule LiteralValue
ruleLiteralValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getLiteralValueAccess().getLiteralValueAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralValueAccess().getElementListElementListParserRuleCall_2_0_0());
					}
					lv_elementList_2_0=ruleElementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralValueRule());
						}
						set(
							$current,
							"elementList",
							lv_elementList_2_0,
							"org.xtext.example.mydsl.MyDsl.ElementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getLiteralValueAccess().getCommaKeyword_2_1());
				}
			)?
		)?
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleElementList
entryRuleElementList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementListRule()); }
	iv_ruleElementList=ruleElementList
	{ $current=$iv_ruleElementList.current; }
	EOF;

// Rule ElementList
ruleElementList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_0_0());
				}
				lv_keyedElement_0_0=ruleKeyedElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementListRule());
					}
					set(
						$current,
						"keyedElement",
						lv_keyedElement_0_0,
						"org.xtext.example.mydsl.MyDsl.KeyedElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getElementListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getElementListAccess().getKeyedElement1KeyedElementParserRuleCall_1_1_0());
					}
					lv_keyedElement1_2_0=ruleKeyedElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementListRule());
						}
						add(
							$current,
							"keyedElement1",
							lv_keyedElement1_2_0,
							"org.xtext.example.mydsl.MyDsl.KeyedElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleKeyedElement
entryRuleKeyedElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyedElementRule()); }
	iv_ruleKeyedElement=ruleKeyedElement
	{ $current=$iv_ruleKeyedElement.current; }
	EOF;

// Rule KeyedElement
ruleKeyedElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getKeyedElementAccess().getKeyKeyParserRuleCall_0_0_0());
					}
					lv_key_0_0=ruleKey
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKeyedElementRule());
						}
						set(
							$current,
							"key",
							lv_key_0_0,
							"org.xtext.example.mydsl.MyDsl.Key");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getKeyedElementAccess().getColonKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyedElementAccess().getElementElementParserRuleCall_1_0());
				}
				lv_element_2_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyedElementRule());
					}
					set(
						$current,
						"element",
						lv_element_2_0,
						"org.xtext.example.mydsl.MyDsl.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleKey
entryRuleKey returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyRule()); }
	iv_ruleKey=ruleKey
	{ $current=$iv_ruleKey.current; }
	EOF;

// Rule Key
ruleKey returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyAccess().getFieldNameFieldNameParserRuleCall_0_0());
				}
				lv_fieldName_0_0=ruleFieldName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyRule());
					}
					set(
						$current,
						"fieldName",
						lv_fieldName_0_0,
						"org.xtext.example.mydsl.MyDsl.FieldName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyAccess().getExpressionExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyAccess().getLiteralValueLiteralValueParserRuleCall_2_0());
				}
				lv_literalValue_2_0=ruleLiteralValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyRule());
					}
					set(
						$current,
						"literalValue",
						lv_literalValue_2_0,
						"org.xtext.example.mydsl.MyDsl.LiteralValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFieldName
entryRuleFieldName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldNameRule()); }
	iv_ruleFieldName=ruleFieldName
	{ $current=$iv_ruleFieldName.current; }
	EOF;

// Rule FieldName
ruleFieldName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_id_0_0=RULE_IDENTIFIER
			{
				newLeafNode(lv_id_0_0, grammarAccess.getFieldNameAccess().getIdIDENTIFIERTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFieldNameRule());
				}
				setWithLastConsumed(
					$current,
					"id",
					lv_id_0_0,
					"org.xtext.example.mydsl.MyDsl.IDENTIFIER");
			}
		)
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getElementAccess().getExpressionExpressionParserRuleCall_0_0());
				}
				lv_expression_0_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementRule());
					}
					set(
						$current,
						"expression",
						lv_expression_0_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getElementAccess().getLiteralValueLiteralValueParserRuleCall_1_0());
				}
				lv_literalValue_1_0=ruleLiteralValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementRule());
					}
					set(
						$current,
						"literalValue",
						lv_literalValue_1_0,
						"org.xtext.example.mydsl.MyDsl.LiteralValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFunctionLit
entryRuleFunctionLit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionLitRule()); }
	iv_ruleFunctionLit=ruleFunctionLit
	{ $current=$iv_ruleFunctionLit.current; }
	EOF;

// Rule FunctionLit
ruleFunctionLit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_func_0_0='func'
				{
					newLeafNode(lv_func_0_0, grammarAccess.getFunctionLitAccess().getFuncFuncKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionLitRule());
					}
					setWithLastConsumed($current, "func", lv_func_0_0, "func");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionLitAccess().getSignatureSignatureParserRuleCall_1_0());
				}
				lv_signature_1_0=ruleSignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionLitRule());
					}
					set(
						$current,
						"signature",
						lv_signature_1_0,
						"org.xtext.example.mydsl.MyDsl.Signature");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionLitAccess().getFunctionBodyFunctionBodyParserRuleCall_2_0());
				}
				lv_functionBody_2_0=ruleFunctionBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionLitRule());
					}
					set(
						$current,
						"functionBody",
						lv_functionBody_2_0,
						"org.xtext.example.mydsl.MyDsl.FunctionBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePrimaryExpr
entryRulePrimaryExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExprRule()); }
	iv_rulePrimaryExpr=rulePrimaryExpr
	{ $current=$iv_rulePrimaryExpr.current; }
	EOF;

// Rule PrimaryExpr
rulePrimaryExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprAccess().getOperandOperandParserRuleCall_0_0_0());
					}
					lv_operand_0_0=ruleOperand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
						}
						set(
							$current,
							"operand",
							lv_operand_0_0,
							"org.xtext.example.mydsl.MyDsl.Operand");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_0_1_0());
					}
					lv_primaryExprLinha_1_0=rulePrimaryExprLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
						}
						set(
							$current,
							"primaryExprLinha",
							lv_primaryExprLinha_1_0,
							"org.xtext.example.mydsl.MyDsl.PrimaryExprLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprAccess().getConversionConversionParserRuleCall_1_0_0());
					}
					lv_conversion_2_0=ruleConversion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
						}
						set(
							$current,
							"conversion",
							lv_conversion_2_0,
							"org.xtext.example.mydsl.MyDsl.Conversion");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_1_0());
					}
					lv_primaryExprLinha_3_0=rulePrimaryExprLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
						}
						set(
							$current,
							"primaryExprLinha",
							lv_primaryExprLinha_3_0,
							"org.xtext.example.mydsl.MyDsl.PrimaryExprLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprAccess().getMethodExprMethodExprParserRuleCall_2_0_0());
					}
					lv_methodExpr_4_0=ruleMethodExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
						}
						set(
							$current,
							"methodExpr",
							lv_methodExpr_4_0,
							"org.xtext.example.mydsl.MyDsl.MethodExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_2_1_0());
					}
					lv_primaryExprLinha_5_0=rulePrimaryExprLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
						}
						set(
							$current,
							"primaryExprLinha",
							lv_primaryExprLinha_5_0,
							"org.xtext.example.mydsl.MyDsl.PrimaryExprLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRulePrimaryExprLinha
entryRulePrimaryExprLinha returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExprLinhaRule()); }
	iv_rulePrimaryExprLinha=rulePrimaryExprLinha
	{ $current=$iv_rulePrimaryExprLinha.current; }
	EOF;

// Rule PrimaryExprLinha
rulePrimaryExprLinha returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaAction_0(),
					$current);
			}
		)
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getSelectorSelectorParserRuleCall_1_0_0_0());
						}
						lv_selector_1_0=ruleSelector
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryExprLinhaRule());
							}
							set(
								$current,
								"selector",
								lv_selector_1_0,
								"org.xtext.example.mydsl.MyDsl.Selector");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_0_1_0());
						}
						lv_primaryExprLinha_2_0=rulePrimaryExprLinha
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryExprLinhaRule());
							}
							set(
								$current,
								"primaryExprLinha",
								lv_primaryExprLinha_2_0,
								"org.xtext.example.mydsl.MyDsl.PrimaryExprLinha");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getIndexIndexParserRuleCall_1_1_0_0());
						}
						lv_index_3_0=ruleIndex
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryExprLinhaRule());
							}
							set(
								$current,
								"index",
								lv_index_3_0,
								"org.xtext.example.mydsl.MyDsl.Index");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_1_1_0());
						}
						lv_primaryExprLinha_4_0=rulePrimaryExprLinha
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryExprLinhaRule());
							}
							set(
								$current,
								"primaryExprLinha",
								lv_primaryExprLinha_4_0,
								"org.xtext.example.mydsl.MyDsl.PrimaryExprLinha");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getSliceSliceParserRuleCall_1_2_0_0());
						}
						lv_slice_5_0=ruleSlice
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryExprLinhaRule());
							}
							set(
								$current,
								"slice",
								lv_slice_5_0,
								"org.xtext.example.mydsl.MyDsl.Slice");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_2_1_0());
						}
						lv_primaryExprLinha_6_0=rulePrimaryExprLinha
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryExprLinhaRule());
							}
							set(
								$current,
								"primaryExprLinha",
								lv_primaryExprLinha_6_0,
								"org.xtext.example.mydsl.MyDsl.PrimaryExprLinha");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getTypeAssertionTypeAssertionParserRuleCall_1_3_0_0());
						}
						lv_typeAssertion_7_0=ruleTypeAssertion
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryExprLinhaRule());
							}
							set(
								$current,
								"typeAssertion",
								lv_typeAssertion_7_0,
								"org.xtext.example.mydsl.MyDsl.TypeAssertion");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_3_1_0());
						}
						lv_primaryExprLinha_8_0=rulePrimaryExprLinha
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryExprLinhaRule());
							}
							set(
								$current,
								"primaryExprLinha",
								lv_primaryExprLinha_8_0,
								"org.xtext.example.mydsl.MyDsl.PrimaryExprLinha");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getArgumentsArgumentsParserRuleCall_1_4_0_0());
						}
						lv_arguments_9_0=ruleArguments
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryExprLinhaRule());
							}
							set(
								$current,
								"arguments",
								lv_arguments_9_0,
								"org.xtext.example.mydsl.MyDsl.Arguments");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_4_1_0());
						}
						lv_primaryExprLinha_10_0=rulePrimaryExprLinha
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryExprLinhaRule());
							}
							set(
								$current,
								"primaryExprLinha",
								lv_primaryExprLinha_10_0,
								"org.xtext.example.mydsl.MyDsl.PrimaryExprLinha");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleSelector
entryRuleSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectorRule()); }
	iv_ruleSelector=ruleSelector
	{ $current=$iv_ruleSelector.current; }
	EOF;

// Rule Selector
ruleSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='.'
		{
			newLeafNode(otherlv_0, grammarAccess.getSelectorAccess().getFullStopKeyword_0());
		}
		(
			(
				lv_id_1_0=RULE_IDENTIFIER
				{
					newLeafNode(lv_id_1_0, grammarAccess.getSelectorAccess().getIdIDENTIFIERTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSelectorRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_1_0,
						"org.xtext.example.mydsl.MyDsl.IDENTIFIER");
				}
			)
		)
	)
;

// Entry rule entryRuleIndex
entryRuleIndex returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndexRule()); }
	iv_ruleIndex=ruleIndex
	{ $current=$iv_ruleIndex.current; }
	EOF;

// Rule Index
ruleIndex returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIndexAccess().getExpressionExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIndexRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleSlice
entryRuleSlice returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSliceRule()); }
	iv_ruleSlice=ruleSlice
	{ $current=$iv_ruleSlice.current; }
	EOF;

// Rule Slice
ruleSlice returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSliceAccess().getSliceAction_0(),
					$current);
			}
		)
		(
			(
				otherlv_1='['
				{
					newLeafNode(otherlv_1, grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_1_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_0_1_0());
						}
						lv_expression_2_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSliceRule());
							}
							set(
								$current,
								"expression",
								lv_expression_2_0,
								"org.xtext.example.mydsl.MyDsl.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				otherlv_3=':'
				{
					newLeafNode(otherlv_3, grammarAccess.getSliceAccess().getColonKeyword_1_0_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSliceAccess().getExpression1ExpressionParserRuleCall_1_0_3_0());
						}
						lv_expression1_4_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSliceRule());
							}
							set(
								$current,
								"expression1",
								lv_expression1_4_0,
								"org.xtext.example.mydsl.MyDsl.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				otherlv_5=']'
				{
					newLeafNode(otherlv_5, grammarAccess.getSliceAccess().getRightSquareBracketKeyword_1_0_4());
				}
			)
			    |
			(
				otherlv_6='['
				{
					newLeafNode(otherlv_6, grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_1_1_0());
						}
						lv_expression_7_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSliceRule());
							}
							set(
								$current,
								"expression",
								lv_expression_7_0,
								"org.xtext.example.mydsl.MyDsl.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				otherlv_8=':'
				{
					newLeafNode(otherlv_8, grammarAccess.getSliceAccess().getColonKeyword_1_1_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSliceAccess().getExpression1ExpressionParserRuleCall_1_1_3_0());
						}
						lv_expression1_9_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSliceRule());
							}
							set(
								$current,
								"expression1",
								lv_expression1_9_0,
								"org.xtext.example.mydsl.MyDsl.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_10=':'
				{
					newLeafNode(otherlv_10, grammarAccess.getSliceAccess().getColonKeyword_1_1_4());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSliceAccess().getExpression2ExpressionParserRuleCall_1_1_5_0());
						}
						lv_expression2_11_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSliceRule());
							}
							set(
								$current,
								"expression2",
								lv_expression2_11_0,
								"org.xtext.example.mydsl.MyDsl.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_12=']'
				{
					newLeafNode(otherlv_12, grammarAccess.getSliceAccess().getRightSquareBracketKeyword_1_1_6());
				}
			)
		)
	)
;

// Entry rule entryRuleTypeAssertion
entryRuleTypeAssertion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeAssertionRule()); }
	iv_ruleTypeAssertion=ruleTypeAssertion
	{ $current=$iv_ruleTypeAssertion.current; }
	EOF;

// Rule TypeAssertion
ruleTypeAssertion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='.'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeAssertionAccess().getTypeTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeAssertionRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.mydsl.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getTypeAssertionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleArguments
entryRuleArguments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentsRule()); }
	iv_ruleArguments=ruleArguments
	{ $current=$iv_ruleArguments.current; }
	EOF;

// Rule Arguments
ruleArguments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getArgumentsAccess().getArgumentsAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_2_0_0_0());
						}
						lv_expressionList_2_0=ruleExpressionList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArgumentsRule());
							}
							set(
								$current,
								"expressionList",
								lv_expressionList_2_0,
								"org.xtext.example.mydsl.MyDsl.ExpressionList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_2_0_1_0_0());
							}
							lv_type_3_0=ruleType
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getArgumentsRule());
								}
								set(
									$current,
									"type",
									lv_type_3_0,
									"org.xtext.example.mydsl.MyDsl.Type");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_4=','
						{
							newLeafNode(otherlv_4, grammarAccess.getArgumentsAccess().getCommaKeyword_2_0_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_2_0_1_1_1_0());
								}
								lv_expressionList_5_0=ruleExpressionList
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getArgumentsRule());
									}
									set(
										$current,
										"expressionList",
										lv_expressionList_5_0,
										"org.xtext.example.mydsl.MyDsl.ExpressionList");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)?
				)
			)
			(
				otherlv_6='...'
				{
					newLeafNode(otherlv_6, grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_2_1());
				}
			)?
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getArgumentsAccess().getCommaKeyword_2_2());
				}
			)?
		)?
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleMethodExpr
entryRuleMethodExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodExprRule()); }
	iv_ruleMethodExpr=ruleMethodExpr
	{ $current=$iv_ruleMethodExpr.current; }
	EOF;

// Rule MethodExpr
ruleMethodExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodExprAccess().getReceiverTypeReceiverTypeParserRuleCall_0_0());
				}
				lv_receiverType_0_0=ruleReceiverType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodExprRule());
					}
					set(
						$current,
						"receiverType",
						lv_receiverType_0_0,
						"org.xtext.example.mydsl.MyDsl.ReceiverType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getMethodExprAccess().getFullStopKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodExprAccess().getMethodNameMethodNameParserRuleCall_2_0());
				}
				lv_methodName_2_0=ruleMethodName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodExprRule());
					}
					set(
						$current,
						"methodName",
						lv_methodName_2_0,
						"org.xtext.example.mydsl.MyDsl.MethodName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReceiverType
entryRuleReceiverType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReceiverTypeRule()); }
	iv_ruleReceiverType=ruleReceiverType
	{ $current=$iv_ruleReceiverType.current; }
	EOF;

// Rule ReceiverType
ruleReceiverType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getReceiverTypeAccess().getTypeTypeParserRuleCall_0());
			}
			lv_type_0_0=ruleType
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getReceiverTypeRule());
				}
				set(
					$current,
					"type",
					lv_type_0_0,
					"org.xtext.example.mydsl.MyDsl.Type");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionAccess().getUnaryExprUnaryExprParserRuleCall_0_0());
				}
				lv_unaryExpr_0_0=ruleUnaryExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionRule());
					}
					set(
						$current,
						"unaryExpr",
						lv_unaryExpr_0_0,
						"org.xtext.example.mydsl.MyDsl.UnaryExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionAccess().getExpression_LinhaExpression_LinhaParserRuleCall_1_0());
				}
				lv_expression_Linha_1_0=ruleExpression_Linha
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionRule());
					}
					set(
						$current,
						"expression_Linha",
						lv_expression_Linha_1_0,
						"org.xtext.example.mydsl.MyDsl.Expression_Linha");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpression1
entryRuleExpression1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression1Rule()); }
	iv_ruleExpression1=ruleExpression1
	{ $current=$iv_ruleExpression1.current; }
	EOF;

// Rule Expression1
ruleExpression1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExpression1Access().getUnaryExprUnaryExprParserRuleCall_0_0());
				}
				lv_unaryExpr_0_0=ruleUnaryExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpression1Rule());
					}
					set(
						$current,
						"unaryExpr",
						lv_unaryExpr_0_0,
						"org.xtext.example.mydsl.MyDsl.UnaryExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExpression1Access().getExpression_LinhaExpression_LinhaParserRuleCall_1_0());
				}
				lv_expression_Linha_1_0=ruleExpression_Linha
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpression1Rule());
					}
					set(
						$current,
						"expression_Linha",
						lv_expression_Linha_1_0,
						"org.xtext.example.mydsl.MyDsl.Expression_Linha");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpression_Linha
entryRuleExpression_Linha returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_LinhaRule()); }
	iv_ruleExpression_Linha=ruleExpression_Linha
	{ $current=$iv_ruleExpression_Linha.current; }
	EOF;

// Rule Expression_Linha
ruleExpression_Linha returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpression_LinhaAccess().getExpression_LinhaAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression_LinhaAccess().getBINARY_OPBINARY_OPParserRuleCall_1_0_0());
					}
					lv_BINARY_OP_1_0=ruleBINARY_OP
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression_LinhaRule());
						}
						set(
							$current,
							"BINARY_OP",
							lv_BINARY_OP_1_0,
							"org.xtext.example.mydsl.MyDsl.BINARY_OP");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression_LinhaAccess().getExpression1Expression1ParserRuleCall_1_1_0());
					}
					lv_expression1_2_0=ruleExpression1
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression_LinhaRule());
						}
						set(
							$current,
							"expression1",
							lv_expression1_2_0,
							"org.xtext.example.mydsl.MyDsl.Expression1");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression_LinhaAccess().getExpression_LinhaExpression_LinhaParserRuleCall_1_2_0());
					}
					lv_expression_Linha_3_0=ruleExpression_Linha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression_LinhaRule());
						}
						set(
							$current,
							"expression_Linha",
							lv_expression_Linha_3_0,
							"org.xtext.example.mydsl.MyDsl.Expression_Linha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryExprRule()); }
	iv_ruleUnaryExpr=ruleUnaryExpr
	{ $current=$iv_ruleUnaryExpr.current; }
	EOF;

// Rule UnaryExpr
ruleUnaryExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getUnaryExprAccess().getPrimaryExprPrimaryExprParserRuleCall_0());
			}
			lv_primaryExpr_0_0=rulePrimaryExpr
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getUnaryExprRule());
				}
				set(
					$current,
					"primaryExpr",
					lv_primaryExpr_0_0,
					"org.xtext.example.mydsl.MyDsl.PrimaryExpr");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleBINARY_OP
entryRuleBINARY_OP returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBINARY_OPRule()); }
	iv_ruleBINARY_OP=ruleBINARY_OP
	{ $current=$iv_ruleBINARY_OP.current; }
	EOF;

// Rule BINARY_OP
ruleBINARY_OP returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_or_0_0='||'
				{
					newLeafNode(lv_or_0_0, grammarAccess.getBINARY_OPAccess().getOrVerticalLineVerticalLineKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBINARY_OPRule());
					}
					setWithLastConsumed($current, "or", lv_or_0_0, "||");
				}
			)
		)
		    |
		(
			(
				lv_and_1_0='&&'
				{
					newLeafNode(lv_and_1_0, grammarAccess.getBINARY_OPAccess().getAndAmpersandAmpersandKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBINARY_OPRule());
					}
					setWithLastConsumed($current, "and", lv_and_1_0, "&&");
				}
			)
		)
		    |
		(
			(
				lv_rEL_OP_2_0=RULE_REL_OP
				{
					newLeafNode(lv_rEL_OP_2_0, grammarAccess.getBINARY_OPAccess().getREL_OPREL_OPTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBINARY_OPRule());
					}
					setWithLastConsumed(
						$current,
						"rEL_OP",
						lv_rEL_OP_2_0,
						"org.xtext.example.mydsl.MyDsl.REL_OP");
				}
			)
		)
		    |
		(
			(
				lv_aDD_OP_3_0=RULE_ADD_OP
				{
					newLeafNode(lv_aDD_OP_3_0, grammarAccess.getBINARY_OPAccess().getADD_OPADD_OPTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBINARY_OPRule());
					}
					setWithLastConsumed(
						$current,
						"aDD_OP",
						lv_aDD_OP_3_0,
						"org.xtext.example.mydsl.MyDsl.ADD_OP");
				}
			)
		)
		    |
		(
			(
				lv_mUL_OP_4_0=RULE_MUL_OP
				{
					newLeafNode(lv_mUL_OP_4_0, grammarAccess.getBINARY_OPAccess().getMUL_OPMUL_OPTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBINARY_OPRule());
					}
					setWithLastConsumed(
						$current,
						"mUL_OP",
						lv_mUL_OP_4_0,
						"org.xtext.example.mydsl.MyDsl.MUL_OP");
				}
			)
		)
	)
;

// Entry rule entryRuleConversion
entryRuleConversion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConversionRule()); }
	iv_ruleConversion=ruleConversion
	{ $current=$iv_ruleConversion.current; }
	EOF;

// Rule Conversion
ruleConversion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConversionAccess().getTypeTypeParserRuleCall_0_0());
				}
				lv_type_0_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConversionRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"org.xtext.example.mydsl.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getConversionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConversionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getConversionAccess().getCommaKeyword_3());
			}
		)?
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getConversionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getDeclarationDeclarationParserRuleCall_0_0());
				}
				lv_declaration_0_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"declaration",
						lv_declaration_0_0,
						"org.xtext.example.mydsl.MyDsl.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getLabeledStmtLabeledStmtParserRuleCall_1_0());
				}
				lv_labeledStmt_1_0=ruleLabeledStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"labeledStmt",
						lv_labeledStmt_1_0,
						"org.xtext.example.mydsl.MyDsl.LabeledStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getSimpleStmtSimpleStmtParserRuleCall_2_0());
				}
				lv_simpleStmt_2_0=ruleSimpleStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"simpleStmt",
						lv_simpleStmt_2_0,
						"org.xtext.example.mydsl.MyDsl.SimpleStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getGoStmtGoStmtParserRuleCall_3_0());
				}
				lv_goStmt_3_0=ruleGoStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"goStmt",
						lv_goStmt_3_0,
						"org.xtext.example.mydsl.MyDsl.GoStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getReturnStmtReturnStmtParserRuleCall_4_0());
				}
				lv_returnStmt_4_0=ruleReturnStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"returnStmt",
						lv_returnStmt_4_0,
						"org.xtext.example.mydsl.MyDsl.ReturnStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getBreakStmtBreakStmtParserRuleCall_5_0());
				}
				lv_breakStmt_5_0=ruleBreakStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"breakStmt",
						lv_breakStmt_5_0,
						"org.xtext.example.mydsl.MyDsl.BreakStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getContinueStmtContinueStmtParserRuleCall_6_0());
				}
				lv_continueStmt_6_0=ruleContinueStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"continueStmt",
						lv_continueStmt_6_0,
						"org.xtext.example.mydsl.MyDsl.ContinueStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getGotoStmtGotoStmtParserRuleCall_7_0());
				}
				lv_gotoStmt_7_0=ruleGotoStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"gotoStmt",
						lv_gotoStmt_7_0,
						"org.xtext.example.mydsl.MyDsl.GotoStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getFallthroughStmtFallthroughStmtParserRuleCall_8_0());
				}
				lv_fallthroughStmt_8_0=ruleFallthroughStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"fallthroughStmt",
						lv_fallthroughStmt_8_0,
						"org.xtext.example.mydsl.MyDsl.FallthroughStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getBlockBlockParserRuleCall_9_0());
				}
				lv_block_9_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"block",
						lv_block_9_0,
						"org.xtext.example.mydsl.MyDsl.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getIfStmtIfStmtParserRuleCall_10_0());
				}
				lv_ifStmt_10_0=ruleIfStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"ifStmt",
						lv_ifStmt_10_0,
						"org.xtext.example.mydsl.MyDsl.IfStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getSwitchStmtSwitchStmtParserRuleCall_11_0());
				}
				lv_switchStmt_11_0=ruleSwitchStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"switchStmt",
						lv_switchStmt_11_0,
						"org.xtext.example.mydsl.MyDsl.SwitchStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getSelectStmtSelectStmtParserRuleCall_12_0());
				}
				lv_selectStmt_12_0=ruleSelectStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"selectStmt",
						lv_selectStmt_12_0,
						"org.xtext.example.mydsl.MyDsl.SelectStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getForStmtForStmtParserRuleCall_13_0());
				}
				lv_forStmt_13_0=ruleForStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"forStmt",
						lv_forStmt_13_0,
						"org.xtext.example.mydsl.MyDsl.ForStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getDeferStmtDeferStmtParserRuleCall_14_0());
				}
				lv_deferStmt_14_0=ruleDeferStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"deferStmt",
						lv_deferStmt_14_0,
						"org.xtext.example.mydsl.MyDsl.DeferStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSimpleStmt
entryRuleSimpleStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleStmtRule()); }
	iv_ruleSimpleStmt=ruleSimpleStmt
	{ $current=$iv_ruleSimpleStmt.current; }
	EOF;

// Rule SimpleStmt
ruleSimpleStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleStmtAccess().getEmptyStmtEmptyStmtParserRuleCall_0_0());
				}
				lv_emptyStmt_0_0=ruleEmptyStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
					}
					set(
						$current,
						"emptyStmt",
						lv_emptyStmt_0_0,
						"org.xtext.example.mydsl.MyDsl.EmptyStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSimpleStmtAccess().getExpressionExpressionParserRuleCall_1_0_0());
					}
					lv_expression_1_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
						}
						set(
							$current,
							"expression",
							lv_expression_1_0,
							"org.xtext.example.mydsl.MyDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSimpleStmtAccess().getSimpleStmtLinhaSimpleStmtLinhaParserRuleCall_1_1_0());
					}
					lv_simpleStmtLinha_2_0=ruleSimpleStmtLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
						}
						set(
							$current,
							"simpleStmtLinha",
							lv_simpleStmtLinha_2_0,
							"org.xtext.example.mydsl.MyDsl.SimpleStmtLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleStmtAccess().getShortVarDeclShortVarDeclParserRuleCall_2_0());
				}
				lv_shortVarDecl_3_0=ruleShortVarDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
					}
					set(
						$current,
						"shortVarDecl",
						lv_shortVarDecl_3_0,
						"org.xtext.example.mydsl.MyDsl.ShortVarDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSimpleStmtLinha
entryRuleSimpleStmtLinha returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleStmtLinhaRule()); }
	iv_ruleSimpleStmtLinha=ruleSimpleStmtLinha
	{ $current=$iv_ruleSimpleStmtLinha.current; }
	EOF;

// Rule SimpleStmtLinha
ruleSimpleStmtLinha returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='<-'
			{
				newLeafNode(otherlv_0, grammarAccess.getSimpleStmtLinhaAccess().getLessThanSignHyphenMinusKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSimpleStmtLinhaAccess().getExpressionExpressionParserRuleCall_0_1_0());
					}
					lv_expression_1_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimpleStmtLinhaRule());
						}
						set(
							$current,
							"expression",
							lv_expression_1_0,
							"org.xtext.example.mydsl.MyDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_2='++'
			{
				newLeafNode(otherlv_2, grammarAccess.getSimpleStmtLinhaAccess().getPlusSignPlusSignKeyword_1_0());
			}
			    |
			otherlv_3='--'
			{
				newLeafNode(otherlv_3, grammarAccess.getSimpleStmtLinhaAccess().getHyphenMinusHyphenMinusKeyword_1_1());
			}
		)
		    |
		(
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getSimpleStmtLinhaAccess().getCommaKeyword_2_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimpleStmtLinhaAccess().getExpression1ExpressionParserRuleCall_2_0_1_0());
						}
						lv_expression1_5_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimpleStmtLinhaRule());
							}
							add(
								$current,
								"expression1",
								lv_expression1_5_0,
								"org.xtext.example.mydsl.MyDsl.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getSimpleStmtLinhaAccess().getAssign_opAssign_opParserRuleCall_2_1_0());
					}
					lv_assign_op_6_0=ruleassign_op
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimpleStmtLinhaRule());
						}
						set(
							$current,
							"assign_op",
							lv_assign_op_6_0,
							"org.xtext.example.mydsl.MyDsl.assign_op");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSimpleStmtLinhaAccess().getExpressionListExpressionListParserRuleCall_2_2_0());
					}
					lv_expressionList_7_0=ruleExpressionList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimpleStmtLinhaRule());
						}
						set(
							$current,
							"expressionList",
							lv_expressionList_7_0,
							"org.xtext.example.mydsl.MyDsl.ExpressionList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				lv_aNY_OTHER_8_0=RULE_ANY_OTHER
				{
					newLeafNode(lv_aNY_OTHER_8_0, grammarAccess.getSimpleStmtLinhaAccess().getANY_OTHERANY_OTHERTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimpleStmtLinhaRule());
					}
					setWithLastConsumed(
						$current,
						"aNY_OTHER",
						lv_aNY_OTHER_8_0,
						"org.xtext.example.mydsl.MyDsl.ANY_OTHER");
				}
			)
		)
	)
;

// Entry rule entryRuleEmptyStmt
entryRuleEmptyStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmptyStmtRule()); }
	iv_ruleEmptyStmt=ruleEmptyStmt
	{ $current=$iv_ruleEmptyStmt.current; }
	EOF;

// Rule EmptyStmt
ruleEmptyStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_aNY_OTHER_0_0=RULE_ANY_OTHER
			{
				newLeafNode(lv_aNY_OTHER_0_0, grammarAccess.getEmptyStmtAccess().getANY_OTHERANY_OTHERTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEmptyStmtRule());
				}
				setWithLastConsumed(
					$current,
					"aNY_OTHER",
					lv_aNY_OTHER_0_0,
					"org.xtext.example.mydsl.MyDsl.ANY_OTHER");
			}
		)
	)
;

// Entry rule entryRuleLabeledStmt
entryRuleLabeledStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLabeledStmtRule()); }
	iv_ruleLabeledStmt=ruleLabeledStmt
	{ $current=$iv_ruleLabeledStmt.current; }
	EOF;

// Rule LabeledStmt
ruleLabeledStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLabeledStmtAccess().getLabelLabelParserRuleCall_0_0());
				}
				lv_label_0_0=ruleLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLabeledStmtRule());
					}
					set(
						$current,
						"label",
						lv_label_0_0,
						"org.xtext.example.mydsl.MyDsl.Label");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getLabeledStmtAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLabeledStmtAccess().getStatementStatementParserRuleCall_2_0());
				}
				lv_statement_2_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLabeledStmtRule());
					}
					set(
						$current,
						"statement",
						lv_statement_2_0,
						"org.xtext.example.mydsl.MyDsl.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLabel
entryRuleLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLabelRule()); }
	iv_ruleLabel=ruleLabel
	{ $current=$iv_ruleLabel.current; }
	EOF;

// Rule Label
ruleLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_id_0_0=RULE_IDENTIFIER
			{
				newLeafNode(lv_id_0_0, grammarAccess.getLabelAccess().getIdIDENTIFIERTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getLabelRule());
				}
				setWithLastConsumed(
					$current,
					"id",
					lv_id_0_0,
					"org.xtext.example.mydsl.MyDsl.IDENTIFIER");
			}
		)
	)
;

// Entry rule entryRuleassign_op
entryRuleassign_op returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssign_opRule()); }
	iv_ruleassign_op=ruleassign_op
	{ $current=$iv_ruleassign_op.current; }
	EOF;

// Rule assign_op
ruleassign_op returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_aDD_OP_0_0=RULE_ADD_OP
					{
						newLeafNode(lv_aDD_OP_0_0, grammarAccess.getAssign_opAccess().getADD_OPADD_OPTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAssign_opRule());
						}
						setWithLastConsumed(
							$current,
							"aDD_OP",
							lv_aDD_OP_0_0,
							"org.xtext.example.mydsl.MyDsl.ADD_OP");
					}
				)
			)
			    |
			(
				(
					lv_mUL_OP_1_0=RULE_MUL_OP
					{
						newLeafNode(lv_mUL_OP_1_0, grammarAccess.getAssign_opAccess().getMUL_OPMUL_OPTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAssign_opRule());
						}
						setWithLastConsumed(
							$current,
							"mUL_OP",
							lv_mUL_OP_1_0,
							"org.xtext.example.mydsl.MyDsl.MUL_OP");
					}
				)
			)
		)?
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getAssign_opAccess().getEqualsSignKeyword_1());
		}
	)
;

// Entry rule entryRuleIfStmt
entryRuleIfStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStmtRule()); }
	iv_ruleIfStmt=ruleIfStmt
	{ $current=$iv_ruleIfStmt.current; }
	EOF;

// Rule IfStmt
ruleIfStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_if_0_0=RULE_IF
					{
						newLeafNode(lv_if_0_0, grammarAccess.getIfStmtAccess().getIfIFTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIfStmtRule());
						}
						setWithLastConsumed(
							$current,
							"if",
							lv_if_0_0,
							"org.xtext.example.mydsl.MyDsl.IF");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStmtAccess().getExpressionExpressionParserRuleCall_0_1_0());
					}
					lv_expression_1_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStmtRule());
						}
						set(
							$current,
							"expression",
							lv_expression_1_0,
							"org.xtext.example.mydsl.MyDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStmtAccess().getIfStmtLinhaIfStmtLinhaParserRuleCall_0_2_0());
					}
					lv_ifStmtLinha_2_0=ruleIfStmtLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStmtRule());
						}
						set(
							$current,
							"ifStmtLinha",
							lv_ifStmtLinha_2_0,
							"org.xtext.example.mydsl.MyDsl.IfStmtLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_if_3_0=RULE_IF
					{
						newLeafNode(lv_if_3_0, grammarAccess.getIfStmtAccess().getIfIFTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIfStmtRule());
						}
						setWithLastConsumed(
							$current,
							"if",
							lv_if_3_0,
							"org.xtext.example.mydsl.MyDsl.IF");
					}
				)
			)
			(
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getIfStmtAccess().getEmptyStmtEmptyStmtParserRuleCall_1_1_0_0_0());
							}
							lv_emptyStmt_4_0=ruleEmptyStmt
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getIfStmtRule());
								}
								set(
									$current,
									"emptyStmt",
									lv_emptyStmt_4_0,
									"org.xtext.example.mydsl.MyDsl.EmptyStmt");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getIfStmtAccess().getShortVarDeclShortVarDeclParserRuleCall_1_1_0_1_0());
							}
							lv_shortVarDecl_5_0=ruleShortVarDecl
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getIfStmtRule());
								}
								set(
									$current,
									"shortVarDecl",
									lv_shortVarDecl_5_0,
									"org.xtext.example.mydsl.MyDsl.ShortVarDecl");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				otherlv_6=';'
				{
					newLeafNode(otherlv_6, grammarAccess.getIfStmtAccess().getSemicolonKeyword_1_1_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStmtAccess().getExpressionExpressionParserRuleCall_1_2_0());
					}
					lv_expression_7_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStmtRule());
						}
						set(
							$current,
							"expression",
							lv_expression_7_0,
							"org.xtext.example.mydsl.MyDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_1_3_0());
					}
					lv_block_8_0=ruleBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStmtRule());
						}
						set(
							$current,
							"block",
							lv_block_8_0,
							"org.xtext.example.mydsl.MyDsl.Block");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						lv_else_9_0=RULE_ELSE
						{
							newLeafNode(lv_else_9_0, grammarAccess.getIfStmtAccess().getElseELSETerminalRuleCall_1_4_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getIfStmtRule());
							}
							setWithLastConsumed(
								$current,
								"else",
								lv_else_9_0,
								"org.xtext.example.mydsl.MyDsl.ELSE");
						}
					)
				)
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getIfStmtAccess().getIfStmtIfStmtParserRuleCall_1_4_1_0_0());
							}
							lv_ifStmt_10_0=ruleIfStmt
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getIfStmtRule());
								}
								set(
									$current,
									"ifStmt",
									lv_ifStmt_10_0,
									"org.xtext.example.mydsl.MyDsl.IfStmt");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getIfStmtAccess().getBlock1BlockParserRuleCall_1_4_1_1_0());
							}
							lv_block1_11_0=ruleBlock
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getIfStmtRule());
								}
								set(
									$current,
									"block1",
									lv_block1_11_0,
									"org.xtext.example.mydsl.MyDsl.Block");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)?
		)
	)
;

// Entry rule entryRuleIfStmtLinha
entryRuleIfStmtLinha returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStmtLinhaRule()); }
	iv_ruleIfStmtLinha=ruleIfStmtLinha
	{ $current=$iv_ruleIfStmtLinha.current; }
	EOF;

// Rule IfStmtLinha
ruleIfStmtLinha returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStmtLinhaAccess().getSimpleStmtLinhaSimpleStmtLinhaParserRuleCall_0_0_0());
					}
					lv_simpleStmtLinha_0_0=ruleSimpleStmtLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStmtLinhaRule());
						}
						set(
							$current,
							"simpleStmtLinha",
							lv_simpleStmtLinha_0_0,
							"org.xtext.example.mydsl.MyDsl.SimpleStmtLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getIfStmtLinhaAccess().getSemicolonKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStmtLinhaAccess().getExpressionExpressionParserRuleCall_0_2_0());
					}
					lv_expression_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStmtLinhaRule());
						}
						set(
							$current,
							"expression",
							lv_expression_2_0,
							"org.xtext.example.mydsl.MyDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStmtLinhaAccess().getBlockBlockParserRuleCall_0_3_0());
					}
					lv_block_3_0=ruleBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStmtLinhaRule());
						}
						set(
							$current,
							"block",
							lv_block_3_0,
							"org.xtext.example.mydsl.MyDsl.Block");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						lv_else_4_0=RULE_ELSE
						{
							newLeafNode(lv_else_4_0, grammarAccess.getIfStmtLinhaAccess().getElseELSETerminalRuleCall_0_4_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getIfStmtLinhaRule());
							}
							setWithLastConsumed(
								$current,
								"else",
								lv_else_4_0,
								"org.xtext.example.mydsl.MyDsl.ELSE");
						}
					)
				)
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getIfStmtLinhaAccess().getIfStmtIfStmtParserRuleCall_0_4_1_0_0());
							}
							lv_ifStmt_5_0=ruleIfStmt
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getIfStmtLinhaRule());
								}
								set(
									$current,
									"ifStmt",
									lv_ifStmt_5_0,
									"org.xtext.example.mydsl.MyDsl.IfStmt");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getIfStmtLinhaAccess().getBlock1BlockParserRuleCall_0_4_1_1_0());
							}
							lv_block1_6_0=ruleBlock
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getIfStmtLinhaRule());
								}
								set(
									$current,
									"block1",
									lv_block1_6_0,
									"org.xtext.example.mydsl.MyDsl.Block");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)?
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStmtLinhaAccess().getBlockBlockParserRuleCall_1_0_0());
					}
					lv_block_7_0=ruleBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStmtLinhaRule());
						}
						set(
							$current,
							"block",
							lv_block_7_0,
							"org.xtext.example.mydsl.MyDsl.Block");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						lv_else_8_0=RULE_ELSE
						{
							newLeafNode(lv_else_8_0, grammarAccess.getIfStmtLinhaAccess().getElseELSETerminalRuleCall_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getIfStmtLinhaRule());
							}
							setWithLastConsumed(
								$current,
								"else",
								lv_else_8_0,
								"org.xtext.example.mydsl.MyDsl.ELSE");
						}
					)
				)
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getIfStmtLinhaAccess().getIfStmtIfStmtParserRuleCall_1_1_1_0_0());
							}
							lv_ifStmt_9_0=ruleIfStmt
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getIfStmtLinhaRule());
								}
								set(
									$current,
									"ifStmt",
									lv_ifStmt_9_0,
									"org.xtext.example.mydsl.MyDsl.IfStmt");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getIfStmtLinhaAccess().getBlock1BlockParserRuleCall_1_1_1_1_0());
							}
							lv_block1_10_0=ruleBlock
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getIfStmtLinhaRule());
								}
								set(
									$current,
									"block1",
									lv_block1_10_0,
									"org.xtext.example.mydsl.MyDsl.Block");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)?
		)
	)
;

// Entry rule entryRuleSwitchStmt
entryRuleSwitchStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSwitchStmtRule()); }
	iv_ruleSwitchStmt=ruleSwitchStmt
	{ $current=$iv_ruleSwitchStmt.current; }
	EOF;

// Rule SwitchStmt
ruleSwitchStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSwitchStmtAccess().getExprSwitchStmtExprSwitchStmtParserRuleCall_0_0());
				}
				lv_exprSwitchStmt_0_0=ruleExprSwitchStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchStmtRule());
					}
					set(
						$current,
						"exprSwitchStmt",
						lv_exprSwitchStmt_0_0,
						"org.xtext.example.mydsl.MyDsl.ExprSwitchStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSwitchStmtAccess().getTypeSwitchStmtTypeSwitchStmtParserRuleCall_1_0());
				}
				lv_typeSwitchStmt_1_0=ruleTypeSwitchStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchStmtRule());
					}
					set(
						$current,
						"typeSwitchStmt",
						lv_typeSwitchStmt_1_0,
						"org.xtext.example.mydsl.MyDsl.TypeSwitchStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExprSwitchStmt
entryRuleExprSwitchStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprSwitchStmtRule()); }
	iv_ruleExprSwitchStmt=ruleExprSwitchStmt
	{ $current=$iv_ruleExprSwitchStmt.current; }
	EOF;

// Rule ExprSwitchStmt
ruleExprSwitchStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_switch_0_0='switch'
				{
					newLeafNode(lv_switch_0_0, grammarAccess.getExprSwitchStmtAccess().getSwitchSwitchKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExprSwitchStmtRule());
					}
					setWithLastConsumed($current, "switch", lv_switch_0_0, "switch");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0_0());
					}
					lv_simpleStmt_1_0=ruleSimpleStmt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
						}
						set(
							$current,
							"simpleStmt",
							lv_simpleStmt_1_0,
							"org.xtext.example.mydsl.MyDsl.SimpleStmt");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getExprSwitchStmtAccess().getSemicolonKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
					}
					set(
						$current,
						"expression",
						lv_expression_3_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getExprSwitchStmtAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getExprCaseClauseExprCaseClauseParserRuleCall_4_0());
				}
				lv_exprCaseClause_5_0=ruleExprCaseClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
					}
					add(
						$current,
						"exprCaseClause",
						lv_exprCaseClause_5_0,
						"org.xtext.example.mydsl.MyDsl.ExprCaseClause");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getExprSwitchStmtAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleExprCaseClause
entryRuleExprCaseClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprCaseClauseRule()); }
	iv_ruleExprCaseClause=ruleExprCaseClause
	{ $current=$iv_ruleExprCaseClause.current; }
	EOF;

// Rule ExprCaseClause
ruleExprCaseClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseExprSwitchCaseParserRuleCall_0_0());
				}
				lv_exprSwitchCase_0_0=ruleExprSwitchCase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprCaseClauseRule());
					}
					set(
						$current,
						"exprSwitchCase",
						lv_exprSwitchCase_0_0,
						"org.xtext.example.mydsl.MyDsl.ExprSwitchCase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getExprCaseClauseAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExprCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0());
				}
				lv_statementList_2_0=ruleStatementList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprCaseClauseRule());
					}
					set(
						$current,
						"statementList",
						lv_statementList_2_0,
						"org.xtext.example.mydsl.MyDsl.StatementList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExprSwitchCase
entryRuleExprSwitchCase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprSwitchCaseRule()); }
	iv_ruleExprSwitchCase=ruleExprSwitchCase
	{ $current=$iv_ruleExprSwitchCase.current; }
	EOF;

// Rule ExprSwitchCase
ruleExprSwitchCase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_case_0_0='case'
					{
						newLeafNode(lv_case_0_0, grammarAccess.getExprSwitchCaseAccess().getCaseCaseKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExprSwitchCaseRule());
						}
						setWithLastConsumed($current, "case", lv_case_0_0, "case");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExprSwitchCaseAccess().getExpressionListExpressionListParserRuleCall_0_1_0());
					}
					lv_expressionList_1_0=ruleExpressionList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprSwitchCaseRule());
						}
						set(
							$current,
							"expressionList",
							lv_expressionList_1_0,
							"org.xtext.example.mydsl.MyDsl.ExpressionList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				lv_default_2_0='default'
				{
					newLeafNode(lv_default_2_0, grammarAccess.getExprSwitchCaseAccess().getDefaultDefaultKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExprSwitchCaseRule());
					}
					setWithLastConsumed($current, "default", lv_default_2_0, "default");
				}
			)
		)
	)
;

// Entry rule entryRuleTypeSwitchStmt
entryRuleTypeSwitchStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSwitchStmtRule()); }
	iv_ruleTypeSwitchStmt=ruleTypeSwitchStmt
	{ $current=$iv_ruleTypeSwitchStmt.current; }
	EOF;

// Rule TypeSwitchStmt
ruleTypeSwitchStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_switch_0_0='switch'
				{
					newLeafNode(lv_switch_0_0, grammarAccess.getTypeSwitchStmtAccess().getSwitchSwitchKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeSwitchStmtRule());
					}
					setWithLastConsumed($current, "switch", lv_switch_0_0, "switch");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0_0());
					}
					lv_simpleStmt_1_0=ruleSimpleStmt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
						}
						set(
							$current,
							"simpleStmt",
							lv_simpleStmt_1_0,
							"org.xtext.example.mydsl.MyDsl.SimpleStmt");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getTypeSwitchStmtAccess().getSemicolonKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getTypeSwitchGuardTypeSwitchGuardParserRuleCall_2_0());
				}
				lv_typeSwitchGuard_3_0=ruleTypeSwitchGuard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
					}
					set(
						$current,
						"typeSwitchGuard",
						lv_typeSwitchGuard_3_0,
						"org.xtext.example.mydsl.MyDsl.TypeSwitchGuard");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getTypeSwitchStmtAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getTypeCaseClauseTypeCaseClauseParserRuleCall_4_0());
				}
				lv_typeCaseClause_5_0=ruleTypeCaseClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
					}
					add(
						$current,
						"typeCaseClause",
						lv_typeCaseClause_5_0,
						"org.xtext.example.mydsl.MyDsl.TypeCaseClause");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getTypeSwitchStmtAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleTypeSwitchGuard
entryRuleTypeSwitchGuard returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSwitchGuardRule()); }
	iv_ruleTypeSwitchGuard=ruleTypeSwitchGuard
	{ $current=$iv_ruleTypeSwitchGuard.current; }
	EOF;

// Rule TypeSwitchGuard
ruleTypeSwitchGuard returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_id_0_0=RULE_IDENTIFIER
					{
						newLeafNode(lv_id_0_0, grammarAccess.getTypeSwitchGuardAccess().getIdIDENTIFIERTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeSwitchGuardRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_0_0,
							"org.xtext.example.mydsl.MyDsl.IDENTIFIER");
					}
				)
			)
			otherlv_1=':='
			{
				newLeafNode(otherlv_1, grammarAccess.getTypeSwitchGuardAccess().getColonEqualsSignKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeSwitchGuardAccess().getPrimaryExprPrimaryExprParserRuleCall_1_0());
				}
				lv_primaryExpr_2_0=rulePrimaryExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeSwitchGuardRule());
					}
					set(
						$current,
						"primaryExpr",
						lv_primaryExpr_2_0,
						"org.xtext.example.mydsl.MyDsl.PrimaryExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='.'
		{
			newLeafNode(otherlv_3, grammarAccess.getTypeSwitchGuardAccess().getFullStopKeyword_2());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getTypeSwitchGuardAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				lv_type_5_0='type'
				{
					newLeafNode(lv_type_5_0, grammarAccess.getTypeSwitchGuardAccess().getTypeTypeKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeSwitchGuardRule());
					}
					setWithLastConsumed($current, "type", lv_type_5_0, "type");
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getTypeSwitchGuardAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleTypeCaseClause
entryRuleTypeCaseClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeCaseClauseRule()); }
	iv_ruleTypeCaseClause=ruleTypeCaseClause
	{ $current=$iv_ruleTypeCaseClause.current; }
	EOF;

// Rule TypeCaseClause
ruleTypeCaseClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseTypeSwitchCaseParserRuleCall_0_0());
				}
				lv_typeSwitchCase_0_0=ruleTypeSwitchCase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeCaseClauseRule());
					}
					set(
						$current,
						"typeSwitchCase",
						lv_typeSwitchCase_0_0,
						"org.xtext.example.mydsl.MyDsl.TypeSwitchCase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getTypeCaseClauseAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0());
				}
				lv_statementList_2_0=ruleStatementList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeCaseClauseRule());
					}
					set(
						$current,
						"statementList",
						lv_statementList_2_0,
						"org.xtext.example.mydsl.MyDsl.StatementList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTypeSwitchCase
entryRuleTypeSwitchCase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSwitchCaseRule()); }
	iv_ruleTypeSwitchCase=ruleTypeSwitchCase
	{ $current=$iv_ruleTypeSwitchCase.current; }
	EOF;

// Rule TypeSwitchCase
ruleTypeSwitchCase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_case_0_0='case'
					{
						newLeafNode(lv_case_0_0, grammarAccess.getTypeSwitchCaseAccess().getCaseCaseKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeSwitchCaseRule());
						}
						setWithLastConsumed($current, "case", lv_case_0_0, "case");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeSwitchCaseAccess().getTypeListTypeListParserRuleCall_0_1_0());
					}
					lv_typeList_1_0=ruleTypeList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeSwitchCaseRule());
						}
						set(
							$current,
							"typeList",
							lv_typeList_1_0,
							"org.xtext.example.mydsl.MyDsl.TypeList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				lv_default_2_0='default'
				{
					newLeafNode(lv_default_2_0, grammarAccess.getTypeSwitchCaseAccess().getDefaultDefaultKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeSwitchCaseRule());
					}
					setWithLastConsumed($current, "default", lv_default_2_0, "default");
				}
			)
		)
	)
;

// Entry rule entryRuleTypeList
entryRuleTypeList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeListRule()); }
	iv_ruleTypeList=ruleTypeList
	{ $current=$iv_ruleTypeList.current; }
	EOF;

// Rule TypeList
ruleTypeList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_0_0());
				}
				lv_type_0_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeListRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"org.xtext.example.mydsl.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getTypeListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeListAccess().getType1TypeParserRuleCall_1_1_0());
					}
					lv_type1_2_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeListRule());
						}
						add(
							$current,
							"type1",
							lv_type1_2_0,
							"org.xtext.example.mydsl.MyDsl.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleForStmt
entryRuleForStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForStmtRule()); }
	iv_ruleForStmt=ruleForStmt
	{ $current=$iv_ruleForStmt.current; }
	EOF;

// Rule ForStmt
ruleForStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_for_0_0=RULE_FOR
				{
					newLeafNode(lv_for_0_0, grammarAccess.getForStmtAccess().getForFORTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForStmtRule());
					}
					setWithLastConsumed(
						$current,
						"for",
						lv_for_0_0,
						"org.xtext.example.mydsl.MyDsl.FOR");
				}
			)
		)
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getForStmtAccess().getExpressionExpressionParserRuleCall_1_0_0_0());
						}
						lv_expression_1_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getForStmtRule());
							}
							set(
								$current,
								"expression",
								lv_expression_1_0,
								"org.xtext.example.mydsl.MyDsl.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getForStmtAccess().getForStmtLinhaForStmtLinhaParserRuleCall_1_0_1_0());
						}
						lv_forStmtLinha_2_0=ruleForStmtLinha
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getForStmtRule());
							}
							set(
								$current,
								"forStmtLinha",
								lv_forStmtLinha_2_0,
								"org.xtext.example.mydsl.MyDsl.ForStmtLinha");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getForStmtAccess().getEmptyStmtEmptyStmtParserRuleCall_1_1_0_0_0());
							}
							lv_emptyStmt_3_0=ruleEmptyStmt
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getForStmtRule());
								}
								set(
									$current,
									"emptyStmt",
									lv_emptyStmt_3_0,
									"org.xtext.example.mydsl.MyDsl.EmptyStmt");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getForStmtAccess().getShortVarDeclShortVarDeclParserRuleCall_1_1_0_1_0());
							}
							lv_shortVarDecl_4_0=ruleShortVarDecl
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getForStmtRule());
								}
								set(
									$current,
									"shortVarDecl",
									lv_shortVarDecl_4_0,
									"org.xtext.example.mydsl.MyDsl.ShortVarDecl");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				otherlv_5=';'
				{
					newLeafNode(otherlv_5, grammarAccess.getForStmtAccess().getSemicolonKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getForStmtAccess().getConditionConditionParserRuleCall_1_1_2_0());
						}
						lv_condition_6_0=ruleCondition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getForStmtRule());
							}
							set(
								$current,
								"condition",
								lv_condition_6_0,
								"org.xtext.example.mydsl.MyDsl.Condition");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_7=';'
				{
					newLeafNode(otherlv_7, grammarAccess.getForStmtAccess().getSemicolonKeyword_1_1_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getForStmtAccess().getPostStmtPostStmtParserRuleCall_1_1_4_0());
						}
						lv_postStmt_8_0=rulePostStmt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getForStmtRule());
							}
							set(
								$current,
								"postStmt",
								lv_postStmt_8_0,
								"org.xtext.example.mydsl.MyDsl.PostStmt");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getForStmtAccess().getIdentifierListIdentifierListParserRuleCall_1_2_0_0());
						}
						lv_identifierList_9_0=ruleIdentifierList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getForStmtRule());
							}
							set(
								$current,
								"identifierList",
								lv_identifierList_9_0,
								"org.xtext.example.mydsl.MyDsl.IdentifierList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_10=':='
				{
					newLeafNode(otherlv_10, grammarAccess.getForStmtAccess().getColonEqualsSignKeyword_1_2_1());
				}
				(
					(
						lv_range_11_0=RULE_RANGE
						{
							newLeafNode(lv_range_11_0, grammarAccess.getForStmtAccess().getRangeRANGETerminalRuleCall_1_2_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getForStmtRule());
							}
							setWithLastConsumed(
								$current,
								"range",
								lv_range_11_0,
								"org.xtext.example.mydsl.MyDsl.RANGE");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getForStmtAccess().getExpressionExpressionParserRuleCall_1_2_3_0());
						}
						lv_expression_12_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getForStmtRule());
							}
							set(
								$current,
								"expression",
								lv_expression_12_0,
								"org.xtext.example.mydsl.MyDsl.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getForStmtAccess().getBlockBlockParserRuleCall_2_0());
				}
				lv_block_13_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStmtRule());
					}
					set(
						$current,
						"block",
						lv_block_13_0,
						"org.xtext.example.mydsl.MyDsl.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleForStmtLinha
entryRuleForStmtLinha returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForStmtLinhaRule()); }
	iv_ruleForStmtLinha=ruleForStmtLinha
	{ $current=$iv_ruleForStmtLinha.current; }
	EOF;

// Rule ForStmtLinha
ruleForStmtLinha returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_vazio_0_0=RULE_ANY_OTHER
				{
					newLeafNode(lv_vazio_0_0, grammarAccess.getForStmtLinhaAccess().getVazioANY_OTHERTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForStmtLinhaRule());
					}
					setWithLastConsumed(
						$current,
						"vazio",
						lv_vazio_0_0,
						"org.xtext.example.mydsl.MyDsl.ANY_OTHER");
				}
			)
		)
		    |
		(
			(
				otherlv_1=','
				{
					newLeafNode(otherlv_1, grammarAccess.getForStmtLinhaAccess().getCommaKeyword_1_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getForStmtLinhaAccess().getExpressionExpressionParserRuleCall_1_0_1_0());
						}
						lv_expression_2_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getForStmtLinhaRule());
							}
							add(
								$current,
								"expression",
								lv_expression_2_0,
								"org.xtext.example.mydsl.MyDsl.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getForStmtLinhaAccess().getForStmtLinhaLinhaForStmtLinhaLinhaParserRuleCall_1_1_0());
					}
					lv_forStmtLinhaLinha_3_0=ruleForStmtLinhaLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForStmtLinhaRule());
						}
						set(
							$current,
							"forStmtLinhaLinha",
							lv_forStmtLinhaLinha_3_0,
							"org.xtext.example.mydsl.MyDsl.ForStmtLinhaLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					otherlv_4='<-'
					{
						newLeafNode(otherlv_4, grammarAccess.getForStmtLinhaAccess().getLessThanSignHyphenMinusKeyword_2_0_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getForStmtLinhaAccess().getExpression1ExpressionParserRuleCall_2_0_0_1_0());
							}
							lv_expression1_5_0=ruleExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getForStmtLinhaRule());
								}
								set(
									$current,
									"expression1",
									lv_expression1_5_0,
									"org.xtext.example.mydsl.MyDsl.Expression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					otherlv_6='++'
					{
						newLeafNode(otherlv_6, grammarAccess.getForStmtLinhaAccess().getPlusSignPlusSignKeyword_2_0_1_0());
					}
					    |
					otherlv_7='--'
					{
						newLeafNode(otherlv_7, grammarAccess.getForStmtLinhaAccess().getHyphenMinusHyphenMinusKeyword_2_0_1_1());
					}
				)
				    |
				(
					(
						lv_vazio_8_0=RULE_ANY_OTHER
						{
							newLeafNode(lv_vazio_8_0, grammarAccess.getForStmtLinhaAccess().getVazioANY_OTHERTerminalRuleCall_2_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getForStmtLinhaRule());
							}
							setWithLastConsumed(
								$current,
								"vazio",
								lv_vazio_8_0,
								"org.xtext.example.mydsl.MyDsl.ANY_OTHER");
						}
					)
				)
			)
			otherlv_9=';'
			{
				newLeafNode(otherlv_9, grammarAccess.getForStmtLinhaAccess().getSemicolonKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getForStmtLinhaAccess().getConditionConditionParserRuleCall_2_2_0());
					}
					lv_condition_10_0=ruleCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForStmtLinhaRule());
						}
						set(
							$current,
							"condition",
							lv_condition_10_0,
							"org.xtext.example.mydsl.MyDsl.Condition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_11=';'
			{
				newLeafNode(otherlv_11, grammarAccess.getForStmtLinhaAccess().getSemicolonKeyword_2_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getForStmtLinhaAccess().getPostStmtPostStmtParserRuleCall_2_4_0());
					}
					lv_postStmt_12_0=rulePostStmt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForStmtLinhaRule());
						}
						set(
							$current,
							"postStmt",
							lv_postStmt_12_0,
							"org.xtext.example.mydsl.MyDsl.PostStmt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleForStmtLinhaLinha
entryRuleForStmtLinhaLinha returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForStmtLinhaLinhaRule()); }
	iv_ruleForStmtLinhaLinha=ruleForStmtLinhaLinha
	{ $current=$iv_ruleForStmtLinhaLinha.current; }
	EOF;

// Rule ForStmtLinhaLinha
ruleForStmtLinhaLinha returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getForStmtLinhaLinhaAccess().getAssign_opAssign_opParserRuleCall_0_0_0());
					}
					lv_assign_op_0_0=ruleassign_op
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForStmtLinhaLinhaRule());
						}
						set(
							$current,
							"assign_op",
							lv_assign_op_0_0,
							"org.xtext.example.mydsl.MyDsl.assign_op");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getForStmtLinhaLinhaAccess().getExpressionListExpressionListParserRuleCall_0_1_0());
					}
					lv_expressionList_1_0=ruleExpressionList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForStmtLinhaLinhaRule());
						}
						set(
							$current,
							"expressionList",
							lv_expressionList_1_0,
							"org.xtext.example.mydsl.MyDsl.ExpressionList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getForStmtLinhaLinhaAccess().getSemicolonKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getForStmtLinhaLinhaAccess().getConditionConditionParserRuleCall_0_3_0());
					}
					lv_condition_3_0=ruleCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForStmtLinhaLinhaRule());
						}
						set(
							$current,
							"condition",
							lv_condition_3_0,
							"org.xtext.example.mydsl.MyDsl.Condition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getForStmtLinhaLinhaAccess().getSemicolonKeyword_0_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getForStmtLinhaLinhaAccess().getPostStmtPostStmtParserRuleCall_0_5_0());
					}
					lv_postStmt_5_0=rulePostStmt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForStmtLinhaLinhaRule());
						}
						set(
							$current,
							"postStmt",
							lv_postStmt_5_0,
							"org.xtext.example.mydsl.MyDsl.PostStmt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_6='='
			{
				newLeafNode(otherlv_6, grammarAccess.getForStmtLinhaLinhaAccess().getEqualsSignKeyword_1_0());
			}
			(
				(
					lv_range_7_0=RULE_RANGE
					{
						newLeafNode(lv_range_7_0, grammarAccess.getForStmtLinhaLinhaAccess().getRangeRANGETerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getForStmtLinhaLinhaRule());
						}
						setWithLastConsumed(
							$current,
							"range",
							lv_range_7_0,
							"org.xtext.example.mydsl.MyDsl.RANGE");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getForStmtLinhaLinhaAccess().getExpressionExpressionParserRuleCall_1_2_0());
					}
					lv_expression_8_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForStmtLinhaLinhaRule());
						}
						set(
							$current,
							"expression",
							lv_expression_8_0,
							"org.xtext.example.mydsl.MyDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getConditionAccess().getExpressionExpressionParserRuleCall_0());
			}
			lv_expression_0_0=ruleExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getConditionRule());
				}
				set(
					$current,
					"expression",
					lv_expression_0_0,
					"org.xtext.example.mydsl.MyDsl.Expression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulePostStmt
entryRulePostStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPostStmtRule()); }
	iv_rulePostStmt=rulePostStmt
	{ $current=$iv_rulePostStmt.current; }
	EOF;

// Rule PostStmt
rulePostStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPostStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_0());
			}
			lv_simpleStmt_0_0=ruleSimpleStmt
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getPostStmtRule());
				}
				set(
					$current,
					"simpleStmt",
					lv_simpleStmt_0_0,
					"org.xtext.example.mydsl.MyDsl.SimpleStmt");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleGoStmt
entryRuleGoStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGoStmtRule()); }
	iv_ruleGoStmt=ruleGoStmt
	{ $current=$iv_ruleGoStmt.current; }
	EOF;

// Rule GoStmt
ruleGoStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_go_0_0=RULE_GO
				{
					newLeafNode(lv_go_0_0, grammarAccess.getGoStmtAccess().getGoGOTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGoStmtRule());
					}
					setWithLastConsumed(
						$current,
						"go",
						lv_go_0_0,
						"org.xtext.example.mydsl.MyDsl.GO");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGoStmtAccess().getExpressionExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGoStmtRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSelectStmt
entryRuleSelectStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectStmtRule()); }
	iv_ruleSelectStmt=ruleSelectStmt
	{ $current=$iv_ruleSelectStmt.current; }
	EOF;

// Rule SelectStmt
ruleSelectStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_select_0_0=RULE_SELECT
				{
					newLeafNode(lv_select_0_0, grammarAccess.getSelectStmtAccess().getSelectSELECTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSelectStmtRule());
					}
					setWithLastConsumed(
						$current,
						"select",
						lv_select_0_0,
						"org.xtext.example.mydsl.MyDsl.SELECT");
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSelectStmtAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectStmtAccess().getCommClauseCommClauseParserRuleCall_2_0());
				}
				lv_commClause_2_0=ruleCommClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectStmtRule());
					}
					add(
						$current,
						"commClause",
						lv_commClause_2_0,
						"org.xtext.example.mydsl.MyDsl.CommClause");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getSelectStmtAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleCommClause
entryRuleCommClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommClauseRule()); }
	iv_ruleCommClause=ruleCommClause
	{ $current=$iv_ruleCommClause.current; }
	EOF;

// Rule CommClause
ruleCommClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCommClauseAccess().getCommCaseCommCaseParserRuleCall_0_0());
				}
				lv_commCase_0_0=ruleCommCase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommClauseRule());
					}
					set(
						$current,
						"commCase",
						lv_commCase_0_0,
						"org.xtext.example.mydsl.MyDsl.CommCase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getCommClauseAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCommClauseAccess().getStatementListStatementListParserRuleCall_2_0());
				}
				lv_statementList_2_0=ruleStatementList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommClauseRule());
					}
					set(
						$current,
						"statementList",
						lv_statementList_2_0,
						"org.xtext.example.mydsl.MyDsl.StatementList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCommCase
entryRuleCommCase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommCaseRule()); }
	iv_ruleCommCase=ruleCommCase
	{ $current=$iv_ruleCommCase.current; }
	EOF;

// Rule CommCase
ruleCommCase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_case_0_0='case'
					{
						newLeafNode(lv_case_0_0, grammarAccess.getCommCaseAccess().getCaseCaseKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCommCaseRule());
						}
						setWithLastConsumed($current, "case", lv_case_0_0, "case");
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getCommCaseAccess().getExpressionExpressionParserRuleCall_0_1_0_0());
						}
						lv_expression_1_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCommCaseRule());
							}
							set(
								$current,
								"expression",
								lv_expression_1_0,
								"org.xtext.example.mydsl.MyDsl.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getCommCaseAccess().getCommCaseLinhaCommCaseLinhaParserRuleCall_0_1_1_0());
						}
						lv_commCaseLinha_2_0=ruleCommCaseLinha
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCommCaseRule());
							}
							set(
								$current,
								"commCaseLinha",
								lv_commCaseLinha_2_0,
								"org.xtext.example.mydsl.MyDsl.CommCaseLinha");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		    |
		(
			(
				lv_default_3_0='default'
				{
					newLeafNode(lv_default_3_0, grammarAccess.getCommCaseAccess().getDefaultDefaultKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCommCaseRule());
					}
					setWithLastConsumed($current, "default", lv_default_3_0, "default");
				}
			)
		)
	)
;

// Entry rule entryRuleCommCaseLinha
entryRuleCommCaseLinha returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommCaseLinhaRule()); }
	iv_ruleCommCaseLinha=ruleCommCaseLinha
	{ $current=$iv_ruleCommCaseLinha.current; }
	EOF;

// Rule CommCaseLinha
ruleCommCaseLinha returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='<-'
			{
				newLeafNode(otherlv_0, grammarAccess.getCommCaseLinhaAccess().getLessThanSignHyphenMinusKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommCaseLinhaAccess().getExpressionExpressionParserRuleCall_0_1_0());
					}
					lv_expression_1_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommCaseLinhaRule());
						}
						set(
							$current,
							"expression",
							lv_expression_1_0,
							"org.xtext.example.mydsl.MyDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					(
						otherlv_2=','
						{
							newLeafNode(otherlv_2, grammarAccess.getCommCaseLinhaAccess().getCommaKeyword_1_0_0_0_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getCommCaseLinhaAccess().getExpression1ExpressionParserRuleCall_1_0_0_0_1_0());
								}
								lv_expression1_3_0=ruleExpression
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getCommCaseLinhaRule());
									}
									add(
										$current,
										"expression1",
										lv_expression1_3_0,
										"org.xtext.example.mydsl.MyDsl.Expression");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
					otherlv_4='='
					{
						newLeafNode(otherlv_4, grammarAccess.getCommCaseLinhaAccess().getEqualsSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getCommCaseLinhaAccess().getIdentifierListIdentifierListParserRuleCall_1_0_1_0_0());
							}
							lv_identifierList_5_0=ruleIdentifierList
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCommCaseLinhaRule());
								}
								set(
									$current,
									"identifierList",
									lv_identifierList_5_0,
									"org.xtext.example.mydsl.MyDsl.IdentifierList");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_6=':='
					{
						newLeafNode(otherlv_6, grammarAccess.getCommCaseLinhaAccess().getColonEqualsSignKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCommCaseLinhaAccess().getRecvExprRecvExprParserRuleCall_1_1_0());
					}
					lv_recvExpr_7_0=ruleRecvExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommCaseLinhaRule());
						}
						set(
							$current,
							"recvExpr",
							lv_recvExpr_7_0,
							"org.xtext.example.mydsl.MyDsl.RecvExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleRecvExpr
entryRuleRecvExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRecvExprRule()); }
	iv_ruleRecvExpr=ruleRecvExpr
	{ $current=$iv_ruleRecvExpr.current; }
	EOF;

// Rule RecvExpr
ruleRecvExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getRecvExprAccess().getExpressionExpressionParserRuleCall_0());
			}
			lv_expression_0_0=ruleExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getRecvExprRule());
				}
				set(
					$current,
					"expression",
					lv_expression_0_0,
					"org.xtext.example.mydsl.MyDsl.Expression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleReturnStmt
entryRuleReturnStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnStmtRule()); }
	iv_ruleReturnStmt=ruleReturnStmt
	{ $current=$iv_ruleReturnStmt.current; }
	EOF;

// Rule ReturnStmt
ruleReturnStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_return_0_0=RULE_RETURN
				{
					newLeafNode(lv_return_0_0, grammarAccess.getReturnStmtAccess().getReturnRETURNTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReturnStmtRule());
					}
					setWithLastConsumed(
						$current,
						"return",
						lv_return_0_0,
						"org.xtext.example.mydsl.MyDsl.RETURN");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnStmtAccess().getExpressionListExpressionListParserRuleCall_1_0());
				}
				lv_expressionList_1_0=ruleExpressionList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnStmtRule());
					}
					set(
						$current,
						"expressionList",
						lv_expressionList_1_0,
						"org.xtext.example.mydsl.MyDsl.ExpressionList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBreakStmt
entryRuleBreakStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBreakStmtRule()); }
	iv_ruleBreakStmt=ruleBreakStmt
	{ $current=$iv_ruleBreakStmt.current; }
	EOF;

// Rule BreakStmt
ruleBreakStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_break_0_0=RULE_BREAK
				{
					newLeafNode(lv_break_0_0, grammarAccess.getBreakStmtAccess().getBreakBREAKTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBreakStmtRule());
					}
					setWithLastConsumed(
						$current,
						"break",
						lv_break_0_0,
						"org.xtext.example.mydsl.MyDsl.BREAK");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBreakStmtAccess().getLabelLabelParserRuleCall_1_0());
				}
				lv_label_1_0=ruleLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBreakStmtRule());
					}
					set(
						$current,
						"label",
						lv_label_1_0,
						"org.xtext.example.mydsl.MyDsl.Label");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleContinueStmt
entryRuleContinueStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContinueStmtRule()); }
	iv_ruleContinueStmt=ruleContinueStmt
	{ $current=$iv_ruleContinueStmt.current; }
	EOF;

// Rule ContinueStmt
ruleContinueStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_continue_0_0=RULE_CONTINUE
				{
					newLeafNode(lv_continue_0_0, grammarAccess.getContinueStmtAccess().getContinueCONTINUETerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContinueStmtRule());
					}
					setWithLastConsumed(
						$current,
						"continue",
						lv_continue_0_0,
						"org.xtext.example.mydsl.MyDsl.CONTINUE");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getContinueStmtAccess().getLabelLabelParserRuleCall_1_0());
				}
				lv_label_1_0=ruleLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContinueStmtRule());
					}
					set(
						$current,
						"label",
						lv_label_1_0,
						"org.xtext.example.mydsl.MyDsl.Label");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleGotoStmt
entryRuleGotoStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGotoStmtRule()); }
	iv_ruleGotoStmt=ruleGotoStmt
	{ $current=$iv_ruleGotoStmt.current; }
	EOF;

// Rule GotoStmt
ruleGotoStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_goto_0_0=RULE_GOTO
				{
					newLeafNode(lv_goto_0_0, grammarAccess.getGotoStmtAccess().getGotoGOTOTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGotoStmtRule());
					}
					setWithLastConsumed(
						$current,
						"goto",
						lv_goto_0_0,
						"org.xtext.example.mydsl.MyDsl.GOTO");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGotoStmtAccess().getLabelLabelParserRuleCall_1_0());
				}
				lv_label_1_0=ruleLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGotoStmtRule());
					}
					set(
						$current,
						"label",
						lv_label_1_0,
						"org.xtext.example.mydsl.MyDsl.Label");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFallthroughStmt
entryRuleFallthroughStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFallthroughStmtRule()); }
	iv_ruleFallthroughStmt=ruleFallthroughStmt
	{ $current=$iv_ruleFallthroughStmt.current; }
	EOF;

// Rule FallthroughStmt
ruleFallthroughStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_fallthrough_0_0=RULE_FALLTHROUGH
			{
				newLeafNode(lv_fallthrough_0_0, grammarAccess.getFallthroughStmtAccess().getFallthroughFALLTHROUGHTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFallthroughStmtRule());
				}
				setWithLastConsumed(
					$current,
					"fallthrough",
					lv_fallthrough_0_0,
					"org.xtext.example.mydsl.MyDsl.FALLTHROUGH");
			}
		)
	)
;

// Entry rule entryRuleDeferStmt
entryRuleDeferStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeferStmtRule()); }
	iv_ruleDeferStmt=ruleDeferStmt
	{ $current=$iv_ruleDeferStmt.current; }
	EOF;

// Rule DeferStmt
ruleDeferStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_defer_0_0=RULE_DEFER
				{
					newLeafNode(lv_defer_0_0, grammarAccess.getDeferStmtAccess().getDeferDEFERTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeferStmtRule());
					}
					setWithLastConsumed(
						$current,
						"defer",
						lv_defer_0_0,
						"org.xtext.example.mydsl.MyDsl.DEFER");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeferStmtAccess().getExpressionExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeferStmtRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSourceFile
entryRuleSourceFile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSourceFileRule()); }
	iv_ruleSourceFile=ruleSourceFile
	{ $current=$iv_ruleSourceFile.current; }
	EOF;

// Rule SourceFile
ruleSourceFile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSourceFileAccess().getSourceFileAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSourceFileAccess().getPackageClausePackageClauseParserRuleCall_1_0());
				}
				lv_packageClause_1_0=rulePackageClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSourceFileRule());
					}
					set(
						$current,
						"packageClause",
						lv_packageClause_1_0,
						"org.xtext.example.mydsl.MyDsl.PackageClause");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSourceFileAccess().getImportDeclImportDeclParserRuleCall_2_0());
				}
				lv_importDecl_2_0=ruleImportDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSourceFileRule());
					}
					add(
						$current,
						"importDecl",
						lv_importDecl_2_0,
						"org.xtext.example.mydsl.MyDsl.ImportDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSourceFileAccess().getTopLevelDeclTopLevelDeclParserRuleCall_3_0());
				}
				lv_topLevelDecl_3_0=ruleTopLevelDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSourceFileRule());
					}
					add(
						$current,
						"topLevelDecl",
						lv_topLevelDecl_3_0,
						"org.xtext.example.mydsl.MyDsl.TopLevelDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRulePackageClause
entryRulePackageClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageClauseRule()); }
	iv_rulePackageClause=rulePackageClause
	{ $current=$iv_rulePackageClause.current; }
	EOF;

// Rule PackageClause
rulePackageClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_package_0_0='package'
				{
					newLeafNode(lv_package_0_0, grammarAccess.getPackageClauseAccess().getPackagePackageKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPackageClauseRule());
					}
					setWithLastConsumed($current, "package", lv_package_0_0, "package");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageClauseAccess().getPackageNamePackageNameParserRuleCall_1_0());
				}
				lv_packageName_1_0=rulePackageName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageClauseRule());
					}
					set(
						$current,
						"packageName",
						lv_packageName_1_0,
						"org.xtext.example.mydsl.MyDsl.PackageName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePackageName
entryRulePackageName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageNameRule()); }
	iv_rulePackageName=rulePackageName
	{ $current=$iv_rulePackageName.current; }
	EOF;

// Rule PackageName
rulePackageName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_id_0_0=RULE_IDENTIFIER
			{
				newLeafNode(lv_id_0_0, grammarAccess.getPackageNameAccess().getIdIDENTIFIERTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getPackageNameRule());
				}
				setWithLastConsumed(
					$current,
					"id",
					lv_id_0_0,
					"org.xtext.example.mydsl.MyDsl.IDENTIFIER");
			}
		)
	)
;

// Entry rule entryRuleImportDecl
entryRuleImportDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportDeclRule()); }
	iv_ruleImportDecl=ruleImportDecl
	{ $current=$iv_ruleImportDecl.current; }
	EOF;

// Rule ImportDecl
ruleImportDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_importt_0_0='import'
				{
					newLeafNode(lv_importt_0_0, grammarAccess.getImportDeclAccess().getImporttImportKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportDeclRule());
					}
					setWithLastConsumed($current, "importt", lv_importt_0_0, "import");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getImportDeclAccess().getImportSpecImportSpecParserRuleCall_1_0_0());
					}
					lv_importSpec_1_0=ruleImportSpec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImportDeclRule());
						}
						set(
							$current,
							"importSpec",
							lv_importSpec_1_0,
							"org.xtext.example.mydsl.MyDsl.ImportSpec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_2='('
				{
					newLeafNode(otherlv_2, grammarAccess.getImportDeclAccess().getLeftParenthesisKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getImportDeclAccess().getImportSpec1ImportSpecParserRuleCall_1_1_1_0());
						}
						lv_importSpec1_3_0=ruleImportSpec
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getImportDeclRule());
							}
							add(
								$current,
								"importSpec1",
								lv_importSpec1_3_0,
								"org.xtext.example.mydsl.MyDsl.ImportSpec");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_4=')'
				{
					newLeafNode(otherlv_4, grammarAccess.getImportDeclAccess().getRightParenthesisKeyword_1_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleImportSpec
entryRuleImportSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportSpecRule()); }
	iv_ruleImportSpec=ruleImportSpec
	{ $current=$iv_ruleImportSpec.current; }
	EOF;

// Rule ImportSpec
ruleImportSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='.'
			{
				newLeafNode(otherlv_0, grammarAccess.getImportSpecAccess().getFullStopKeyword_0_0());
			}
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getImportSpecAccess().getPackageNamePackageNameParserRuleCall_0_1_0());
					}
					lv_packageName_1_0=rulePackageName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImportSpecRule());
						}
						set(
							$current,
							"packageName",
							lv_packageName_1_0,
							"org.xtext.example.mydsl.MyDsl.PackageName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				lv_sTRING_LIT_2_0=RULE_STRING_LIT
				{
					newLeafNode(lv_sTRING_LIT_2_0, grammarAccess.getImportSpecAccess().getSTRING_LITSTRING_LITTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportSpecRule());
					}
					setWithLastConsumed(
						$current,
						"sTRING_LIT",
						lv_sTRING_LIT_2_0,
						"org.xtext.example.mydsl.MyDsl.STRING_LIT");
				}
			)
		)
	)
;

fragment RULE_NEWLINE : ('\n'|'\r'|'\n\r');

fragment RULE_UNICODE_CHAR : RULE_LETTER;

fragment RULE_LETTER : ('a'..'z'|'A'..'Z'|'_');

fragment RULE_DECIMAL_DIGIT : '0'..'9';

fragment RULE_OCTAL_DIGIT : '0'..'7';

fragment RULE_HEX_DIGIT : ('0'..'9'|'A'..'F'|'a'..'f');

RULE_BREAK : 'break';

RULE_INTERFACE : 'interface';

RULE_SELECT : 'select';

RULE_DEFER : 'defer';

RULE_GO : 'go';

RULE_MAP : 'map';

RULE_STRUCT : 'struct';

RULE_CHAN : 'chan';

RULE_ELSE : 'else';

RULE_GOTO : 'goto';

RULE_FALLTHROUGH : 'fallthrough';

RULE_IF : 'if';

RULE_RANGE : 'range';

RULE_CONTINUE : 'continue';

RULE_FOR : 'for';

RULE_RETURN : 'return';

RULE_IDENTIFIER : RULE_LETTER (RULE_LETTER|'0'..'9')*;

RULE_INT_LIT : ('1'..'9' RULE_DECIMAL_DIGIT*|'0' RULE_OCTAL_DIGIT*|'0' ('x'|'X') RULE_HEX_DIGIT+);

RULE_FLOAT_LIT : (RULE_DECIMALS '.' RULE_DECIMALS? RULE_EXPONENT?|RULE_DECIMALS RULE_EXPONENT|'.' RULE_DECIMALS RULE_EXPONENT?);

fragment RULE_DECIMALS : RULE_INT;

fragment RULE_EXPONENT : ('e'|'E') ('+'|'-')? RULE_DECIMALS;

RULE_IMAGINARY_LIT : (RULE_DECIMALS|RULE_FLOAT_LIT) 'i';

RULE_RUNE_LIT : '\'' (RULE_UNICODE_VALUE|RULE_BYTE_VALUE) '\'';

fragment RULE_UNICODE_VALUE : (RULE_UNICODE_CHAR|RULE_LITTLE_U_VALUE|RULE_BIG_U_VALUE|RULE_ESCAPED_CHAR);

fragment RULE_BYTE_VALUE : (RULE_OCTAL_BYTE_VALUE|RULE_HEX_BYTE_VALUE);

fragment RULE_OCTAL_BYTE_VALUE : '\\' RULE_OCTAL_DIGIT RULE_OCTAL_DIGIT RULE_OCTAL_DIGIT;

fragment RULE_HEX_BYTE_VALUE : '\\' 'x' RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_LITTLE_U_VALUE : '\\' 'u' RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_BIG_U_VALUE : '\\' 'U' RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_ESCAPED_CHAR : '\\' ('a'|'b'|'f'|'n'|'r'|'t'|'v'|'\\'|'\''|'"');

RULE_STRING_LIT : (RULE_RAW_STRING_LIT|RULE_INTERPRETED_STRING_LIT);

fragment RULE_RAW_STRING_LIT : '\'' (RULE_UNICODE_CHAR|RULE_NEWLINE)* '\'';

fragment RULE_INTERPRETED_STRING_LIT : '"' (RULE_UNICODE_VALUE|RULE_BYTE_VALUE)* '"';

RULE_ANY_OTHER : '#';

RULE_REL_OP : ('=='|'!='|'<'|'<='|'>'|'>=');

RULE_ADD_OP : ('+'|'-'|'|'|'^');

RULE_MUL_OP : ('*'|'/'|'%'|'<<'|'>>'|'&'|'&^');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;
