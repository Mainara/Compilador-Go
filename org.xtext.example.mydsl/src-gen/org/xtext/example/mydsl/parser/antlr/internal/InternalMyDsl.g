/*
 * generated by Xtext 2.10.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getGreetingsGreetingParserRuleCall_0());
			}
			lv_greetings_0_0=ruleGreeting
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"greetings",
					lv_greetings_0_0,
					"org.xtext.example.mydsl.MyDsl.Greeting");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleGreeting
entryRuleGreeting returns [String current=null]:
	{ newCompositeNode(grammarAccess.getGreetingRule()); }
	iv_ruleGreeting=ruleGreeting
	{ $current=$iv_ruleGreeting.current.getText(); }
	EOF;

// Rule Greeting
ruleGreeting returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getGreetingAccess().getSourceFileParserRuleCall());
	}
	this_SourceFile_0=ruleSourceFile
	{
		$current.merge(this_SourceFile_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleFLOAT_LIT
entryRuleFLOAT_LIT returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFLOAT_LITRule()); }
	iv_ruleFLOAT_LIT=ruleFLOAT_LIT
	{ $current=$iv_ruleFLOAT_LIT.current.getText(); }
	EOF;

// Rule FLOAT_LIT
ruleFLOAT_LIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_DECIMALS_0=RULE_DECIMALS
			{
				$current.merge(this_DECIMALS_0);
			}
			{
				newLeafNode(this_DECIMALS_0, grammarAccess.getFLOAT_LITAccess().getDECIMALSTerminalRuleCall_0_0());
			}
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFLOAT_LITAccess().getFullStopKeyword_0_1());
			}
			(
				this_DECIMALS_2=RULE_DECIMALS
				{
					$current.merge(this_DECIMALS_2);
				}
				{
					newLeafNode(this_DECIMALS_2, grammarAccess.getFLOAT_LITAccess().getDECIMALSTerminalRuleCall_0_2());
				}
			)?
			(
				this_EXPONENT_3=RULE_EXPONENT
				{
					$current.merge(this_EXPONENT_3);
				}
				{
					newLeafNode(this_EXPONENT_3, grammarAccess.getFLOAT_LITAccess().getEXPONENTTerminalRuleCall_0_3());
				}
			)?
		)
		    |
		(
			this_DECIMALS_4=RULE_DECIMALS
			{
				$current.merge(this_DECIMALS_4);
			}
			{
				newLeafNode(this_DECIMALS_4, grammarAccess.getFLOAT_LITAccess().getDECIMALSTerminalRuleCall_1_0());
			}
			this_EXPONENT_5=RULE_EXPONENT
			{
				$current.merge(this_EXPONENT_5);
			}
			{
				newLeafNode(this_EXPONENT_5, grammarAccess.getFLOAT_LITAccess().getEXPONENTTerminalRuleCall_1_1());
			}
		)
		    |
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFLOAT_LITAccess().getFullStopKeyword_2_0());
			}
			this_DECIMALS_7=RULE_DECIMALS
			{
				$current.merge(this_DECIMALS_7);
			}
			{
				newLeafNode(this_DECIMALS_7, grammarAccess.getFLOAT_LITAccess().getDECIMALSTerminalRuleCall_2_1());
			}
			(
				this_EXPONENT_8=RULE_EXPONENT
				{
					$current.merge(this_EXPONENT_8);
				}
				{
					newLeafNode(this_EXPONENT_8, grammarAccess.getFLOAT_LITAccess().getEXPONENTTerminalRuleCall_2_2());
				}
			)?
		)
	)
;

// Entry rule entryRuleIMAGINARY_LIT
entryRuleIMAGINARY_LIT returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIMAGINARY_LITRule()); }
	iv_ruleIMAGINARY_LIT=ruleIMAGINARY_LIT
	{ $current=$iv_ruleIMAGINARY_LIT.current.getText(); }
	EOF;

// Rule IMAGINARY_LIT
ruleIMAGINARY_LIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_DECIMALS_0=RULE_DECIMALS
			{
				$current.merge(this_DECIMALS_0);
			}
			{
				newLeafNode(this_DECIMALS_0, grammarAccess.getIMAGINARY_LITAccess().getDECIMALSTerminalRuleCall_0_0());
			}
			    |
			{
				newCompositeNode(grammarAccess.getIMAGINARY_LITAccess().getFLOAT_LITParserRuleCall_0_1());
			}
			this_FLOAT_LIT_1=ruleFLOAT_LIT
			{
				$current.merge(this_FLOAT_LIT_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		kw='i'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getIMAGINARY_LITAccess().getIKeyword_1());
		}
	)
;

// Entry rule entryRuleType
entryRuleType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current.getText(); }
	EOF;

// Rule Type
ruleType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeAccess().getTypeNameParserRuleCall_0());
		}
		this_TypeName_0=ruleTypeName
		{
			$current.merge(this_TypeName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getTypeLitParserRuleCall_1());
		}
		this_TypeLit_1=ruleTypeLit
		{
			$current.merge(this_TypeLit_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		(
			kw='('
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0());
			}
			{
				newCompositeNode(grammarAccess.getTypeAccess().getTypeParserRuleCall_2_1());
			}
			this_Type_3=ruleType
			{
				$current.merge(this_Type_3);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=')'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2());
			}
		)
	)
;

// Entry rule entryRuleTypeName
entryRuleTypeName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeNameRule()); }
	iv_ruleTypeName=ruleTypeName
	{ $current=$iv_ruleTypeName.current.getText(); }
	EOF;

// Rule TypeName
ruleTypeName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_IDENTIFIER_0=RULE_IDENTIFIER
		{
			$current.merge(this_IDENTIFIER_0);
		}
		{
			newLeafNode(this_IDENTIFIER_0, grammarAccess.getTypeNameAccess().getIDENTIFIERTerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getTypeNameAccess().getTypeNameLinhaParserRuleCall_1());
		}
		this_TypeNameLinha_1=ruleTypeNameLinha
		{
			$current.merge(this_TypeNameLinha_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTypeNameLinha
entryRuleTypeNameLinha returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeNameLinhaRule()); }
	iv_ruleTypeNameLinha=ruleTypeNameLinha
	{ $current=$iv_ruleTypeNameLinha.current.getText(); }
	EOF;

// Rule TypeNameLinha
ruleTypeNameLinha returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTypeNameLinhaAccess().getFullStopKeyword_0_0());
			}
			this_IDENTIFIER_1=RULE_IDENTIFIER
			{
				$current.merge(this_IDENTIFIER_1);
			}
			{
				newLeafNode(this_IDENTIFIER_1, grammarAccess.getTypeNameLinhaAccess().getIDENTIFIERTerminalRuleCall_0_1());
			}
		)
		    |
		this_ANY_OTHER_2=RULE_ANY_OTHER
		{
			$current.merge(this_ANY_OTHER_2);
		}
		{
			newLeafNode(this_ANY_OTHER_2, grammarAccess.getTypeNameLinhaAccess().getANY_OTHERTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleTypeLit
entryRuleTypeLit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeLitRule()); }
	iv_ruleTypeLit=ruleTypeLit
	{ $current=$iv_ruleTypeLit.current.getText(); }
	EOF;

// Rule TypeLit
ruleTypeLit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='['
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTypeLitAccess().getLeftSquareBracketKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getTypeLitAccess().getTypeLitLinhaParserRuleCall_0_1());
			}
			this_TypeLitLinha_1=ruleTypeLitLinha
			{
				$current.merge(this_TypeLitLinha_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getTypeLitAccess().getStructTypeParserRuleCall_1());
		}
		this_StructType_2=ruleStructType
		{
			$current.merge(this_StructType_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeLitAccess().getPointerTypeParserRuleCall_2());
		}
		this_PointerType_3=rulePointerType
		{
			$current.merge(this_PointerType_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeLitAccess().getFunctionTypeParserRuleCall_3());
		}
		this_FunctionType_4=ruleFunctionType
		{
			$current.merge(this_FunctionType_4);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeLitAccess().getInterfaceTypeParserRuleCall_4());
		}
		this_InterfaceType_5=ruleInterfaceType
		{
			$current.merge(this_InterfaceType_5);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeLitAccess().getMapTypeParserRuleCall_5());
		}
		this_MapType_6=ruleMapType
		{
			$current.merge(this_MapType_6);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeLitAccess().getChannelTypeParserRuleCall_6());
		}
		this_ChannelType_7=ruleChannelType
		{
			$current.merge(this_ChannelType_7);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTypeLitLinha
entryRuleTypeLitLinha returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeLitLinhaRule()); }
	iv_ruleTypeLitLinha=ruleTypeLitLinha
	{ $current=$iv_ruleTypeLitLinha.current.getText(); }
	EOF;

// Rule TypeLitLinha
ruleTypeLitLinha returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getTypeLitLinhaAccess().getArrayLengthParserRuleCall_0_0());
			}
			this_ArrayLength_0=ruleArrayLength
			{
				$current.merge(this_ArrayLength_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=']'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTypeLitLinhaAccess().getRightSquareBracketKeyword_0_1());
			}
			{
				newCompositeNode(grammarAccess.getTypeLitLinhaAccess().getElementTypeParserRuleCall_0_2());
			}
			this_ElementType_2=ruleElementType
			{
				$current.merge(this_ElementType_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			kw=']'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTypeLitLinhaAccess().getRightSquareBracketKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getTypeLitLinhaAccess().getElementTypeParserRuleCall_1_1());
			}
			this_ElementType_4=ruleElementType
			{
				$current.merge(this_ElementType_4);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleArrayLength
entryRuleArrayLength returns [String current=null]:
	{ newCompositeNode(grammarAccess.getArrayLengthRule()); }
	iv_ruleArrayLength=ruleArrayLength
	{ $current=$iv_ruleArrayLength.current.getText(); }
	EOF;

// Rule ArrayLength
ruleArrayLength returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getArrayLengthAccess().getExpressionParserRuleCall());
	}
	this_Expression_0=ruleExpression
	{
		$current.merge(this_Expression_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleElementType
entryRuleElementType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getElementTypeRule()); }
	iv_ruleElementType=ruleElementType
	{ $current=$iv_ruleElementType.current.getText(); }
	EOF;

// Rule ElementType
ruleElementType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getElementTypeAccess().getTypeParserRuleCall());
	}
	this_Type_0=ruleType
	{
		$current.merge(this_Type_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleStructType
entryRuleStructType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getStructTypeRule()); }
	iv_ruleStructType=ruleStructType
	{ $current=$iv_ruleStructType.current.getText(); }
	EOF;

// Rule StructType
ruleStructType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRUCT_0=RULE_STRUCT
		{
			$current.merge(this_STRUCT_0);
		}
		{
			newLeafNode(this_STRUCT_0, grammarAccess.getStructTypeAccess().getSTRUCTTerminalRuleCall_0());
		}
		kw='{'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			{
				newCompositeNode(grammarAccess.getStructTypeAccess().getFieldDeclParserRuleCall_2_0());
			}
			this_FieldDecl_2=ruleFieldDecl
			{
				$current.merge(this_FieldDecl_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=';'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getStructTypeAccess().getSemicolonKeyword_2_1());
			}
		)*
		kw='}'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleFieldDecl
entryRuleFieldDecl returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFieldDeclRule()); }
	iv_ruleFieldDecl=ruleFieldDecl
	{ $current=$iv_ruleFieldDecl.current.getText(); }
	EOF;

// Rule FieldDecl
ruleFieldDecl returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldDeclAccess().getIdentifierListParserRuleCall_0_0_0());
				}
				this_IdentifierList_0=ruleIdentifierList
				{
					$current.merge(this_IdentifierList_0);
				}
				{
					afterParserOrEnumRuleCall();
				}
				{
					newCompositeNode(grammarAccess.getFieldDeclAccess().getTypeParserRuleCall_0_0_1());
				}
				this_Type_1=ruleType
				{
					$current.merge(this_Type_1);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)
			    |
			{
				newCompositeNode(grammarAccess.getFieldDeclAccess().getEmbeddedFieldParserRuleCall_0_1());
			}
			this_EmbeddedField_2=ruleEmbeddedField
			{
				$current.merge(this_EmbeddedField_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		(
			{
				newCompositeNode(grammarAccess.getFieldDeclAccess().getTagParserRuleCall_1());
			}
			this_Tag_3=ruleTag
			{
				$current.merge(this_Tag_3);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRuleEmbeddedField
entryRuleEmbeddedField returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEmbeddedFieldRule()); }
	iv_ruleEmbeddedField=ruleEmbeddedField
	{ $current=$iv_ruleEmbeddedField.current.getText(); }
	EOF;

// Rule EmbeddedField
ruleEmbeddedField returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEmbeddedFieldAccess().getAsteriskKeyword_0());
			}
		)?
		{
			newCompositeNode(grammarAccess.getEmbeddedFieldAccess().getTypeNameParserRuleCall_1());
		}
		this_TypeName_1=ruleTypeName
		{
			$current.merge(this_TypeName_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTag
entryRuleTag returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTagRule()); }
	iv_ruleTag=ruleTag
	{ $current=$iv_ruleTag.current.getText(); }
	EOF;

// Rule Tag
ruleTag returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_STRING_LIT_0=RULE_STRING_LIT
	{
		$current.merge(this_STRING_LIT_0);
	}
	{
		newLeafNode(this_STRING_LIT_0, grammarAccess.getTagAccess().getSTRING_LITTerminalRuleCall());
	}
;

// Entry rule entryRulePointerType
entryRulePointerType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPointerTypeRule()); }
	iv_rulePointerType=rulePointerType
	{ $current=$iv_rulePointerType.current.getText(); }
	EOF;

// Rule PointerType
rulePointerType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getPointerTypeAccess().getBaseTypeParserRuleCall_1());
		}
		this_BaseType_1=ruleBaseType
		{
			$current.merge(this_BaseType_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBaseType
entryRuleBaseType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBaseTypeRule()); }
	iv_ruleBaseType=ruleBaseType
	{ $current=$iv_ruleBaseType.current.getText(); }
	EOF;

// Rule BaseType
ruleBaseType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getBaseTypeAccess().getTypeParserRuleCall());
	}
	this_Type_0=ruleType
	{
		$current.merge(this_Type_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleFunctionType
entryRuleFunctionType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFunctionTypeRule()); }
	iv_ruleFunctionType=ruleFunctionType
	{ $current=$iv_ruleFunctionType.current.getText(); }
	EOF;

// Rule FunctionType
ruleFunctionType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_FUNC_0=RULE_FUNC
		{
			$current.merge(this_FUNC_0);
		}
		{
			newLeafNode(this_FUNC_0, grammarAccess.getFunctionTypeAccess().getFUNCTerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getFunctionTypeAccess().getSignatureParserRuleCall_1());
		}
		this_Signature_1=ruleSignature
		{
			$current.merge(this_Signature_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSignature
entryRuleSignature returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSignatureRule()); }
	iv_ruleSignature=ruleSignature
	{ $current=$iv_ruleSignature.current.getText(); }
	EOF;

// Rule Signature
ruleSignature returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSignatureAccess().getParametersParserRuleCall_0());
		}
		this_Parameters_0=ruleParameters
		{
			$current.merge(this_Parameters_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			(ruleResult)=>
			{
				newCompositeNode(grammarAccess.getSignatureAccess().getResultParserRuleCall_1());
			}
			this_Result_1=ruleResult
			{
				$current.merge(this_Result_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRuleResult
entryRuleResult returns [String current=null]:
	{ newCompositeNode(grammarAccess.getResultRule()); }
	iv_ruleResult=ruleResult
	{ $current=$iv_ruleResult.current.getText(); }
	EOF;

// Rule Result
ruleResult returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(ruleParameters)=>
			{
				newCompositeNode(grammarAccess.getResultAccess().getParametersParserRuleCall_0());
			}
			this_Parameters_0=ruleParameters
			{
				$current.merge(this_Parameters_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getResultAccess().getTypeParserRuleCall_1());
		}
		this_Type_1=ruleType
		{
			$current.merge(this_Type_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleParameters
entryRuleParameters returns [String current=null]:
	{ newCompositeNode(grammarAccess.getParametersRule()); }
	iv_ruleParameters=ruleParameters
	{ $current=$iv_ruleParameters.current.getText(); }
	EOF;

// Rule Parameters
ruleParameters returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='('
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0());
		}
		(
			{
				newCompositeNode(grammarAccess.getParametersAccess().getParameterListParserRuleCall_1_0());
			}
			this_ParameterList_1=ruleParameterList
			{
				$current.merge(this_ParameterList_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			(
				kw=','
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getParametersAccess().getCommaKeyword_1_1());
				}
			)?
		)?
		kw=')'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getParametersAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleParameterList
entryRuleParameterList returns [String current=null]:
	{ newCompositeNode(grammarAccess.getParameterListRule()); }
	iv_ruleParameterList=ruleParameterList
	{ $current=$iv_ruleParameterList.current.getText(); }
	EOF;

// Rule ParameterList
ruleParameterList returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getParameterListAccess().getParameterDeclParserRuleCall_0());
		}
		this_ParameterDecl_0=ruleParameterDecl
		{
			$current.merge(this_ParameterDecl_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw=','
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getParameterListAccess().getCommaKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getParameterListAccess().getParameterDeclParserRuleCall_1_1());
			}
			this_ParameterDecl_2=ruleParameterDecl
			{
				$current.merge(this_ParameterDecl_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)*
	)
;

// Entry rule entryRuleParameterDecl
entryRuleParameterDecl returns [String current=null]:
	{ newCompositeNode(grammarAccess.getParameterDeclRule()); }
	iv_ruleParameterDecl=ruleParameterDecl
	{ $current=$iv_ruleParameterDecl.current.getText(); }
	EOF;

// Rule ParameterDecl
ruleParameterDecl returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getParameterDeclAccess().getIdentifierListParserRuleCall_0());
			}
			this_IdentifierList_0=ruleIdentifierList
			{
				$current.merge(this_IdentifierList_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
		(
			kw='...'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1());
			}
		)?
		{
			newCompositeNode(grammarAccess.getParameterDeclAccess().getTypeParserRuleCall_2());
		}
		this_Type_2=ruleType
		{
			$current.merge(this_Type_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInterfaceType
entryRuleInterfaceType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceTypeRule()); }
	iv_ruleInterfaceType=ruleInterfaceType
	{ $current=$iv_ruleInterfaceType.current.getText(); }
	EOF;

// Rule InterfaceType
ruleInterfaceType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INTERFACE_0=RULE_INTERFACE
		{
			$current.merge(this_INTERFACE_0);
		}
		{
			newLeafNode(this_INTERFACE_0, grammarAccess.getInterfaceTypeAccess().getINTERFACETerminalRuleCall_0());
		}
		kw='{'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			{
				newCompositeNode(grammarAccess.getInterfaceTypeAccess().getMethodSpecParserRuleCall_2_0());
			}
			this_MethodSpec_2=ruleMethodSpec
			{
				$current.merge(this_MethodSpec_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=';'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getInterfaceTypeAccess().getSemicolonKeyword_2_1());
			}
		)*
		kw='}'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleMethodSpec
entryRuleMethodSpec returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMethodSpecRule()); }
	iv_ruleMethodSpec=ruleMethodSpec
	{ $current=$iv_ruleMethodSpec.current.getText(); }
	EOF;

// Rule MethodSpec
ruleMethodSpec returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getMethodSpecAccess().getMethodNameParserRuleCall_0_0());
			}
			this_MethodName_0=ruleMethodName
			{
				$current.merge(this_MethodName_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getMethodSpecAccess().getSignatureParserRuleCall_0_1());
			}
			this_Signature_1=ruleSignature
			{
				$current.merge(this_Signature_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getMethodSpecAccess().getInterfaceTypeNameParserRuleCall_1());
		}
		this_InterfaceTypeName_2=ruleInterfaceTypeName
		{
			$current.merge(this_InterfaceTypeName_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMethodName
entryRuleMethodName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMethodNameRule()); }
	iv_ruleMethodName=ruleMethodName
	{ $current=$iv_ruleMethodName.current.getText(); }
	EOF;

// Rule MethodName
ruleMethodName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_IDENTIFIER_0=RULE_IDENTIFIER
	{
		$current.merge(this_IDENTIFIER_0);
	}
	{
		newLeafNode(this_IDENTIFIER_0, grammarAccess.getMethodNameAccess().getIDENTIFIERTerminalRuleCall());
	}
;

// Entry rule entryRuleInterfaceTypeName
entryRuleInterfaceTypeName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceTypeNameRule()); }
	iv_ruleInterfaceTypeName=ruleInterfaceTypeName
	{ $current=$iv_ruleInterfaceTypeName.current.getText(); }
	EOF;

// Rule InterfaceTypeName
ruleInterfaceTypeName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getInterfaceTypeNameAccess().getTypeNameParserRuleCall());
	}
	this_TypeName_0=ruleTypeName
	{
		$current.merge(this_TypeName_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleMapType
entryRuleMapType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMapTypeRule()); }
	iv_ruleMapType=ruleMapType
	{ $current=$iv_ruleMapType.current.getText(); }
	EOF;

// Rule MapType
ruleMapType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_MAP_0=RULE_MAP
		{
			$current.merge(this_MAP_0);
		}
		{
			newLeafNode(this_MAP_0, grammarAccess.getMapTypeAccess().getMAPTerminalRuleCall_0());
		}
		kw='['
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getMapTypeAccess().getKeyTypeParserRuleCall_2());
		}
		this_KeyType_2=ruleKeyType
		{
			$current.merge(this_KeyType_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=']'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3());
		}
		{
			newCompositeNode(grammarAccess.getMapTypeAccess().getElementTypeParserRuleCall_4());
		}
		this_ElementType_4=ruleElementType
		{
			$current.merge(this_ElementType_4);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleKeyType
entryRuleKeyType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getKeyTypeRule()); }
	iv_ruleKeyType=ruleKeyType
	{ $current=$iv_ruleKeyType.current.getText(); }
	EOF;

// Rule KeyType
ruleKeyType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getKeyTypeAccess().getTypeParserRuleCall());
	}
	this_Type_0=ruleType
	{
		$current.merge(this_Type_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleChannelType
entryRuleChannelType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getChannelTypeRule()); }
	iv_ruleChannelType=ruleChannelType
	{ $current=$iv_ruleChannelType.current.getText(); }
	EOF;

// Rule ChannelType
ruleChannelType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				this_CHAN_0=RULE_CHAN
				{
					$current.merge(this_CHAN_0);
				}
				{
					newLeafNode(this_CHAN_0, grammarAccess.getChannelTypeAccess().getCHANTerminalRuleCall_0_0_0());
				}
				{
					newCompositeNode(grammarAccess.getChannelTypeAccess().getChannelTypeLinhaParserRuleCall_0_0_1());
				}
				this_ChannelTypeLinha_1=ruleChannelTypeLinha
				{
					$current.merge(this_ChannelTypeLinha_1);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				kw='<-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_0());
				}
				this_CHAN_3=RULE_CHAN
				{
					$current.merge(this_CHAN_3);
				}
				{
					newLeafNode(this_CHAN_3, grammarAccess.getChannelTypeAccess().getCHANTerminalRuleCall_0_1_1());
				}
			)
		)
		{
			newCompositeNode(grammarAccess.getChannelTypeAccess().getElementTypeParserRuleCall_1());
		}
		this_ElementType_4=ruleElementType
		{
			$current.merge(this_ElementType_4);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleChannelTypeLinha
entryRuleChannelTypeLinha returns [String current=null]:
	{ newCompositeNode(grammarAccess.getChannelTypeLinhaRule()); }
	iv_ruleChannelTypeLinha=ruleChannelTypeLinha
	{ $current=$iv_ruleChannelTypeLinha.current.getText(); }
	EOF;

// Rule ChannelTypeLinha
ruleChannelTypeLinha returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='<-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getChannelTypeLinhaAccess().getLessThanSignHyphenMinusKeyword_0());
		}
		    |
		this_ANY_OTHER_1=RULE_ANY_OTHER
		{
			$current.merge(this_ANY_OTHER_1);
		}
		{
			newLeafNode(this_ANY_OTHER_1, grammarAccess.getChannelTypeLinhaAccess().getANY_OTHERTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleBlock
entryRuleBlock returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	iv_ruleBlock=ruleBlock
	{ $current=$iv_ruleBlock.current.getText(); }
	EOF;

// Rule Block
ruleBlock returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='{'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getBlockAccess().getStatementListParserRuleCall_1());
		}
		this_StatementList_1=ruleStatementList
		{
			$current.merge(this_StatementList_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw='}'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleStatementList
entryRuleStatementList returns [String current=null]:
	{ newCompositeNode(grammarAccess.getStatementListRule()); }
	iv_ruleStatementList=ruleStatementList
	{ $current=$iv_ruleStatementList.current.getText(); }
	EOF;

// Rule StatementList
ruleStatementList returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStatementListAccess().getStatementParserRuleCall_0());
		}
		this_Statement_0=ruleStatement
		{
			$current.merge(this_Statement_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=';'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getStatementListAccess().getSemicolonKeyword_1());
		}
	)*
;

// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruleDeclaration=ruleDeclaration
	{ $current=$iv_ruleDeclaration.current.getText(); }
	EOF;

// Rule Declaration
ruleDeclaration returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getConstDeclParserRuleCall_0());
		}
		this_ConstDecl_0=ruleConstDecl
		{
			$current.merge(this_ConstDecl_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getTypeDeclParserRuleCall_1());
		}
		this_TypeDecl_1=ruleTypeDecl
		{
			$current.merge(this_TypeDecl_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getVarDeclParserRuleCall_2());
		}
		this_VarDecl_2=ruleVarDecl
		{
			$current.merge(this_VarDecl_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTopLevelDecl
entryRuleTopLevelDecl returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTopLevelDeclRule()); }
	iv_ruleTopLevelDecl=ruleTopLevelDecl
	{ $current=$iv_ruleTopLevelDecl.current.getText(); }
	EOF;

// Rule TopLevelDecl
ruleTopLevelDecl returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTopLevelDeclAccess().getDeclarationParserRuleCall_0());
		}
		this_Declaration_0=ruleDeclaration
		{
			$current.merge(this_Declaration_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTopLevelDeclAccess().getFunctionDeclParserRuleCall_1());
		}
		this_FunctionDecl_1=ruleFunctionDecl
		{
			$current.merge(this_FunctionDecl_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTopLevelDeclAccess().getMethodDeclParserRuleCall_2());
		}
		this_MethodDecl_2=ruleMethodDecl
		{
			$current.merge(this_MethodDecl_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConstDecl
entryRuleConstDecl returns [String current=null]:
	{ newCompositeNode(grammarAccess.getConstDeclRule()); }
	iv_ruleConstDecl=ruleConstDecl
	{ $current=$iv_ruleConstDecl.current.getText(); }
	EOF;

// Rule ConstDecl
ruleConstDecl returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_CONST_0=RULE_CONST
		{
			$current.merge(this_CONST_0);
		}
		{
			newLeafNode(this_CONST_0, grammarAccess.getConstDeclAccess().getCONSTTerminalRuleCall_0());
		}
		(
			{
				newCompositeNode(grammarAccess.getConstDeclAccess().getConstSpecParserRuleCall_1_0());
			}
			this_ConstSpec_1=ruleConstSpec
			{
				$current.merge(this_ConstSpec_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			(
				kw='('
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_1_1_0());
				}
				(
					{
						newCompositeNode(grammarAccess.getConstDeclAccess().getConstSpecParserRuleCall_1_1_1_0());
					}
					this_ConstSpec_3=ruleConstSpec
					{
						$current.merge(this_ConstSpec_3);
					}
					{
						afterParserOrEnumRuleCall();
					}
					kw=';'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getConstDeclAccess().getSemicolonKeyword_1_1_1_1());
					}
				)*
				kw=')'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_1_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleConstSpec
entryRuleConstSpec returns [String current=null]:
	{ newCompositeNode(grammarAccess.getConstSpecRule()); }
	iv_ruleConstSpec=ruleConstSpec
	{ $current=$iv_ruleConstSpec.current.getText(); }
	EOF;

// Rule ConstSpec
ruleConstSpec returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConstSpecAccess().getIdentifierListParserRuleCall_0());
		}
		this_IdentifierList_0=ruleIdentifierList
		{
			$current.merge(this_IdentifierList_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstSpecAccess().getTypeParserRuleCall_1_0());
				}
				this_Type_1=ruleType
				{
					$current.merge(this_Type_1);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)?
			kw='='
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getConstSpecAccess().getEqualsSignKeyword_1_1());
			}
			{
				newCompositeNode(grammarAccess.getConstSpecAccess().getExpressionListParserRuleCall_1_2());
			}
			this_ExpressionList_3=ruleExpressionList
			{
				$current.merge(this_ExpressionList_3);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRuleIdentifierList
entryRuleIdentifierList returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIdentifierListRule()); }
	iv_ruleIdentifierList=ruleIdentifierList
	{ $current=$iv_ruleIdentifierList.current.getText(); }
	EOF;

// Rule IdentifierList
ruleIdentifierList returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_IDENTIFIER_0=RULE_IDENTIFIER
		{
			$current.merge(this_IDENTIFIER_0);
		}
		{
			newLeafNode(this_IDENTIFIER_0, grammarAccess.getIdentifierListAccess().getIDENTIFIERTerminalRuleCall_0());
		}
		(
			kw=','
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getIdentifierListAccess().getCommaKeyword_1_0());
			}
			this_IDENTIFIER_2=RULE_IDENTIFIER
			{
				$current.merge(this_IDENTIFIER_2);
			}
			{
				newLeafNode(this_IDENTIFIER_2, grammarAccess.getIdentifierListAccess().getIDENTIFIERTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleExpressionList
entryRuleExpressionList returns [String current=null]:
	{ newCompositeNode(grammarAccess.getExpressionListRule()); }
	iv_ruleExpressionList=ruleExpressionList
	{ $current=$iv_ruleExpressionList.current.getText(); }
	EOF;

// Rule ExpressionList
ruleExpressionList returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionListAccess().getExpressionParserRuleCall_0());
		}
		this_Expression_0=ruleExpression
		{
			$current.merge(this_Expression_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw=','
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getExpressionListAccess().getCommaKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getExpressionListAccess().getExpressionParserRuleCall_1_1());
			}
			this_Expression_2=ruleExpression
			{
				$current.merge(this_Expression_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)*
	)
;

// Entry rule entryRuleTypeDecl
entryRuleTypeDecl returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeDeclRule()); }
	iv_ruleTypeDecl=ruleTypeDecl
	{ $current=$iv_ruleTypeDecl.current.getText(); }
	EOF;

// Rule TypeDecl
ruleTypeDecl returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_TYPEKEYWORD_0=RULE_TYPEKEYWORD
		{
			$current.merge(this_TYPEKEYWORD_0);
		}
		{
			newLeafNode(this_TYPEKEYWORD_0, grammarAccess.getTypeDeclAccess().getTYPEKEYWORDTerminalRuleCall_0());
		}
		(
			{
				newCompositeNode(grammarAccess.getTypeDeclAccess().getTypeSpecParserRuleCall_1_0());
			}
			this_TypeSpec_1=ruleTypeSpec
			{
				$current.merge(this_TypeSpec_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			(
				kw='('
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_1_1_0());
				}
				(
					{
						newCompositeNode(grammarAccess.getTypeDeclAccess().getTypeSpecParserRuleCall_1_1_1_0());
					}
					this_TypeSpec_3=ruleTypeSpec
					{
						$current.merge(this_TypeSpec_3);
					}
					{
						afterParserOrEnumRuleCall();
					}
					kw=';'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getTypeDeclAccess().getSemicolonKeyword_1_1_1_1());
					}
				)*
				kw=')'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_1_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleTypeSpec
entryRuleTypeSpec returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeSpecRule()); }
	iv_ruleTypeSpec=ruleTypeSpec
	{ $current=$iv_ruleTypeSpec.current.getText(); }
	EOF;

// Rule TypeSpec
ruleTypeSpec returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeSpecAccess().getAliasDeclParserRuleCall_0());
		}
		this_AliasDecl_0=ruleAliasDecl
		{
			$current.merge(this_AliasDecl_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeSpecAccess().getTypeDefParserRuleCall_1());
		}
		this_TypeDef_1=ruleTypeDef
		{
			$current.merge(this_TypeDef_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAliasDecl
entryRuleAliasDecl returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAliasDeclRule()); }
	iv_ruleAliasDecl=ruleAliasDecl
	{ $current=$iv_ruleAliasDecl.current.getText(); }
	EOF;

// Rule AliasDecl
ruleAliasDecl returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_IDENTIFIER_0=RULE_IDENTIFIER
		{
			$current.merge(this_IDENTIFIER_0);
		}
		{
			newLeafNode(this_IDENTIFIER_0, grammarAccess.getAliasDeclAccess().getIDENTIFIERTerminalRuleCall_0());
		}
		kw='='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getAliasDeclAccess().getTypeParserRuleCall_2());
		}
		this_Type_2=ruleType
		{
			$current.merge(this_Type_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTypeDef
entryRuleTypeDef returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeDefRule()); }
	iv_ruleTypeDef=ruleTypeDef
	{ $current=$iv_ruleTypeDef.current.getText(); }
	EOF;

// Rule TypeDef
ruleTypeDef returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_IDENTIFIER_0=RULE_IDENTIFIER
		{
			$current.merge(this_IDENTIFIER_0);
		}
		{
			newLeafNode(this_IDENTIFIER_0, grammarAccess.getTypeDefAccess().getIDENTIFIERTerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getTypeDefAccess().getTypeParserRuleCall_1());
		}
		this_Type_1=ruleType
		{
			$current.merge(this_Type_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleVarDecl
entryRuleVarDecl returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVarDeclRule()); }
	iv_ruleVarDecl=ruleVarDecl
	{ $current=$iv_ruleVarDecl.current.getText(); }
	EOF;

// Rule VarDecl
ruleVarDecl returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_VAR_0=RULE_VAR
		{
			$current.merge(this_VAR_0);
		}
		{
			newLeafNode(this_VAR_0, grammarAccess.getVarDeclAccess().getVARTerminalRuleCall_0());
		}
		(
			{
				newCompositeNode(grammarAccess.getVarDeclAccess().getVarSpecParserRuleCall_1_0());
			}
			this_VarSpec_1=ruleVarSpec
			{
				$current.merge(this_VarSpec_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			(
				kw='('
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_1_1_0());
				}
				(
					{
						newCompositeNode(grammarAccess.getVarDeclAccess().getVarSpecParserRuleCall_1_1_1_0());
					}
					this_VarSpec_3=ruleVarSpec
					{
						$current.merge(this_VarSpec_3);
					}
					{
						afterParserOrEnumRuleCall();
					}
					kw=';'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getVarDeclAccess().getSemicolonKeyword_1_1_1_1());
					}
				)*
				kw=')'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_1_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleVarSpec
entryRuleVarSpec returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVarSpecRule()); }
	iv_ruleVarSpec=ruleVarSpec
	{ $current=$iv_ruleVarSpec.current.getText(); }
	EOF;

// Rule VarSpec
ruleVarSpec returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getVarSpecAccess().getIdentifierListParserRuleCall_0());
		}
		this_IdentifierList_0=ruleIdentifierList
		{
			$current.merge(this_IdentifierList_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVarSpecAccess().getTypeParserRuleCall_1_0_0());
				}
				this_Type_1=ruleType
				{
					$current.merge(this_Type_1);
				}
				{
					afterParserOrEnumRuleCall();
				}
				(
					kw='='
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_0_1_0());
					}
					{
						newCompositeNode(grammarAccess.getVarSpecAccess().getExpressionListParserRuleCall_1_0_1_1());
					}
					this_ExpressionList_3=ruleExpressionList
					{
						$current.merge(this_ExpressionList_3);
					}
					{
						afterParserOrEnumRuleCall();
					}
				)?
			)
			    |
			(
				kw='='
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_1_0());
				}
				{
					newCompositeNode(grammarAccess.getVarSpecAccess().getExpressionListParserRuleCall_1_1_1());
				}
				this_ExpressionList_5=ruleExpressionList
				{
					$current.merge(this_ExpressionList_5);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleShortVarDecl
entryRuleShortVarDecl returns [String current=null]:
	{ newCompositeNode(grammarAccess.getShortVarDeclRule()); }
	iv_ruleShortVarDecl=ruleShortVarDecl
	{ $current=$iv_ruleShortVarDecl.current.getText(); }
	EOF;

// Rule ShortVarDecl
ruleShortVarDecl returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getShortVarDeclAccess().getIdentifierListParserRuleCall_0());
		}
		this_IdentifierList_0=ruleIdentifierList
		{
			$current.merge(this_IdentifierList_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=':='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getShortVarDeclAccess().getColonEqualsSignKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getShortVarDeclAccess().getExpressionListParserRuleCall_2());
		}
		this_ExpressionList_2=ruleExpressionList
		{
			$current.merge(this_ExpressionList_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFunctionDecl
entryRuleFunctionDecl returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFunctionDeclRule()); }
	iv_ruleFunctionDecl=ruleFunctionDecl
	{ $current=$iv_ruleFunctionDecl.current.getText(); }
	EOF;

// Rule FunctionDecl
ruleFunctionDecl returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_FUNC_0=RULE_FUNC
		{
			$current.merge(this_FUNC_0);
		}
		{
			newLeafNode(this_FUNC_0, grammarAccess.getFunctionDeclAccess().getFUNCTerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getFunctionDeclAccess().getFunctionNameParserRuleCall_1());
		}
		this_FunctionName_1=ruleFunctionName
		{
			$current.merge(this_FunctionName_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		{
			newCompositeNode(grammarAccess.getFunctionDeclAccess().getSignatureParserRuleCall_2());
		}
		this_Signature_2=ruleSignature
		{
			$current.merge(this_Signature_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			{
				newCompositeNode(grammarAccess.getFunctionDeclAccess().getFunctionBodyParserRuleCall_3());
			}
			this_FunctionBody_3=ruleFunctionBody
			{
				$current.merge(this_FunctionBody_3);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRuleFunctionName
entryRuleFunctionName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFunctionNameRule()); }
	iv_ruleFunctionName=ruleFunctionName
	{ $current=$iv_ruleFunctionName.current.getText(); }
	EOF;

// Rule FunctionName
ruleFunctionName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_IDENTIFIER_0=RULE_IDENTIFIER
	{
		$current.merge(this_IDENTIFIER_0);
	}
	{
		newLeafNode(this_IDENTIFIER_0, grammarAccess.getFunctionNameAccess().getIDENTIFIERTerminalRuleCall());
	}
;

// Entry rule entryRuleFunctionBody
entryRuleFunctionBody returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFunctionBodyRule()); }
	iv_ruleFunctionBody=ruleFunctionBody
	{ $current=$iv_ruleFunctionBody.current.getText(); }
	EOF;

// Rule FunctionBody
ruleFunctionBody returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getFunctionBodyAccess().getBlockParserRuleCall());
	}
	this_Block_0=ruleBlock
	{
		$current.merge(this_Block_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleMethodDecl
entryRuleMethodDecl returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMethodDeclRule()); }
	iv_ruleMethodDecl=ruleMethodDecl
	{ $current=$iv_ruleMethodDecl.current.getText(); }
	EOF;

// Rule MethodDecl
ruleMethodDecl returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_FUNC_0=RULE_FUNC
		{
			$current.merge(this_FUNC_0);
		}
		{
			newLeafNode(this_FUNC_0, grammarAccess.getMethodDeclAccess().getFUNCTerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getMethodDeclAccess().getReceiverParserRuleCall_1());
		}
		this_Receiver_1=ruleReceiver
		{
			$current.merge(this_Receiver_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		{
			newCompositeNode(grammarAccess.getMethodDeclAccess().getMethodNameParserRuleCall_2());
		}
		this_MethodName_2=ruleMethodName
		{
			$current.merge(this_MethodName_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		{
			newCompositeNode(grammarAccess.getMethodDeclAccess().getSignatureParserRuleCall_3());
		}
		this_Signature_3=ruleSignature
		{
			$current.merge(this_Signature_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			{
				newCompositeNode(grammarAccess.getMethodDeclAccess().getFunctionBodyParserRuleCall_4());
			}
			this_FunctionBody_4=ruleFunctionBody
			{
				$current.merge(this_FunctionBody_4);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRuleReceiver
entryRuleReceiver returns [String current=null]:
	{ newCompositeNode(grammarAccess.getReceiverRule()); }
	iv_ruleReceiver=ruleReceiver
	{ $current=$iv_ruleReceiver.current.getText(); }
	EOF;

// Rule Receiver
ruleReceiver returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getReceiverAccess().getParametersParserRuleCall());
	}
	this_Parameters_0=ruleParameters
	{
		$current.merge(this_Parameters_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current.getText(); }
	EOF;

// Rule Literal
ruleLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getBasicLitParserRuleCall_0());
		}
		this_BasicLit_0=ruleBasicLit
		{
			$current.merge(this_BasicLit_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getCompositeLitParserRuleCall_1());
		}
		this_CompositeLit_1=ruleCompositeLit
		{
			$current.merge(this_CompositeLit_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getFunctionLitParserRuleCall_2());
		}
		this_FunctionLit_2=ruleFunctionLit
		{
			$current.merge(this_FunctionLit_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBasicLit
entryRuleBasicLit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBasicLitRule()); }
	iv_ruleBasicLit=ruleBasicLit
	{ $current=$iv_ruleBasicLit.current.getText(); }
	EOF;

// Rule BasicLit
ruleBasicLit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_LIT_0=RULE_INT_LIT
		{
			$current.merge(this_INT_LIT_0);
		}
		{
			newLeafNode(this_INT_LIT_0, grammarAccess.getBasicLitAccess().getINT_LITTerminalRuleCall_0());
		}
		    |
		{
			newCompositeNode(grammarAccess.getBasicLitAccess().getFLOAT_LITParserRuleCall_1());
		}
		this_FLOAT_LIT_1=ruleFLOAT_LIT
		{
			$current.merge(this_FLOAT_LIT_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBasicLitAccess().getIMAGINARY_LITParserRuleCall_2());
		}
		this_IMAGINARY_LIT_2=ruleIMAGINARY_LIT
		{
			$current.merge(this_IMAGINARY_LIT_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_STRING_LIT_3=RULE_STRING_LIT
		{
			$current.merge(this_STRING_LIT_3);
		}
		{
			newLeafNode(this_STRING_LIT_3, grammarAccess.getBasicLitAccess().getSTRING_LITTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleOperandName
entryRuleOperandName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOperandNameRule()); }
	iv_ruleOperandName=ruleOperandName
	{ $current=$iv_ruleOperandName.current.getText(); }
	EOF;

// Rule OperandName
ruleOperandName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_IDENTIFIER_0=RULE_IDENTIFIER
		{
			$current.merge(this_IDENTIFIER_0);
		}
		{
			newLeafNode(this_IDENTIFIER_0, grammarAccess.getOperandNameAccess().getIDENTIFIERTerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getOperandNameAccess().getOperandNameLinhaParserRuleCall_1());
		}
		this_OperandNameLinha_1=ruleOperandNameLinha
		{
			$current.merge(this_OperandNameLinha_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOperandNameLinha
entryRuleOperandNameLinha returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOperandNameLinhaRule()); }
	iv_ruleOperandNameLinha=ruleOperandNameLinha
	{ $current=$iv_ruleOperandNameLinha.current.getText(); }
	EOF;

// Rule OperandNameLinha
ruleOperandNameLinha returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOperandNameLinhaAccess().getFullStopKeyword_0_0());
			}
			this_IDENTIFIER_1=RULE_IDENTIFIER
			{
				$current.merge(this_IDENTIFIER_1);
			}
			{
				newLeafNode(this_IDENTIFIER_1, grammarAccess.getOperandNameLinhaAccess().getIDENTIFIERTerminalRuleCall_0_1());
			}
		)
		    |
		this_ANY_OTHER_2=RULE_ANY_OTHER
		{
			$current.merge(this_ANY_OTHER_2);
		}
		{
			newLeafNode(this_ANY_OTHER_2, grammarAccess.getOperandNameLinhaAccess().getANY_OTHERTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleCompositeLit
entryRuleCompositeLit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCompositeLitRule()); }
	iv_ruleCompositeLit=ruleCompositeLit
	{ $current=$iv_ruleCompositeLit.current.getText(); }
	EOF;

// Rule CompositeLit
ruleCompositeLit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteralTypeParserRuleCall_0());
		}
		this_LiteralType_0=ruleLiteralType
		{
			$current.merge(this_LiteralType_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		{
			newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteralValueParserRuleCall_1());
		}
		this_LiteralValue_1=ruleLiteralValue
		{
			$current.merge(this_LiteralValue_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLiteralType
entryRuleLiteralType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLiteralTypeRule()); }
	iv_ruleLiteralType=ruleLiteralType
	{ $current=$iv_ruleLiteralType.current.getText(); }
	EOF;

// Rule LiteralType
ruleLiteralType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLiteralTypeAccess().getStructTypeParserRuleCall_0());
		}
		this_StructType_0=ruleStructType
		{
			$current.merge(this_StructType_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralTypeAccess().getMapTypeParserRuleCall_1());
		}
		this_MapType_1=ruleMapType
		{
			$current.merge(this_MapType_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeNameParserRuleCall_2());
		}
		this_TypeName_2=ruleTypeName
		{
			$current.merge(this_TypeName_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		(
			kw='['
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_3_0());
			}
			{
				newCompositeNode(grammarAccess.getLiteralTypeAccess().getLiteralTypeLinhaParserRuleCall_3_1());
			}
			this_LiteralTypeLinha_4=ruleLiteralTypeLinha
			{
				$current.merge(this_LiteralTypeLinha_4);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleLiteralTypeLinha
entryRuleLiteralTypeLinha returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLiteralTypeLinhaRule()); }
	iv_ruleLiteralTypeLinha=ruleLiteralTypeLinha
	{ $current=$iv_ruleLiteralTypeLinha.current.getText(); }
	EOF;

// Rule LiteralTypeLinha
ruleLiteralTypeLinha returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getLiteralTypeLinhaAccess().getArrayLengthParserRuleCall_0_0());
			}
			this_ArrayLength_0=ruleArrayLength
			{
				$current.merge(this_ArrayLength_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=']'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_0_1());
			}
			{
				newCompositeNode(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeParserRuleCall_0_2());
			}
			this_ElementType_2=ruleElementType
			{
				$current.merge(this_ElementType_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			kw='...'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getLiteralTypeLinhaAccess().getFullStopFullStopFullStopKeyword_1_0());
			}
			kw=']'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_1_1());
			}
			{
				newCompositeNode(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeParserRuleCall_1_2());
			}
			this_ElementType_5=ruleElementType
			{
				$current.merge(this_ElementType_5);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			kw=']'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_2_0());
			}
			{
				newCompositeNode(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeParserRuleCall_2_1());
			}
			this_ElementType_7=ruleElementType
			{
				$current.merge(this_ElementType_7);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleLiteralValue
entryRuleLiteralValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLiteralValueRule()); }
	iv_ruleLiteralValue=ruleLiteralValue
	{ $current=$iv_ruleLiteralValue.current.getText(); }
	EOF;

// Rule LiteralValue
ruleLiteralValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='{'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				((
					ruleKey
					':'
				)
				)=>
				{
					newCompositeNode(grammarAccess.getLiteralValueAccess().getElementListParserRuleCall_1_0());
				}
				this_ElementList_1=ruleElementList
				{
					$current.merge(this_ElementList_1);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)
			(
				kw=','
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getLiteralValueAccess().getCommaKeyword_1_1());
				}
			)?
		)?
		kw='}'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleElementList
entryRuleElementList returns [String current=null]:
	{ newCompositeNode(grammarAccess.getElementListRule()); }
	iv_ruleElementList=ruleElementList
	{ $current=$iv_ruleElementList.current.getText(); }
	EOF;

// Rule ElementList
ruleElementList returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				ruleKey
				':'
			)
			)=>
			{
				newCompositeNode(grammarAccess.getElementListAccess().getKeyedElementParserRuleCall_0());
			}
			this_KeyedElement_0=ruleKeyedElement
			{
				$current.merge(this_KeyedElement_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		(
			kw=','
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getElementListAccess().getCommaKeyword_1_0());
			}
			(
				((
					ruleKey
					':'
				)
				)=>
				{
					newCompositeNode(grammarAccess.getElementListAccess().getKeyedElementParserRuleCall_1_1());
				}
				this_KeyedElement_2=ruleKeyedElement
				{
					$current.merge(this_KeyedElement_2);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleKeyedElement
entryRuleKeyedElement returns [String current=null]:
	{ newCompositeNode(grammarAccess.getKeyedElementRule()); }
	iv_ruleKeyedElement=ruleKeyedElement
	{ $current=$iv_ruleKeyedElement.current.getText(); }
	EOF;

// Rule KeyedElement
ruleKeyedElement returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				ruleKey
				':'
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getKeyedElementAccess().getKeyParserRuleCall_0_0_0());
				}
				this_Key_0=ruleKey
				{
					$current.merge(this_Key_0);
				}
				{
					afterParserOrEnumRuleCall();
				}
				kw=':'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getKeyedElementAccess().getColonKeyword_0_0_1());
				}
			)
		)?
		{
			newCompositeNode(grammarAccess.getKeyedElementAccess().getElementParserRuleCall_1());
		}
		this_Element_2=ruleElement
		{
			$current.merge(this_Element_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleKey
entryRuleKey returns [String current=null]:
	{ newCompositeNode(grammarAccess.getKeyRule()); }
	iv_ruleKey=ruleKey
	{ $current=$iv_ruleKey.current.getText(); }
	EOF;

// Rule Key
ruleKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getKeyAccess().getFieldNameParserRuleCall_0());
		}
		this_FieldName_0=ruleFieldName
		{
			$current.merge(this_FieldName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeyAccess().getExpressionParserRuleCall_1());
		}
		this_Expression_1=ruleExpression
		{
			$current.merge(this_Expression_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeyAccess().getLiteralValueParserRuleCall_2());
		}
		this_LiteralValue_2=ruleLiteralValue
		{
			$current.merge(this_LiteralValue_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFieldName
entryRuleFieldName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFieldNameRule()); }
	iv_ruleFieldName=ruleFieldName
	{ $current=$iv_ruleFieldName.current.getText(); }
	EOF;

// Rule FieldName
ruleFieldName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_IDENTIFIER_0=RULE_IDENTIFIER
	{
		$current.merge(this_IDENTIFIER_0);
	}
	{
		newLeafNode(this_IDENTIFIER_0, grammarAccess.getFieldNameAccess().getIDENTIFIERTerminalRuleCall());
	}
;

// Entry rule entryRuleElement
entryRuleElement returns [String current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current.getText(); }
	EOF;

// Rule Element
ruleElement returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementAccess().getExpressionParserRuleCall_0());
		}
		this_Expression_0=ruleExpression
		{
			$current.merge(this_Expression_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getLiteralValueParserRuleCall_1());
		}
		this_LiteralValue_1=ruleLiteralValue
		{
			$current.merge(this_LiteralValue_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFunctionLit
entryRuleFunctionLit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFunctionLitRule()); }
	iv_ruleFunctionLit=ruleFunctionLit
	{ $current=$iv_ruleFunctionLit.current.getText(); }
	EOF;

// Rule FunctionLit
ruleFunctionLit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_FUNC_0=RULE_FUNC
		{
			$current.merge(this_FUNC_0);
		}
		{
			newLeafNode(this_FUNC_0, grammarAccess.getFunctionLitAccess().getFUNCTerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getFunctionLitAccess().getSignatureParserRuleCall_1());
		}
		this_Signature_1=ruleSignature
		{
			$current.merge(this_Signature_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		{
			newCompositeNode(grammarAccess.getFunctionLitAccess().getFunctionBodyParserRuleCall_2());
		}
		this_FunctionBody_2=ruleFunctionBody
		{
			$current.merge(this_FunctionBody_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrimaryExpr
entryRulePrimaryExpr returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExprRule()); }
	iv_rulePrimaryExpr=rulePrimaryExpr
	{ $current=$iv_rulePrimaryExpr.current.getText(); }
	EOF;

// Rule PrimaryExpr
rulePrimaryExpr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getBasicLitParserRuleCall_0_0());
			}
			this_BasicLit_0=ruleBasicLit
			{
				$current.merge(this_BasicLit_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaParserRuleCall_0_1());
			}
			this_PrimaryExprLinha_1=rulePrimaryExprLinha
			{
				$current.merge(this_PrimaryExprLinha_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getStructTypeParserRuleCall_1_0());
			}
			this_StructType_2=ruleStructType
			{
				$current.merge(this_StructType_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExpr4ParserRuleCall_1_1());
			}
			this_PrimaryExpr4_3=rulePrimaryExpr4
			{
				$current.merge(this_PrimaryExpr4_3);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaParserRuleCall_1_2());
			}
			this_PrimaryExprLinha_4=rulePrimaryExprLinha
			{
				$current.merge(this_PrimaryExprLinha_4);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getMapTypeParserRuleCall_2_0());
			}
			this_MapType_5=ruleMapType
			{
				$current.merge(this_MapType_5);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExpr4ParserRuleCall_2_1());
			}
			this_PrimaryExpr4_6=rulePrimaryExpr4
			{
				$current.merge(this_PrimaryExpr4_6);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaParserRuleCall_2_2());
			}
			this_PrimaryExprLinha_7=rulePrimaryExprLinha
			{
				$current.merge(this_PrimaryExprLinha_7);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			this_IDENTIFIER_8=RULE_IDENTIFIER
			{
				$current.merge(this_IDENTIFIER_8);
			}
			{
				newLeafNode(this_IDENTIFIER_8, grammarAccess.getPrimaryExprAccess().getIDENTIFIERTerminalRuleCall_3_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getTypeNameLinhaParserRuleCall_3_1());
			}
			this_TypeNameLinha_9=ruleTypeNameLinha
			{
				$current.merge(this_TypeNameLinha_9);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExpr5ParserRuleCall_3_2());
			}
			this_PrimaryExpr5_10=rulePrimaryExpr5
			{
				$current.merge(this_PrimaryExpr5_10);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaParserRuleCall_3_3());
			}
			this_PrimaryExprLinha_11=rulePrimaryExprLinha
			{
				$current.merge(this_PrimaryExprLinha_11);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			kw='['
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPrimaryExprAccess().getLeftSquareBracketKeyword_4_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExpr6ParserRuleCall_4_1());
			}
			this_PrimaryExpr6_13=rulePrimaryExpr6
			{
				$current.merge(this_PrimaryExpr6_13);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaParserRuleCall_4_2());
			}
			this_PrimaryExprLinha_14=rulePrimaryExprLinha
			{
				$current.merge(this_PrimaryExprLinha_14);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			this_FUNC_15=RULE_FUNC
			{
				$current.merge(this_FUNC_15);
			}
			{
				newLeafNode(this_FUNC_15, grammarAccess.getPrimaryExprAccess().getFUNCTerminalRuleCall_5_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getSignatureParserRuleCall_5_1());
			}
			this_Signature_16=ruleSignature
			{
				$current.merge(this_Signature_16);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExpr7ParserRuleCall_5_2());
			}
			this_PrimaryExpr7_17=rulePrimaryExpr7
			{
				$current.merge(this_PrimaryExpr7_17);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaParserRuleCall_5_3());
			}
			this_PrimaryExprLinha_18=rulePrimaryExprLinha
			{
				$current.merge(this_PrimaryExprLinha_18);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getPointerTypeParserRuleCall_6_0());
			}
			this_PointerType_19=rulePointerType
			{
				$current.merge(this_PointerType_19);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExpr1ParserRuleCall_6_1());
			}
			this_PrimaryExpr1_20=rulePrimaryExpr1
			{
				$current.merge(this_PrimaryExpr1_20);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaParserRuleCall_6_2());
			}
			this_PrimaryExprLinha_21=rulePrimaryExprLinha
			{
				$current.merge(this_PrimaryExprLinha_21);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getInterfaceTypeParserRuleCall_7_0());
			}
			this_InterfaceType_22=ruleInterfaceType
			{
				$current.merge(this_InterfaceType_22);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExpr1ParserRuleCall_7_1());
			}
			this_PrimaryExpr1_23=rulePrimaryExpr1
			{
				$current.merge(this_PrimaryExpr1_23);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaParserRuleCall_7_2());
			}
			this_PrimaryExprLinha_24=rulePrimaryExprLinha
			{
				$current.merge(this_PrimaryExprLinha_24);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getChannelTypeParserRuleCall_8_0());
			}
			this_ChannelType_25=ruleChannelType
			{
				$current.merge(this_ChannelType_25);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExpr1ParserRuleCall_8_1());
			}
			this_PrimaryExpr1_26=rulePrimaryExpr1
			{
				$current.merge(this_PrimaryExpr1_26);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaParserRuleCall_8_2());
			}
			this_PrimaryExprLinha_27=rulePrimaryExprLinha
			{
				$current.merge(this_PrimaryExprLinha_27);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			kw='('
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPrimaryExprAccess().getLeftParenthesisKeyword_9_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExpr3ParserRuleCall_9_1());
			}
			this_PrimaryExpr3_29=rulePrimaryExpr3
			{
				$current.merge(this_PrimaryExpr3_29);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaParserRuleCall_9_2());
			}
			this_PrimaryExprLinha_30=rulePrimaryExprLinha
			{
				$current.merge(this_PrimaryExprLinha_30);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulePrimaryExpr1
entryRulePrimaryExpr1 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExpr1Rule()); }
	iv_rulePrimaryExpr1=rulePrimaryExpr1
	{ $current=$iv_rulePrimaryExpr1.current.getText(); }
	EOF;

// Rule PrimaryExpr1
rulePrimaryExpr1 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='('
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPrimaryExpr1Access().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExpr1Access().getExpressionParserRuleCall_0_1());
			}
			this_Expression_1=ruleExpression
			{
				$current.merge(this_Expression_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			(
				kw=','
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getPrimaryExpr1Access().getCommaKeyword_0_2());
				}
			)?
			kw=')'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPrimaryExpr1Access().getRightParenthesisKeyword_0_3());
			}
		)
		    |
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPrimaryExpr1Access().getFullStopKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExpr1Access().getMethodNameParserRuleCall_1_1());
			}
			this_MethodName_5=ruleMethodName
			{
				$current.merge(this_MethodName_5);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulePrimaryExpr2
entryRulePrimaryExpr2 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExpr2Rule()); }
	iv_rulePrimaryExpr2=rulePrimaryExpr2
	{ $current=$iv_rulePrimaryExpr2.current.getText(); }
	EOF;

// Rule PrimaryExpr2
rulePrimaryExpr2 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimaryExpr2Access().getPrimaryExpr1ParserRuleCall_0());
		}
		this_PrimaryExpr1_0=rulePrimaryExpr1
		{
			$current.merge(this_PrimaryExpr1_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_ANY_OTHER_1=RULE_ANY_OTHER
		{
			$current.merge(this_ANY_OTHER_1);
		}
		{
			newLeafNode(this_ANY_OTHER_1, grammarAccess.getPrimaryExpr2Access().getANY_OTHERTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRulePrimaryExpr3
entryRulePrimaryExpr3 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExpr3Rule()); }
	iv_rulePrimaryExpr3=rulePrimaryExpr3
	{ $current=$iv_rulePrimaryExpr3.current.getText(); }
	EOF;

// Rule PrimaryExpr3
rulePrimaryExpr3 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(ruleExpression)=>
				{
					newCompositeNode(grammarAccess.getPrimaryExpr3Access().getExpressionParserRuleCall_0_0());
				}
				this_Expression_0=ruleExpression
				{
					$current.merge(this_Expression_0);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)
			kw=')'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPrimaryExpr3Access().getRightParenthesisKeyword_0_1());
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getPrimaryExpr3Access().getTypeParserRuleCall_1_0());
			}
			this_Type_2=ruleType
			{
				$current.merge(this_Type_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=')'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPrimaryExpr3Access().getRightParenthesisKeyword_1_1());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExpr3Access().getPrimaryExpr1ParserRuleCall_1_2());
			}
			this_PrimaryExpr1_4=rulePrimaryExpr1
			{
				$current.merge(this_PrimaryExpr1_4);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulePrimaryExpr4
entryRulePrimaryExpr4 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExpr4Rule()); }
	iv_rulePrimaryExpr4=rulePrimaryExpr4
	{ $current=$iv_rulePrimaryExpr4.current.getText(); }
	EOF;

// Rule PrimaryExpr4
rulePrimaryExpr4 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimaryExpr4Access().getLiteralValueParserRuleCall_0());
		}
		this_LiteralValue_0=ruleLiteralValue
		{
			$current.merge(this_LiteralValue_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpr4Access().getPrimaryExpr1ParserRuleCall_1());
		}
		this_PrimaryExpr1_1=rulePrimaryExpr1
		{
			$current.merge(this_PrimaryExpr1_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrimaryExpr5
entryRulePrimaryExpr5 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExpr5Rule()); }
	iv_rulePrimaryExpr5=rulePrimaryExpr5
	{ $current=$iv_rulePrimaryExpr5.current.getText(); }
	EOF;

// Rule PrimaryExpr5
rulePrimaryExpr5 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimaryExpr5Access().getLiteralValueParserRuleCall_0());
		}
		this_LiteralValue_0=ruleLiteralValue
		{
			$current.merge(this_LiteralValue_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpr5Access().getPrimaryExpr2ParserRuleCall_1());
		}
		this_PrimaryExpr2_1=rulePrimaryExpr2
		{
			$current.merge(this_PrimaryExpr2_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrimaryExpr6
entryRulePrimaryExpr6 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExpr6Rule()); }
	iv_rulePrimaryExpr6=rulePrimaryExpr6
	{ $current=$iv_rulePrimaryExpr6.current.getText(); }
	EOF;

// Rule PrimaryExpr6
rulePrimaryExpr6 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPrimaryExpr6Access().getArrayLengthParserRuleCall_0_0());
			}
			this_ArrayLength_0=ruleArrayLength
			{
				$current.merge(this_ArrayLength_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=']'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPrimaryExpr6Access().getRightSquareBracketKeyword_0_1());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExpr6Access().getElementTypeParserRuleCall_0_2());
			}
			this_ElementType_2=ruleElementType
			{
				$current.merge(this_ElementType_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExpr6Access().getPrimaryExpr4ParserRuleCall_0_3());
			}
			this_PrimaryExpr4_3=rulePrimaryExpr4
			{
				$current.merge(this_PrimaryExpr4_3);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			kw='...'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPrimaryExpr6Access().getFullStopFullStopFullStopKeyword_1_0());
			}
			kw=']'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPrimaryExpr6Access().getRightSquareBracketKeyword_1_1());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExpr6Access().getElementTypeParserRuleCall_1_2());
			}
			this_ElementType_6=ruleElementType
			{
				$current.merge(this_ElementType_6);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExpr6Access().getLiteralValueParserRuleCall_1_3());
			}
			this_LiteralValue_7=ruleLiteralValue
			{
				$current.merge(this_LiteralValue_7);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			kw=']'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPrimaryExpr6Access().getRightSquareBracketKeyword_2_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExpr6Access().getElementTypeParserRuleCall_2_1());
			}
			this_ElementType_9=ruleElementType
			{
				$current.merge(this_ElementType_9);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExpr6Access().getPrimaryExpr4ParserRuleCall_2_2());
			}
			this_PrimaryExpr4_10=rulePrimaryExpr4
			{
				$current.merge(this_PrimaryExpr4_10);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulePrimaryExpr7
entryRulePrimaryExpr7 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExpr7Rule()); }
	iv_rulePrimaryExpr7=rulePrimaryExpr7
	{ $current=$iv_rulePrimaryExpr7.current.getText(); }
	EOF;

// Rule PrimaryExpr7
rulePrimaryExpr7 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimaryExpr7Access().getFunctionBodyParserRuleCall_0());
		}
		this_FunctionBody_0=ruleFunctionBody
		{
			$current.merge(this_FunctionBody_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpr7Access().getPrimaryExpr1ParserRuleCall_1());
		}
		this_PrimaryExpr1_1=rulePrimaryExpr1
		{
			$current.merge(this_PrimaryExpr1_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrimaryExprLinha
entryRulePrimaryExprLinha returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExprLinhaRule()); }
	iv_rulePrimaryExprLinha=rulePrimaryExprLinha
	{ $current=$iv_rulePrimaryExprLinha.current.getText(); }
	EOF;

// Rule PrimaryExprLinha
rulePrimaryExprLinha returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPrimaryExprLinhaAccess().getFullStopKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinha1ParserRuleCall_0_1());
			}
			this_PrimaryExprLinha1_1=rulePrimaryExprLinha1
			{
				$current.merge(this_PrimaryExprLinha1_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaParserRuleCall_0_2());
			}
			this_PrimaryExprLinha_2=rulePrimaryExprLinha
			{
				$current.merge(this_PrimaryExprLinha_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			kw='['
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPrimaryExprLinhaAccess().getLeftSquareBracketKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinha2ParserRuleCall_1_1());
			}
			this_PrimaryExprLinha2_4=rulePrimaryExprLinha2
			{
				$current.merge(this_PrimaryExprLinha2_4);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaParserRuleCall_1_2());
			}
			this_PrimaryExprLinha_5=rulePrimaryExprLinha
			{
				$current.merge(this_PrimaryExprLinha_5);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getArgumentsParserRuleCall_2_0());
			}
			this_Arguments_6=ruleArguments
			{
				$current.merge(this_Arguments_6);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaParserRuleCall_2_1());
			}
			this_PrimaryExprLinha_7=rulePrimaryExprLinha
			{
				$current.merge(this_PrimaryExprLinha_7);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulePrimaryExprLinha1
entryRulePrimaryExprLinha1 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExprLinha1Rule()); }
	iv_rulePrimaryExprLinha1=rulePrimaryExprLinha1
	{ $current=$iv_rulePrimaryExprLinha1.current.getText(); }
	EOF;

// Rule PrimaryExprLinha1
rulePrimaryExprLinha1 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_IDENTIFIER_0=RULE_IDENTIFIER
		{
			$current.merge(this_IDENTIFIER_0);
		}
		{
			newLeafNode(this_IDENTIFIER_0, grammarAccess.getPrimaryExprLinha1Access().getIDENTIFIERTerminalRuleCall_0());
		}
		    |
		(
			kw='('
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPrimaryExprLinha1Access().getLeftParenthesisKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprLinha1Access().getTypeParserRuleCall_1_1());
			}
			this_Type_2=ruleType
			{
				$current.merge(this_Type_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=')'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPrimaryExprLinha1Access().getRightParenthesisKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRulePrimaryExprLinha2
entryRulePrimaryExprLinha2 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExprLinha2Rule()); }
	iv_rulePrimaryExprLinha2=rulePrimaryExprLinha2
	{ $current=$iv_rulePrimaryExprLinha2.current.getText(); }
	EOF;

// Rule PrimaryExprLinha2
rulePrimaryExprLinha2 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPrimaryExprLinha2Access().getExpressionParserRuleCall_0_0());
			}
			this_Expression_0=ruleExpression
			{
				$current.merge(this_Expression_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprLinha2Access().getPrimaryExprLinha21ParserRuleCall_0_1());
			}
			this_PrimaryExprLinha21_1=rulePrimaryExprLinha21
			{
				$current.merge(this_PrimaryExprLinha21_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			kw=':'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPrimaryExprLinha2Access().getColonKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprLinha2Access().getPrimaryExprLinha22ParserRuleCall_1_1());
			}
			this_PrimaryExprLinha22_3=rulePrimaryExprLinha22
			{
				$current.merge(this_PrimaryExprLinha22_3);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulePrimaryExprLinha21
entryRulePrimaryExprLinha21 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExprLinha21Rule()); }
	iv_rulePrimaryExprLinha21=rulePrimaryExprLinha21
	{ $current=$iv_rulePrimaryExprLinha21.current.getText(); }
	EOF;

// Rule PrimaryExprLinha21
rulePrimaryExprLinha21 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=']'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrimaryExprLinha21Access().getRightSquareBracketKeyword_0());
		}
		    |
		(
			kw=':'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPrimaryExprLinha21Access().getColonKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprLinha21Access().getPrimaryExprLinha211ParserRuleCall_1_1());
			}
			this_PrimaryExprLinha211_2=rulePrimaryExprLinha211
			{
				$current.merge(this_PrimaryExprLinha211_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulePrimaryExprLinha211
entryRulePrimaryExprLinha211 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExprLinha211Rule()); }
	iv_rulePrimaryExprLinha211=rulePrimaryExprLinha211
	{ $current=$iv_rulePrimaryExprLinha211.current.getText(); }
	EOF;

// Rule PrimaryExprLinha211
rulePrimaryExprLinha211 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPrimaryExprLinha211Access().getExpressionParserRuleCall_0_0());
			}
			this_Expression_0=ruleExpression
			{
				$current.merge(this_Expression_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprLinha211Access().getPrimaryExprLinha2111ParserRuleCall_0_1());
			}
			this_PrimaryExprLinha2111_1=rulePrimaryExprLinha2111
			{
				$current.merge(this_PrimaryExprLinha2111_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		kw=']'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrimaryExprLinha211Access().getRightSquareBracketKeyword_1());
		}
	)
;

// Entry rule entryRulePrimaryExprLinha2111
entryRulePrimaryExprLinha2111 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExprLinha2111Rule()); }
	iv_rulePrimaryExprLinha2111=rulePrimaryExprLinha2111
	{ $current=$iv_rulePrimaryExprLinha2111.current.getText(); }
	EOF;

// Rule PrimaryExprLinha2111
rulePrimaryExprLinha2111 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=']'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrimaryExprLinha2111Access().getRightSquareBracketKeyword_0());
		}
		    |
		(
			kw=':'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPrimaryExprLinha2111Access().getColonKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprLinha2111Access().getExpressionParserRuleCall_1_1());
			}
			this_Expression_2=ruleExpression
			{
				$current.merge(this_Expression_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=']'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPrimaryExprLinha2111Access().getRightSquareBracketKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRulePrimaryExprLinha22
entryRulePrimaryExprLinha22 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExprLinha22Rule()); }
	iv_rulePrimaryExprLinha22=rulePrimaryExprLinha22
	{ $current=$iv_rulePrimaryExprLinha22.current.getText(); }
	EOF;

// Rule PrimaryExprLinha22
rulePrimaryExprLinha22 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPrimaryExprLinha22Access().getExpressionParserRuleCall_0_0());
			}
			this_Expression_0=ruleExpression
			{
				$current.merge(this_Expression_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprLinha22Access().getPrimaryExprLinha221ParserRuleCall_0_1());
			}
			this_PrimaryExprLinha221_1=rulePrimaryExprLinha221
			{
				$current.merge(this_PrimaryExprLinha221_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		kw=']'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrimaryExprLinha22Access().getRightSquareBracketKeyword_1());
		}
	)
;

// Entry rule entryRulePrimaryExprLinha221
entryRulePrimaryExprLinha221 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExprLinha221Rule()); }
	iv_rulePrimaryExprLinha221=rulePrimaryExprLinha221
	{ $current=$iv_rulePrimaryExprLinha221.current.getText(); }
	EOF;

// Rule PrimaryExprLinha221
rulePrimaryExprLinha221 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=']'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrimaryExprLinha221Access().getRightSquareBracketKeyword_0());
		}
		    |
		(
			kw=':'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPrimaryExprLinha221Access().getColonKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprLinha221Access().getExpressionParserRuleCall_1_1());
			}
			this_Expression_2=ruleExpression
			{
				$current.merge(this_Expression_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=']'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPrimaryExprLinha221Access().getRightSquareBracketKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleArguments
entryRuleArguments returns [String current=null]:
	{ newCompositeNode(grammarAccess.getArgumentsRule()); }
	iv_ruleArguments=ruleArguments
	{ $current=$iv_ruleArguments.current.getText(); }
	EOF;

// Rule Arguments
ruleArguments returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='('
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				(
					(ruleExpressionList)=>
					{
						newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListParserRuleCall_1_0_0());
					}
					this_ExpressionList_1=ruleExpressionList
					{
						$current.merge(this_ExpressionList_1);
					}
					{
						afterParserOrEnumRuleCall();
					}
				)
				    |
				(
					{
						newCompositeNode(grammarAccess.getArgumentsAccess().getTypeParserRuleCall_1_0_1_0());
					}
					this_Type_2=ruleType
					{
						$current.merge(this_Type_2);
					}
					{
						afterParserOrEnumRuleCall();
					}
					(
						kw=','
						{
							$current.merge(kw);
							newLeafNode(kw, grammarAccess.getArgumentsAccess().getCommaKeyword_1_0_1_1_0());
						}
						{
							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListParserRuleCall_1_0_1_1_1());
						}
						this_ExpressionList_4=ruleExpressionList
						{
							$current.merge(this_ExpressionList_4);
						}
						{
							afterParserOrEnumRuleCall();
						}
					)?
				)
			)
			(
				kw='...'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_1_1());
				}
			)?
			(
				kw=','
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getArgumentsAccess().getCommaKeyword_1_2());
				}
			)?
		)?
		kw=')'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleReceiverType
entryRuleReceiverType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getReceiverTypeRule()); }
	iv_ruleReceiverType=ruleReceiverType
	{ $current=$iv_ruleReceiverType.current.getText(); }
	EOF;

// Rule ReceiverType
ruleReceiverType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getReceiverTypeAccess().getTypeParserRuleCall());
	}
	this_Type_0=ruleType
	{
		$current.merge(this_Type_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleExpression
entryRuleExpression returns [String current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current.getText(); }
	EOF;

// Rule Expression
ruleExpression returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getUnaryExprParserRuleCall_0());
		}
		this_UnaryExpr_0=ruleUnaryExpr
		{
			$current.merge(this_UnaryExpr_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getExpression_LinhaParserRuleCall_1());
		}
		this_Expression_Linha_1=ruleExpression_Linha
		{
			$current.merge(this_Expression_Linha_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExpression_Linha
entryRuleExpression_Linha returns [String current=null]:
	{ newCompositeNode(grammarAccess.getExpression_LinhaRule()); }
	iv_ruleExpression_Linha=ruleExpression_Linha
	{ $current=$iv_ruleExpression_Linha.current.getText(); }
	EOF;

// Rule Expression_Linha
ruleExpression_Linha returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getExpression_LinhaAccess().getBINARY_OPParserRuleCall_0_0());
			}
			this_BINARY_OP_0=ruleBINARY_OP
			{
				$current.merge(this_BINARY_OP_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getExpression_LinhaAccess().getExpressionParserRuleCall_0_1());
			}
			this_Expression_1=ruleExpression
			{
				$current.merge(this_Expression_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getExpression_LinhaAccess().getExpression_LinhaParserRuleCall_0_2());
			}
			this_Expression_Linha_2=ruleExpression_Linha
			{
				$current.merge(this_Expression_Linha_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		this_ANY_OTHER_3=RULE_ANY_OTHER
		{
			$current.merge(this_ANY_OTHER_3);
		}
		{
			newLeafNode(this_ANY_OTHER_3, grammarAccess.getExpression_LinhaAccess().getANY_OTHERTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUnaryExprRule()); }
	iv_ruleUnaryExpr=ruleUnaryExpr
	{ $current=$iv_ruleUnaryExpr.current.getText(); }
	EOF;

// Rule UnaryExpr
ruleUnaryExpr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnaryExprAccess().getPrimaryExprParserRuleCall_0());
		}
		this_PrimaryExpr_0=rulePrimaryExpr
		{
			$current.merge(this_PrimaryExpr_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		(
			this_UNARY_OP_1=RULE_UNARY_OP
			{
				$current.merge(this_UNARY_OP_1);
			}
			{
				newLeafNode(this_UNARY_OP_1, grammarAccess.getUnaryExprAccess().getUNARY_OPTerminalRuleCall_1_0());
			}
			{
				newCompositeNode(grammarAccess.getUnaryExprAccess().getUnaryExprParserRuleCall_1_1());
			}
			this_UnaryExpr_2=ruleUnaryExpr
			{
				$current.merge(this_UnaryExpr_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleBINARY_OP
entryRuleBINARY_OP returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBINARY_OPRule()); }
	iv_ruleBINARY_OP=ruleBINARY_OP
	{ $current=$iv_ruleBINARY_OP.current.getText(); }
	EOF;

// Rule BINARY_OP
ruleBINARY_OP returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='||'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBINARY_OPAccess().getVerticalLineVerticalLineKeyword_0());
		}
		    |
		kw='&&'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBINARY_OPAccess().getAmpersandAmpersandKeyword_1());
		}
		    |
		this_REL_OP_2=RULE_REL_OP
		{
			$current.merge(this_REL_OP_2);
		}
		{
			newLeafNode(this_REL_OP_2, grammarAccess.getBINARY_OPAccess().getREL_OPTerminalRuleCall_2());
		}
		    |
		this_ADD_OP_3=RULE_ADD_OP
		{
			$current.merge(this_ADD_OP_3);
		}
		{
			newLeafNode(this_ADD_OP_3, grammarAccess.getBINARY_OPAccess().getADD_OPTerminalRuleCall_3());
		}
		    |
		this_MUL_OP_4=RULE_MUL_OP
		{
			$current.merge(this_MUL_OP_4);
		}
		{
			newLeafNode(this_MUL_OP_4, grammarAccess.getBINARY_OPAccess().getMUL_OPTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [String current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current.getText(); }
	EOF;

// Rule Statement
ruleStatement returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStatementAccess().getDeclarationParserRuleCall_0());
		}
		this_Declaration_0=ruleDeclaration
		{
			$current.merge(this_Declaration_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getLabeledStmtParserRuleCall_1());
		}
		this_LabeledStmt_1=ruleLabeledStmt
		{
			$current.merge(this_LabeledStmt_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getSimpleStmtParserRuleCall_2());
		}
		this_SimpleStmt_2=ruleSimpleStmt
		{
			$current.merge(this_SimpleStmt_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getGoStmtParserRuleCall_3());
		}
		this_GoStmt_3=ruleGoStmt
		{
			$current.merge(this_GoStmt_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getReturnStmtParserRuleCall_4());
		}
		this_ReturnStmt_4=ruleReturnStmt
		{
			$current.merge(this_ReturnStmt_4);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getBreakStmtParserRuleCall_5());
		}
		this_BreakStmt_5=ruleBreakStmt
		{
			$current.merge(this_BreakStmt_5);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getContinueStmtParserRuleCall_6());
		}
		this_ContinueStmt_6=ruleContinueStmt
		{
			$current.merge(this_ContinueStmt_6);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getGotoStmtParserRuleCall_7());
		}
		this_GotoStmt_7=ruleGotoStmt
		{
			$current.merge(this_GotoStmt_7);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getFallthroughStmtParserRuleCall_8());
		}
		this_FallthroughStmt_8=ruleFallthroughStmt
		{
			$current.merge(this_FallthroughStmt_8);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getBlockParserRuleCall_9());
		}
		this_Block_9=ruleBlock
		{
			$current.merge(this_Block_9);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getIfStmtParserRuleCall_10());
		}
		this_IfStmt_10=ruleIfStmt
		{
			$current.merge(this_IfStmt_10);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getSwitchStmtParserRuleCall_11());
		}
		this_SwitchStmt_11=ruleSwitchStmt
		{
			$current.merge(this_SwitchStmt_11);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getSelectStmtParserRuleCall_12());
		}
		this_SelectStmt_12=ruleSelectStmt
		{
			$current.merge(this_SelectStmt_12);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getForStmtParserRuleCall_13());
		}
		this_ForStmt_13=ruleForStmt
		{
			$current.merge(this_ForStmt_13);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getDeferStmtParserRuleCall_14());
		}
		this_DeferStmt_14=ruleDeferStmt
		{
			$current.merge(this_DeferStmt_14);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimpleStmt
entryRuleSimpleStmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSimpleStmtRule()); }
	iv_ruleSimpleStmt=ruleSimpleStmt
	{ $current=$iv_ruleSimpleStmt.current.getText(); }
	EOF;

// Rule SimpleStmt
ruleSimpleStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSimpleStmtAccess().getEmptyStmtParserRuleCall_0());
		}
		this_EmptyStmt_0=ruleEmptyStmt
		{
			$current.merge(this_EmptyStmt_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		(
			{
				newCompositeNode(grammarAccess.getSimpleStmtAccess().getExpressionParserRuleCall_1_0());
			}
			this_Expression_1=ruleExpression
			{
				$current.merge(this_Expression_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getSimpleStmtAccess().getSimpleStmtLinhaParserRuleCall_1_1());
			}
			this_SimpleStmtLinha_2=ruleSimpleStmtLinha
			{
				$current.merge(this_SimpleStmtLinha_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getSimpleStmtAccess().getShortVarDeclParserRuleCall_2());
		}
		this_ShortVarDecl_3=ruleShortVarDecl
		{
			$current.merge(this_ShortVarDecl_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimpleStmtLinha
entryRuleSimpleStmtLinha returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSimpleStmtLinhaRule()); }
	iv_ruleSimpleStmtLinha=ruleSimpleStmtLinha
	{ $current=$iv_ruleSimpleStmtLinha.current.getText(); }
	EOF;

// Rule SimpleStmtLinha
ruleSimpleStmtLinha returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='<-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSimpleStmtLinhaAccess().getLessThanSignHyphenMinusKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getSimpleStmtLinhaAccess().getExpressionParserRuleCall_0_1());
			}
			this_Expression_1=ruleExpression
			{
				$current.merge(this_Expression_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			kw='++'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSimpleStmtLinhaAccess().getPlusSignPlusSignKeyword_1_0());
			}
			    |
			kw='--'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSimpleStmtLinhaAccess().getHyphenMinusHyphenMinusKeyword_1_1());
			}
		)
		    |
		(
			(
				kw=','
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getSimpleStmtLinhaAccess().getCommaKeyword_2_0_0());
				}
				{
					newCompositeNode(grammarAccess.getSimpleStmtLinhaAccess().getExpressionParserRuleCall_2_0_1());
				}
				this_Expression_5=ruleExpression
				{
					$current.merge(this_Expression_5);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)*
			{
				newCompositeNode(grammarAccess.getSimpleStmtLinhaAccess().getAssign_opParserRuleCall_2_1());
			}
			this_assign_op_6=ruleassign_op
			{
				$current.merge(this_assign_op_6);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getSimpleStmtLinhaAccess().getExpressionListParserRuleCall_2_2());
			}
			this_ExpressionList_7=ruleExpressionList
			{
				$current.merge(this_ExpressionList_7);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		this_ANY_OTHER_8=RULE_ANY_OTHER
		{
			$current.merge(this_ANY_OTHER_8);
		}
		{
			newLeafNode(this_ANY_OTHER_8, grammarAccess.getSimpleStmtLinhaAccess().getANY_OTHERTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleEmptyStmt
entryRuleEmptyStmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEmptyStmtRule()); }
	iv_ruleEmptyStmt=ruleEmptyStmt
	{ $current=$iv_ruleEmptyStmt.current.getText(); }
	EOF;

// Rule EmptyStmt
ruleEmptyStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ANY_OTHER_0=RULE_ANY_OTHER
	{
		$current.merge(this_ANY_OTHER_0);
	}
	{
		newLeafNode(this_ANY_OTHER_0, grammarAccess.getEmptyStmtAccess().getANY_OTHERTerminalRuleCall());
	}
;

// Entry rule entryRuleLabeledStmt
entryRuleLabeledStmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLabeledStmtRule()); }
	iv_ruleLabeledStmt=ruleLabeledStmt
	{ $current=$iv_ruleLabeledStmt.current.getText(); }
	EOF;

// Rule LabeledStmt
ruleLabeledStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLabeledStmtAccess().getLabelParserRuleCall_0());
		}
		this_Label_0=ruleLabel
		{
			$current.merge(this_Label_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLabeledStmtAccess().getColonKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getLabeledStmtAccess().getStatementParserRuleCall_2());
		}
		this_Statement_2=ruleStatement
		{
			$current.merge(this_Statement_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLabel
entryRuleLabel returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLabelRule()); }
	iv_ruleLabel=ruleLabel
	{ $current=$iv_ruleLabel.current.getText(); }
	EOF;

// Rule Label
ruleLabel returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_IDENTIFIER_0=RULE_IDENTIFIER
	{
		$current.merge(this_IDENTIFIER_0);
	}
	{
		newLeafNode(this_IDENTIFIER_0, grammarAccess.getLabelAccess().getIDENTIFIERTerminalRuleCall());
	}
;

// Entry rule entryRuleassign_op
entryRuleassign_op returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAssign_opRule()); }
	iv_ruleassign_op=ruleassign_op
	{ $current=$iv_ruleassign_op.current.getText(); }
	EOF;

// Rule assign_op
ruleassign_op returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_ADD_OP_0=RULE_ADD_OP
			{
				$current.merge(this_ADD_OP_0);
			}
			{
				newLeafNode(this_ADD_OP_0, grammarAccess.getAssign_opAccess().getADD_OPTerminalRuleCall_0_0());
			}
			    |
			this_MUL_OP_1=RULE_MUL_OP
			{
				$current.merge(this_MUL_OP_1);
			}
			{
				newLeafNode(this_MUL_OP_1, grammarAccess.getAssign_opAccess().getMUL_OPTerminalRuleCall_0_1());
			}
		)?
		kw='='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAssign_opAccess().getEqualsSignKeyword_1());
		}
	)
;

// Entry rule entryRuleIfStmt
entryRuleIfStmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIfStmtRule()); }
	iv_ruleIfStmt=ruleIfStmt
	{ $current=$iv_ruleIfStmt.current.getText(); }
	EOF;

// Rule IfStmt
ruleIfStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_IF_0=RULE_IF
			{
				$current.merge(this_IF_0);
			}
			{
				newLeafNode(this_IF_0, grammarAccess.getIfStmtAccess().getIFTerminalRuleCall_0_0());
			}
			{
				newCompositeNode(grammarAccess.getIfStmtAccess().getExpressionParserRuleCall_0_1());
			}
			this_Expression_1=ruleExpression
			{
				$current.merge(this_Expression_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getIfStmtAccess().getIfStmtLinhaParserRuleCall_0_2());
			}
			this_IfStmtLinha_2=ruleIfStmtLinha
			{
				$current.merge(this_IfStmtLinha_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			this_IF_3=RULE_IF
			{
				$current.merge(this_IF_3);
			}
			{
				newLeafNode(this_IF_3, grammarAccess.getIfStmtAccess().getIFTerminalRuleCall_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStmtAccess().getEmptyStmtParserRuleCall_1_1_0_0());
					}
					this_EmptyStmt_4=ruleEmptyStmt
					{
						$current.merge(this_EmptyStmt_4);
					}
					{
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getIfStmtAccess().getShortVarDeclParserRuleCall_1_1_0_1());
					}
					this_ShortVarDecl_5=ruleShortVarDecl
					{
						$current.merge(this_ShortVarDecl_5);
					}
					{
						afterParserOrEnumRuleCall();
					}
				)
				kw=';'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getIfStmtAccess().getSemicolonKeyword_1_1_1());
				}
			)
			{
				newCompositeNode(grammarAccess.getIfStmtAccess().getExpressionParserRuleCall_1_2());
			}
			this_Expression_7=ruleExpression
			{
				$current.merge(this_Expression_7);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getIfStmtAccess().getBlockParserRuleCall_1_3());
			}
			this_Block_8=ruleBlock
			{
				$current.merge(this_Block_8);
			}
			{
				afterParserOrEnumRuleCall();
			}
			(
				this_ELSE_9=RULE_ELSE
				{
					$current.merge(this_ELSE_9);
				}
				{
					newLeafNode(this_ELSE_9, grammarAccess.getIfStmtAccess().getELSETerminalRuleCall_1_4_0());
				}
				(
					{
						newCompositeNode(grammarAccess.getIfStmtAccess().getIfStmtParserRuleCall_1_4_1_0());
					}
					this_IfStmt_10=ruleIfStmt
					{
						$current.merge(this_IfStmt_10);
					}
					{
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getIfStmtAccess().getBlockParserRuleCall_1_4_1_1());
					}
					this_Block_11=ruleBlock
					{
						$current.merge(this_Block_11);
					}
					{
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
	)
;

// Entry rule entryRuleIfStmtLinha
entryRuleIfStmtLinha returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIfStmtLinhaRule()); }
	iv_ruleIfStmtLinha=ruleIfStmtLinha
	{ $current=$iv_ruleIfStmtLinha.current.getText(); }
	EOF;

// Rule IfStmtLinha
ruleIfStmtLinha returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getIfStmtLinhaAccess().getSimpleStmtLinhaParserRuleCall_0_0());
			}
			this_SimpleStmtLinha_0=ruleSimpleStmtLinha
			{
				$current.merge(this_SimpleStmtLinha_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=';'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getIfStmtLinhaAccess().getSemicolonKeyword_0_1());
			}
			{
				newCompositeNode(grammarAccess.getIfStmtLinhaAccess().getExpressionParserRuleCall_0_2());
			}
			this_Expression_2=ruleExpression
			{
				$current.merge(this_Expression_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getIfStmtLinhaAccess().getBlockParserRuleCall_0_3());
			}
			this_Block_3=ruleBlock
			{
				$current.merge(this_Block_3);
			}
			{
				afterParserOrEnumRuleCall();
			}
			(
				this_ELSE_4=RULE_ELSE
				{
					$current.merge(this_ELSE_4);
				}
				{
					newLeafNode(this_ELSE_4, grammarAccess.getIfStmtLinhaAccess().getELSETerminalRuleCall_0_4_0());
				}
				(
					{
						newCompositeNode(grammarAccess.getIfStmtLinhaAccess().getIfStmtParserRuleCall_0_4_1_0());
					}
					this_IfStmt_5=ruleIfStmt
					{
						$current.merge(this_IfStmt_5);
					}
					{
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getIfStmtLinhaAccess().getBlockParserRuleCall_0_4_1_1());
					}
					this_Block_6=ruleBlock
					{
						$current.merge(this_Block_6);
					}
					{
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getIfStmtLinhaAccess().getBlockParserRuleCall_1_0());
			}
			this_Block_7=ruleBlock
			{
				$current.merge(this_Block_7);
			}
			{
				afterParserOrEnumRuleCall();
			}
			(
				this_ELSE_8=RULE_ELSE
				{
					$current.merge(this_ELSE_8);
				}
				{
					newLeafNode(this_ELSE_8, grammarAccess.getIfStmtLinhaAccess().getELSETerminalRuleCall_1_1_0());
				}
				(
					{
						newCompositeNode(grammarAccess.getIfStmtLinhaAccess().getIfStmtParserRuleCall_1_1_1_0());
					}
					this_IfStmt_9=ruleIfStmt
					{
						$current.merge(this_IfStmt_9);
					}
					{
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getIfStmtLinhaAccess().getBlockParserRuleCall_1_1_1_1());
					}
					this_Block_10=ruleBlock
					{
						$current.merge(this_Block_10);
					}
					{
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
	)
;

// Entry rule entryRuleSwitchStmt
entryRuleSwitchStmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSwitchStmtRule()); }
	iv_ruleSwitchStmt=ruleSwitchStmt
	{ $current=$iv_ruleSwitchStmt.current.getText(); }
	EOF;

// Rule SwitchStmt
ruleSwitchStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_SWITCH_0=RULE_SWITCH
		{
			$current.merge(this_SWITCH_0);
		}
		{
			newLeafNode(this_SWITCH_0, grammarAccess.getSwitchStmtAccess().getSWITCHTerminalRuleCall_0());
		}
		(
			(
				(ruleSimpleStmt)=>
				{
					newCompositeNode(grammarAccess.getSwitchStmtAccess().getSimpleStmtParserRuleCall_1_0());
				}
				this_SimpleStmt_1=ruleSimpleStmt
				{
					$current.merge(this_SimpleStmt_1);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)
			kw=';'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSwitchStmtAccess().getSemicolonKeyword_1_1());
			}
		)?
		{
			newCompositeNode(grammarAccess.getSwitchStmtAccess().getSwitchStmtLinhaParserRuleCall_2());
		}
		this_SwitchStmtLinha_3=ruleSwitchStmtLinha
		{
			$current.merge(this_SwitchStmtLinha_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSwitchStmtLinha
entryRuleSwitchStmtLinha returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSwitchStmtLinhaRule()); }
	iv_ruleSwitchStmtLinha=ruleSwitchStmtLinha
	{ $current=$iv_ruleSwitchStmtLinha.current.getText(); }
	EOF;

// Rule SwitchStmtLinha
ruleSwitchStmtLinha returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getSwitchStmtLinhaAccess().getPrimaryExprParserRuleCall_0_0());
			}
			this_PrimaryExpr_0=rulePrimaryExpr
			{
				$current.merge(this_PrimaryExpr_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getSwitchStmtLinhaAccess().getSwitchStmtLinhaLinhaParserRuleCall_0_1());
			}
			this_SwitchStmtLinhaLinha_1=ruleSwitchStmtLinhaLinha
			{
				$current.merge(this_SwitchStmtLinhaLinha_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(
				(
					this_UNARY_OP_2=RULE_UNARY_OP
					{
						$current.merge(this_UNARY_OP_2);
					}
					{
						newLeafNode(this_UNARY_OP_2, grammarAccess.getSwitchStmtLinhaAccess().getUNARY_OPTerminalRuleCall_1_0_0_0());
					}
					{
						newCompositeNode(grammarAccess.getSwitchStmtLinhaAccess().getUnaryExprParserRuleCall_1_0_0_1());
					}
					this_UnaryExpr_3=ruleUnaryExpr
					{
						$current.merge(this_UnaryExpr_3);
					}
					{
						afterParserOrEnumRuleCall();
					}
				)
				{
					newCompositeNode(grammarAccess.getSwitchStmtLinhaAccess().getExpression_LinhaParserRuleCall_1_0_1());
				}
				this_Expression_Linha_4=ruleExpression_Linha
				{
					$current.merge(this_Expression_Linha_4);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)?
			kw='{'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSwitchStmtLinhaAccess().getLeftCurlyBracketKeyword_1_1());
			}
			(
				{
					newCompositeNode(grammarAccess.getSwitchStmtLinhaAccess().getExprCaseClauseParserRuleCall_1_2());
				}
				this_ExprCaseClause_6=ruleExprCaseClause
				{
					$current.merge(this_ExprCaseClause_6);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)*
			kw='}'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSwitchStmtLinhaAccess().getRightCurlyBracketKeyword_1_3());
			}
		)
		    |
		(
			(
				this_IDENTIFIER_8=RULE_IDENTIFIER
				{
					$current.merge(this_IDENTIFIER_8);
				}
				{
					newLeafNode(this_IDENTIFIER_8, grammarAccess.getSwitchStmtLinhaAccess().getIDENTIFIERTerminalRuleCall_2_0_0());
				}
				kw=':='
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getSwitchStmtLinhaAccess().getColonEqualsSignKeyword_2_0_1());
				}
			)
			{
				newCompositeNode(grammarAccess.getSwitchStmtLinhaAccess().getPrimaryExprParserRuleCall_2_1());
			}
			this_PrimaryExpr_10=rulePrimaryExpr
			{
				$current.merge(this_PrimaryExpr_10);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSwitchStmtLinhaAccess().getFullStopKeyword_2_2());
			}
			kw='('
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSwitchStmtLinhaAccess().getLeftParenthesisKeyword_2_3());
			}
			this_TYPEKEYWORD_13=RULE_TYPEKEYWORD
			{
				$current.merge(this_TYPEKEYWORD_13);
			}
			{
				newLeafNode(this_TYPEKEYWORD_13, grammarAccess.getSwitchStmtLinhaAccess().getTYPEKEYWORDTerminalRuleCall_2_4());
			}
			kw=')'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSwitchStmtLinhaAccess().getRightParenthesisKeyword_2_5());
			}
			kw='{'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSwitchStmtLinhaAccess().getLeftCurlyBracketKeyword_2_6());
			}
			(
				{
					newCompositeNode(grammarAccess.getSwitchStmtLinhaAccess().getTypeCaseClauseParserRuleCall_2_7());
				}
				this_TypeCaseClause_16=ruleTypeCaseClause
				{
					$current.merge(this_TypeCaseClause_16);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)*
			kw='}'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSwitchStmtLinhaAccess().getRightCurlyBracketKeyword_2_8());
			}
		)
	)
;

// Entry rule entryRuleSwitchStmtLinhaLinha
entryRuleSwitchStmtLinhaLinha returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSwitchStmtLinhaLinhaRule()); }
	iv_ruleSwitchStmtLinhaLinha=ruleSwitchStmtLinhaLinha
	{ $current=$iv_ruleSwitchStmtLinhaLinha.current.getText(); }
	EOF;

// Rule SwitchStmtLinhaLinha
ruleSwitchStmtLinhaLinha returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='{'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSwitchStmtLinhaLinhaAccess().getLeftCurlyBracketKeyword_0_0());
			}
			(
				{
					newCompositeNode(grammarAccess.getSwitchStmtLinhaLinhaAccess().getExprCaseClauseParserRuleCall_0_1());
				}
				this_ExprCaseClause_1=ruleExprCaseClause
				{
					$current.merge(this_ExprCaseClause_1);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)*
			kw='}'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSwitchStmtLinhaLinhaAccess().getRightCurlyBracketKeyword_0_2());
			}
		)
		    |
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSwitchStmtLinhaLinhaAccess().getFullStopKeyword_1_0());
			}
			kw='('
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSwitchStmtLinhaLinhaAccess().getLeftParenthesisKeyword_1_1());
			}
			this_TYPEKEYWORD_5=RULE_TYPEKEYWORD
			{
				$current.merge(this_TYPEKEYWORD_5);
			}
			{
				newLeafNode(this_TYPEKEYWORD_5, grammarAccess.getSwitchStmtLinhaLinhaAccess().getTYPEKEYWORDTerminalRuleCall_1_2());
			}
			kw=')'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSwitchStmtLinhaLinhaAccess().getRightParenthesisKeyword_1_3());
			}
			kw='{'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSwitchStmtLinhaLinhaAccess().getLeftCurlyBracketKeyword_1_4());
			}
			(
				{
					newCompositeNode(grammarAccess.getSwitchStmtLinhaLinhaAccess().getTypeCaseClauseParserRuleCall_1_5());
				}
				this_TypeCaseClause_8=ruleTypeCaseClause
				{
					$current.merge(this_TypeCaseClause_8);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)*
			kw='}'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSwitchStmtLinhaLinhaAccess().getRightCurlyBracketKeyword_1_6());
			}
		)
	)
;

// Entry rule entryRuleExprCaseClause
entryRuleExprCaseClause returns [String current=null]:
	{ newCompositeNode(grammarAccess.getExprCaseClauseRule()); }
	iv_ruleExprCaseClause=ruleExprCaseClause
	{ $current=$iv_ruleExprCaseClause.current.getText(); }
	EOF;

// Rule ExprCaseClause
ruleExprCaseClause returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseParserRuleCall_0());
		}
		this_ExprSwitchCase_0=ruleExprSwitchCase
		{
			$current.merge(this_ExprSwitchCase_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getExprCaseClauseAccess().getColonKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getExprCaseClauseAccess().getStatementListParserRuleCall_2());
		}
		this_StatementList_2=ruleStatementList
		{
			$current.merge(this_StatementList_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExprSwitchCase
entryRuleExprSwitchCase returns [String current=null]:
	{ newCompositeNode(grammarAccess.getExprSwitchCaseRule()); }
	iv_ruleExprSwitchCase=ruleExprSwitchCase
	{ $current=$iv_ruleExprSwitchCase.current.getText(); }
	EOF;

// Rule ExprSwitchCase
ruleExprSwitchCase returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_CASE_0=RULE_CASE
			{
				$current.merge(this_CASE_0);
			}
			{
				newLeafNode(this_CASE_0, grammarAccess.getExprSwitchCaseAccess().getCASETerminalRuleCall_0_0());
			}
			{
				newCompositeNode(grammarAccess.getExprSwitchCaseAccess().getExpressionListParserRuleCall_0_1());
			}
			this_ExpressionList_1=ruleExpressionList
			{
				$current.merge(this_ExpressionList_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		this_DEFAULT_2=RULE_DEFAULT
		{
			$current.merge(this_DEFAULT_2);
		}
		{
			newLeafNode(this_DEFAULT_2, grammarAccess.getExprSwitchCaseAccess().getDEFAULTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleTypeCaseClause
entryRuleTypeCaseClause returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeCaseClauseRule()); }
	iv_ruleTypeCaseClause=ruleTypeCaseClause
	{ $current=$iv_ruleTypeCaseClause.current.getText(); }
	EOF;

// Rule TypeCaseClause
ruleTypeCaseClause returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseParserRuleCall_0());
		}
		this_TypeSwitchCase_0=ruleTypeSwitchCase
		{
			$current.merge(this_TypeSwitchCase_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeCaseClauseAccess().getColonKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getStatementListParserRuleCall_2());
		}
		this_StatementList_2=ruleStatementList
		{
			$current.merge(this_StatementList_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTypeSwitchCase
entryRuleTypeSwitchCase returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeSwitchCaseRule()); }
	iv_ruleTypeSwitchCase=ruleTypeSwitchCase
	{ $current=$iv_ruleTypeSwitchCase.current.getText(); }
	EOF;

// Rule TypeSwitchCase
ruleTypeSwitchCase returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_CASE_0=RULE_CASE
			{
				$current.merge(this_CASE_0);
			}
			{
				newLeafNode(this_CASE_0, grammarAccess.getTypeSwitchCaseAccess().getCASETerminalRuleCall_0_0());
			}
			{
				newCompositeNode(grammarAccess.getTypeSwitchCaseAccess().getTypeListParserRuleCall_0_1());
			}
			this_TypeList_1=ruleTypeList
			{
				$current.merge(this_TypeList_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		this_DEFAULT_2=RULE_DEFAULT
		{
			$current.merge(this_DEFAULT_2);
		}
		{
			newLeafNode(this_DEFAULT_2, grammarAccess.getTypeSwitchCaseAccess().getDEFAULTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleTypeList
entryRuleTypeList returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeListRule()); }
	iv_ruleTypeList=ruleTypeList
	{ $current=$iv_ruleTypeList.current.getText(); }
	EOF;

// Rule TypeList
ruleTypeList returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeListAccess().getTypeParserRuleCall_0());
		}
		this_Type_0=ruleType
		{
			$current.merge(this_Type_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw=','
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTypeListAccess().getCommaKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getTypeListAccess().getTypeParserRuleCall_1_1());
			}
			this_Type_2=ruleType
			{
				$current.merge(this_Type_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)*
	)
;

// Entry rule entryRuleForStmt
entryRuleForStmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getForStmtRule()); }
	iv_ruleForStmt=ruleForStmt
	{ $current=$iv_ruleForStmt.current.getText(); }
	EOF;

// Rule ForStmt
ruleForStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_FOR_0=RULE_FOR
		{
			$current.merge(this_FOR_0);
		}
		{
			newLeafNode(this_FOR_0, grammarAccess.getForStmtAccess().getFORTerminalRuleCall_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStmtAccess().getExpressionParserRuleCall_1_0_0());
				}
				this_Expression_1=ruleExpression
				{
					$current.merge(this_Expression_1);
				}
				{
					afterParserOrEnumRuleCall();
				}
				{
					newCompositeNode(grammarAccess.getForStmtAccess().getForStmtLinhaParserRuleCall_1_0_1());
				}
				this_ForStmtLinha_2=ruleForStmtLinha
				{
					$current.merge(this_ForStmtLinha_2);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getForStmtAccess().getEmptyStmtParserRuleCall_1_1_0_0());
					}
					this_EmptyStmt_3=ruleEmptyStmt
					{
						$current.merge(this_EmptyStmt_3);
					}
					{
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getForStmtAccess().getShortVarDeclParserRuleCall_1_1_0_1());
					}
					this_ShortVarDecl_4=ruleShortVarDecl
					{
						$current.merge(this_ShortVarDecl_4);
					}
					{
						afterParserOrEnumRuleCall();
					}
				)
				kw=';'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getForStmtAccess().getSemicolonKeyword_1_1_1());
				}
				{
					newCompositeNode(grammarAccess.getForStmtAccess().getConditionParserRuleCall_1_1_2());
				}
				this_Condition_6=ruleCondition
				{
					$current.merge(this_Condition_6);
				}
				{
					afterParserOrEnumRuleCall();
				}
				kw=';'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getForStmtAccess().getSemicolonKeyword_1_1_3());
				}
				{
					newCompositeNode(grammarAccess.getForStmtAccess().getPostStmtParserRuleCall_1_1_4());
				}
				this_PostStmt_8=rulePostStmt
				{
					$current.merge(this_PostStmt_8);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				{
					newCompositeNode(grammarAccess.getForStmtAccess().getIdentifierListParserRuleCall_1_2_0());
				}
				this_IdentifierList_9=ruleIdentifierList
				{
					$current.merge(this_IdentifierList_9);
				}
				{
					afterParserOrEnumRuleCall();
				}
				kw=':='
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getForStmtAccess().getColonEqualsSignKeyword_1_2_1());
				}
				this_RANGE_11=RULE_RANGE
				{
					$current.merge(this_RANGE_11);
				}
				{
					newLeafNode(this_RANGE_11, grammarAccess.getForStmtAccess().getRANGETerminalRuleCall_1_2_2());
				}
				{
					newCompositeNode(grammarAccess.getForStmtAccess().getExpressionParserRuleCall_1_2_3());
				}
				this_Expression_12=ruleExpression
				{
					$current.merge(this_Expression_12);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)
		)?
		{
			newCompositeNode(grammarAccess.getForStmtAccess().getBlockParserRuleCall_2());
		}
		this_Block_13=ruleBlock
		{
			$current.merge(this_Block_13);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleForStmtLinha
entryRuleForStmtLinha returns [String current=null]:
	{ newCompositeNode(grammarAccess.getForStmtLinhaRule()); }
	iv_ruleForStmtLinha=ruleForStmtLinha
	{ $current=$iv_ruleForStmtLinha.current.getText(); }
	EOF;

// Rule ForStmtLinha
ruleForStmtLinha returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ANY_OTHER_0=RULE_ANY_OTHER
		{
			$current.merge(this_ANY_OTHER_0);
		}
		{
			newLeafNode(this_ANY_OTHER_0, grammarAccess.getForStmtLinhaAccess().getANY_OTHERTerminalRuleCall_0());
		}
		    |
		(
			(
				kw=','
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getForStmtLinhaAccess().getCommaKeyword_1_0_0());
				}
				{
					newCompositeNode(grammarAccess.getForStmtLinhaAccess().getExpressionParserRuleCall_1_0_1());
				}
				this_Expression_2=ruleExpression
				{
					$current.merge(this_Expression_2);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)*
			{
				newCompositeNode(grammarAccess.getForStmtLinhaAccess().getForStmtLinhaLinhaParserRuleCall_1_1());
			}
			this_ForStmtLinhaLinha_3=ruleForStmtLinhaLinha
			{
				$current.merge(this_ForStmtLinhaLinha_3);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(
				(
					kw='<-'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getForStmtLinhaAccess().getLessThanSignHyphenMinusKeyword_2_0_0_0());
					}
					{
						newCompositeNode(grammarAccess.getForStmtLinhaAccess().getExpressionParserRuleCall_2_0_0_1());
					}
					this_Expression_5=ruleExpression
					{
						$current.merge(this_Expression_5);
					}
					{
						afterParserOrEnumRuleCall();
					}
				)
				    |
				(
					kw='++'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getForStmtLinhaAccess().getPlusSignPlusSignKeyword_2_0_1_0());
					}
					    |
					kw='--'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getForStmtLinhaAccess().getHyphenMinusHyphenMinusKeyword_2_0_1_1());
					}
				)
				    |
				this_ANY_OTHER_8=RULE_ANY_OTHER
				{
					$current.merge(this_ANY_OTHER_8);
				}
				{
					newLeafNode(this_ANY_OTHER_8, grammarAccess.getForStmtLinhaAccess().getANY_OTHERTerminalRuleCall_2_0_2());
				}
			)
			kw=';'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getForStmtLinhaAccess().getSemicolonKeyword_2_1());
			}
			{
				newCompositeNode(grammarAccess.getForStmtLinhaAccess().getConditionParserRuleCall_2_2());
			}
			this_Condition_10=ruleCondition
			{
				$current.merge(this_Condition_10);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=';'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getForStmtLinhaAccess().getSemicolonKeyword_2_3());
			}
			{
				newCompositeNode(grammarAccess.getForStmtLinhaAccess().getPostStmtParserRuleCall_2_4());
			}
			this_PostStmt_12=rulePostStmt
			{
				$current.merge(this_PostStmt_12);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleForStmtLinhaLinha
entryRuleForStmtLinhaLinha returns [String current=null]:
	{ newCompositeNode(grammarAccess.getForStmtLinhaLinhaRule()); }
	iv_ruleForStmtLinhaLinha=ruleForStmtLinhaLinha
	{ $current=$iv_ruleForStmtLinhaLinha.current.getText(); }
	EOF;

// Rule ForStmtLinhaLinha
ruleForStmtLinhaLinha returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getForStmtLinhaLinhaAccess().getAssign_opParserRuleCall_0_0());
			}
			this_assign_op_0=ruleassign_op
			{
				$current.merge(this_assign_op_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getForStmtLinhaLinhaAccess().getExpressionListParserRuleCall_0_1());
			}
			this_ExpressionList_1=ruleExpressionList
			{
				$current.merge(this_ExpressionList_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=';'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getForStmtLinhaLinhaAccess().getSemicolonKeyword_0_2());
			}
			{
				newCompositeNode(grammarAccess.getForStmtLinhaLinhaAccess().getConditionParserRuleCall_0_3());
			}
			this_Condition_3=ruleCondition
			{
				$current.merge(this_Condition_3);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=';'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getForStmtLinhaLinhaAccess().getSemicolonKeyword_0_4());
			}
			{
				newCompositeNode(grammarAccess.getForStmtLinhaLinhaAccess().getPostStmtParserRuleCall_0_5());
			}
			this_PostStmt_5=rulePostStmt
			{
				$current.merge(this_PostStmt_5);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			kw='='
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getForStmtLinhaLinhaAccess().getEqualsSignKeyword_1_0());
			}
			this_RANGE_7=RULE_RANGE
			{
				$current.merge(this_RANGE_7);
			}
			{
				newLeafNode(this_RANGE_7, grammarAccess.getForStmtLinhaLinhaAccess().getRANGETerminalRuleCall_1_1());
			}
			{
				newCompositeNode(grammarAccess.getForStmtLinhaLinhaAccess().getExpressionParserRuleCall_1_2());
			}
			this_Expression_8=ruleExpression
			{
				$current.merge(this_Expression_8);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [String current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current.getText(); }
	EOF;

// Rule Condition
ruleCondition returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getConditionAccess().getExpressionParserRuleCall());
	}
	this_Expression_0=ruleExpression
	{
		$current.merge(this_Expression_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulePostStmt
entryRulePostStmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPostStmtRule()); }
	iv_rulePostStmt=rulePostStmt
	{ $current=$iv_rulePostStmt.current.getText(); }
	EOF;

// Rule PostStmt
rulePostStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getPostStmtAccess().getSimpleStmtParserRuleCall());
	}
	this_SimpleStmt_0=ruleSimpleStmt
	{
		$current.merge(this_SimpleStmt_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleGoStmt
entryRuleGoStmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getGoStmtRule()); }
	iv_ruleGoStmt=ruleGoStmt
	{ $current=$iv_ruleGoStmt.current.getText(); }
	EOF;

// Rule GoStmt
ruleGoStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_GO_0=RULE_GO
		{
			$current.merge(this_GO_0);
		}
		{
			newLeafNode(this_GO_0, grammarAccess.getGoStmtAccess().getGOTerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getGoStmtAccess().getExpressionParserRuleCall_1());
		}
		this_Expression_1=ruleExpression
		{
			$current.merge(this_Expression_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSelectStmt
entryRuleSelectStmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSelectStmtRule()); }
	iv_ruleSelectStmt=ruleSelectStmt
	{ $current=$iv_ruleSelectStmt.current.getText(); }
	EOF;

// Rule SelectStmt
ruleSelectStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_SELECT_0=RULE_SELECT
		{
			$current.merge(this_SELECT_0);
		}
		{
			newLeafNode(this_SELECT_0, grammarAccess.getSelectStmtAccess().getSELECTTerminalRuleCall_0());
		}
		kw='{'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSelectStmtAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			{
				newCompositeNode(grammarAccess.getSelectStmtAccess().getCommClauseParserRuleCall_2());
			}
			this_CommClause_2=ruleCommClause
			{
				$current.merge(this_CommClause_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)*
		kw='}'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSelectStmtAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleCommClause
entryRuleCommClause returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCommClauseRule()); }
	iv_ruleCommClause=ruleCommClause
	{ $current=$iv_ruleCommClause.current.getText(); }
	EOF;

// Rule CommClause
ruleCommClause returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCommClauseAccess().getCommCaseParserRuleCall_0());
		}
		this_CommCase_0=ruleCommCase
		{
			$current.merge(this_CommCase_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCommClauseAccess().getColonKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getCommClauseAccess().getStatementListParserRuleCall_2());
		}
		this_StatementList_2=ruleStatementList
		{
			$current.merge(this_StatementList_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCommCase
entryRuleCommCase returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCommCaseRule()); }
	iv_ruleCommCase=ruleCommCase
	{ $current=$iv_ruleCommCase.current.getText(); }
	EOF;

// Rule CommCase
ruleCommCase returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_CASE_0=RULE_CASE
			{
				$current.merge(this_CASE_0);
			}
			{
				newLeafNode(this_CASE_0, grammarAccess.getCommCaseAccess().getCASETerminalRuleCall_0_0());
			}
			(
				{
					newCompositeNode(grammarAccess.getCommCaseAccess().getExpressionParserRuleCall_0_1_0());
				}
				this_Expression_1=ruleExpression
				{
					$current.merge(this_Expression_1);
				}
				{
					afterParserOrEnumRuleCall();
				}
				{
					newCompositeNode(grammarAccess.getCommCaseAccess().getCommCaseLinhaParserRuleCall_0_1_1());
				}
				this_CommCaseLinha_2=ruleCommCaseLinha
				{
					$current.merge(this_CommCaseLinha_2);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		this_DEFAULT_3=RULE_DEFAULT
		{
			$current.merge(this_DEFAULT_3);
		}
		{
			newLeafNode(this_DEFAULT_3, grammarAccess.getCommCaseAccess().getDEFAULTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleCommCaseLinha
entryRuleCommCaseLinha returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCommCaseLinhaRule()); }
	iv_ruleCommCaseLinha=ruleCommCaseLinha
	{ $current=$iv_ruleCommCaseLinha.current.getText(); }
	EOF;

// Rule CommCaseLinha
ruleCommCaseLinha returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='<-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getCommCaseLinhaAccess().getLessThanSignHyphenMinusKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getCommCaseLinhaAccess().getExpressionParserRuleCall_0_1());
			}
			this_Expression_1=ruleExpression
			{
				$current.merge(this_Expression_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(
				(
					(
						kw=','
						{
							$current.merge(kw);
							newLeafNode(kw, grammarAccess.getCommCaseLinhaAccess().getCommaKeyword_1_0_0_0_0());
						}
						{
							newCompositeNode(grammarAccess.getCommCaseLinhaAccess().getExpressionParserRuleCall_1_0_0_0_1());
						}
						this_Expression_3=ruleExpression
						{
							$current.merge(this_Expression_3);
						}
						{
							afterParserOrEnumRuleCall();
						}
					)*
					kw='='
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getCommCaseLinhaAccess().getEqualsSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					{
						newCompositeNode(grammarAccess.getCommCaseLinhaAccess().getIdentifierListParserRuleCall_1_0_1_0());
					}
					this_IdentifierList_5=ruleIdentifierList
					{
						$current.merge(this_IdentifierList_5);
					}
					{
						afterParserOrEnumRuleCall();
					}
					kw=':='
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getCommCaseLinhaAccess().getColonEqualsSignKeyword_1_0_1_1());
					}
				)
			)
			{
				newCompositeNode(grammarAccess.getCommCaseLinhaAccess().getRecvExprParserRuleCall_1_1());
			}
			this_RecvExpr_7=ruleRecvExpr
			{
				$current.merge(this_RecvExpr_7);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleRecvExpr
entryRuleRecvExpr returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRecvExprRule()); }
	iv_ruleRecvExpr=ruleRecvExpr
	{ $current=$iv_ruleRecvExpr.current.getText(); }
	EOF;

// Rule RecvExpr
ruleRecvExpr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getRecvExprAccess().getExpressionParserRuleCall());
	}
	this_Expression_0=ruleExpression
	{
		$current.merge(this_Expression_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleReturnStmt
entryRuleReturnStmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getReturnStmtRule()); }
	iv_ruleReturnStmt=ruleReturnStmt
	{ $current=$iv_ruleReturnStmt.current.getText(); }
	EOF;

// Rule ReturnStmt
ruleReturnStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_RETURN_0=RULE_RETURN
		{
			$current.merge(this_RETURN_0);
		}
		{
			newLeafNode(this_RETURN_0, grammarAccess.getReturnStmtAccess().getRETURNTerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getReturnStmtAccess().getExpressionListParserRuleCall_1());
		}
		this_ExpressionList_1=ruleExpressionList
		{
			$current.merge(this_ExpressionList_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBreakStmt
entryRuleBreakStmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBreakStmtRule()); }
	iv_ruleBreakStmt=ruleBreakStmt
	{ $current=$iv_ruleBreakStmt.current.getText(); }
	EOF;

// Rule BreakStmt
ruleBreakStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_BREAK_0=RULE_BREAK
		{
			$current.merge(this_BREAK_0);
		}
		{
			newLeafNode(this_BREAK_0, grammarAccess.getBreakStmtAccess().getBREAKTerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getBreakStmtAccess().getLabelParserRuleCall_1());
		}
		this_Label_1=ruleLabel
		{
			$current.merge(this_Label_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleContinueStmt
entryRuleContinueStmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getContinueStmtRule()); }
	iv_ruleContinueStmt=ruleContinueStmt
	{ $current=$iv_ruleContinueStmt.current.getText(); }
	EOF;

// Rule ContinueStmt
ruleContinueStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_CONTINUE_0=RULE_CONTINUE
		{
			$current.merge(this_CONTINUE_0);
		}
		{
			newLeafNode(this_CONTINUE_0, grammarAccess.getContinueStmtAccess().getCONTINUETerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getContinueStmtAccess().getLabelParserRuleCall_1());
		}
		this_Label_1=ruleLabel
		{
			$current.merge(this_Label_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleGotoStmt
entryRuleGotoStmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getGotoStmtRule()); }
	iv_ruleGotoStmt=ruleGotoStmt
	{ $current=$iv_ruleGotoStmt.current.getText(); }
	EOF;

// Rule GotoStmt
ruleGotoStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_GOTO_0=RULE_GOTO
		{
			$current.merge(this_GOTO_0);
		}
		{
			newLeafNode(this_GOTO_0, grammarAccess.getGotoStmtAccess().getGOTOTerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getGotoStmtAccess().getLabelParserRuleCall_1());
		}
		this_Label_1=ruleLabel
		{
			$current.merge(this_Label_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFallthroughStmt
entryRuleFallthroughStmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFallthroughStmtRule()); }
	iv_ruleFallthroughStmt=ruleFallthroughStmt
	{ $current=$iv_ruleFallthroughStmt.current.getText(); }
	EOF;

// Rule FallthroughStmt
ruleFallthroughStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_FALLTHROUGH_0=RULE_FALLTHROUGH
	{
		$current.merge(this_FALLTHROUGH_0);
	}
	{
		newLeafNode(this_FALLTHROUGH_0, grammarAccess.getFallthroughStmtAccess().getFALLTHROUGHTerminalRuleCall());
	}
;

// Entry rule entryRuleDeferStmt
entryRuleDeferStmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDeferStmtRule()); }
	iv_ruleDeferStmt=ruleDeferStmt
	{ $current=$iv_ruleDeferStmt.current.getText(); }
	EOF;

// Rule DeferStmt
ruleDeferStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_DEFER_0=RULE_DEFER
		{
			$current.merge(this_DEFER_0);
		}
		{
			newLeafNode(this_DEFER_0, grammarAccess.getDeferStmtAccess().getDEFERTerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getDeferStmtAccess().getExpressionParserRuleCall_1());
		}
		this_Expression_1=ruleExpression
		{
			$current.merge(this_Expression_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSourceFile
entryRuleSourceFile returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSourceFileRule()); }
	iv_ruleSourceFile=ruleSourceFile
	{ $current=$iv_ruleSourceFile.current.getText(); }
	EOF;

// Rule SourceFile
ruleSourceFile returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSourceFileAccess().getPackageClauseParserRuleCall_0());
		}
		this_PackageClause_0=rulePackageClause
		{
			$current.merge(this_PackageClause_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=';'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSourceFileAccess().getSemicolonKeyword_1());
		}
		(
			{
				newCompositeNode(grammarAccess.getSourceFileAccess().getImportDeclParserRuleCall_2_0());
			}
			this_ImportDecl_2=ruleImportDecl
			{
				$current.merge(this_ImportDecl_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=';'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSourceFileAccess().getSemicolonKeyword_2_1());
			}
		)*
		(
			{
				newCompositeNode(grammarAccess.getSourceFileAccess().getTopLevelDeclParserRuleCall_3_0());
			}
			this_TopLevelDecl_4=ruleTopLevelDecl
			{
				$current.merge(this_TopLevelDecl_4);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=';'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSourceFileAccess().getSemicolonKeyword_3_1());
			}
		)*
	)
;

// Entry rule entryRulePackageClause
entryRulePackageClause returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPackageClauseRule()); }
	iv_rulePackageClause=rulePackageClause
	{ $current=$iv_rulePackageClause.current.getText(); }
	EOF;

// Rule PackageClause
rulePackageClause returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_PACKAGE_0=RULE_PACKAGE
		{
			$current.merge(this_PACKAGE_0);
		}
		{
			newLeafNode(this_PACKAGE_0, grammarAccess.getPackageClauseAccess().getPACKAGETerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getPackageClauseAccess().getPackageNameParserRuleCall_1());
		}
		this_PackageName_1=rulePackageName
		{
			$current.merge(this_PackageName_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePackageName
entryRulePackageName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPackageNameRule()); }
	iv_rulePackageName=rulePackageName
	{ $current=$iv_rulePackageName.current.getText(); }
	EOF;

// Rule PackageName
rulePackageName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_IDENTIFIER_0=RULE_IDENTIFIER
	{
		$current.merge(this_IDENTIFIER_0);
	}
	{
		newLeafNode(this_IDENTIFIER_0, grammarAccess.getPackageNameAccess().getIDENTIFIERTerminalRuleCall());
	}
;

// Entry rule entryRuleImportDecl
entryRuleImportDecl returns [String current=null]:
	{ newCompositeNode(grammarAccess.getImportDeclRule()); }
	iv_ruleImportDecl=ruleImportDecl
	{ $current=$iv_ruleImportDecl.current.getText(); }
	EOF;

// Rule ImportDecl
ruleImportDecl returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_IMPORT_0=RULE_IMPORT
		{
			$current.merge(this_IMPORT_0);
		}
		{
			newLeafNode(this_IMPORT_0, grammarAccess.getImportDeclAccess().getIMPORTTerminalRuleCall_0());
		}
		(
			{
				newCompositeNode(grammarAccess.getImportDeclAccess().getImportSpecParserRuleCall_1_0());
			}
			this_ImportSpec_1=ruleImportSpec
			{
				$current.merge(this_ImportSpec_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			(
				kw='('
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getImportDeclAccess().getLeftParenthesisKeyword_1_1_0());
				}
				(
					{
						newCompositeNode(grammarAccess.getImportDeclAccess().getImportSpecParserRuleCall_1_1_1_0());
					}
					this_ImportSpec_3=ruleImportSpec
					{
						$current.merge(this_ImportSpec_3);
					}
					{
						afterParserOrEnumRuleCall();
					}
					kw=';'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getImportDeclAccess().getSemicolonKeyword_1_1_1_1());
					}
				)*
				kw=')'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getImportDeclAccess().getRightParenthesisKeyword_1_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleImportSpec
entryRuleImportSpec returns [String current=null]:
	{ newCompositeNode(grammarAccess.getImportSpecRule()); }
	iv_ruleImportSpec=ruleImportSpec
	{ $current=$iv_ruleImportSpec.current.getText(); }
	EOF;

// Rule ImportSpec
ruleImportSpec returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getImportSpecAccess().getFullStopKeyword_0_0());
			}
			    |
			{
				newCompositeNode(grammarAccess.getImportSpecAccess().getPackageNameParserRuleCall_0_1());
			}
			this_PackageName_1=rulePackageName
			{
				$current.merge(this_PackageName_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
		{
			newCompositeNode(grammarAccess.getImportSpecAccess().getImportPathParserRuleCall_1());
		}
		this_ImportPath_2=ruleImportPath
		{
			$current.merge(this_ImportPath_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleImportPath
entryRuleImportPath returns [String current=null]:
	{ newCompositeNode(grammarAccess.getImportPathRule()); }
	iv_ruleImportPath=ruleImportPath
	{ $current=$iv_ruleImportPath.current.getText(); }
	EOF;

// Rule ImportPath
ruleImportPath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_STRING_LIT_0=RULE_STRING_LIT
	{
		$current.merge(this_STRING_LIT_0);
	}
	{
		newLeafNode(this_STRING_LIT_0, grammarAccess.getImportPathAccess().getSTRING_LITTerminalRuleCall());
	}
;

fragment RULE_NEWLINE : ('\n'|'\r'|'\n\r');

fragment RULE_LETTER : ('a'..'z'|'A'..'Z'|'_');

fragment RULE_DECIMAL_DIGIT : '0'..'9';

fragment RULE_OCTAL_DIGIT : '0'..'7';

fragment RULE_HEX_DIGIT : ('0'..'9'|'A'..'F'|'a'..'f');

RULE_BREAK : 'break';

RULE_DEFAULT : 'default';

RULE_FUNC : 'func';

RULE_INTERFACE : 'interface';

RULE_SELECT : 'select';

RULE_CASE : 'case';

RULE_DEFER : 'defer';

RULE_GO : 'go';

RULE_MAP : 'map';

RULE_STRUCT : 'struct';

RULE_CHAN : 'chan';

RULE_ELSE : 'else';

RULE_GOTO : 'goto';

RULE_PACKAGE : 'package';

RULE_SWITCH : 'switch';

RULE_CONST : 'const';

RULE_FALLTHROUGH : 'fallthrough';

RULE_IF : 'if';

RULE_RANGE : 'range';

RULE_TYPEKEYWORD : 'type';

RULE_CONTINUE : 'continue';

RULE_FOR : 'for';

RULE_IMPORT : 'import';

RULE_RETURN : 'return';

RULE_VAR : 'var';

RULE_IDENTIFIER : RULE_LETTER (RULE_LETTER|'0'..'9')*;

fragment RULE_UNICODE_CHAR : 'fazeer';

RULE_INT_LIT : ('1'..'9' RULE_DECIMAL_DIGIT*|'0' RULE_OCTAL_DIGIT*|'0' ('x'|'X') RULE_HEX_DIGIT+);

RULE_DECIMALS : RULE_INT;

RULE_EXPONENT : ('e'|'E') ('+'|'-')? RULE_DECIMALS;

RULE_RUNE_LIT : '\'' (RULE_UNICODE_VALUE|RULE_BYTE_VALUE) '\'';

fragment RULE_UNICODE_VALUE : (RULE_UNICODE_CHAR|RULE_LITTLE_U_VALUE|RULE_BIG_U_VALUE|RULE_ESCAPED_CHAR);

fragment RULE_BYTE_VALUE : (RULE_OCTAL_BYTE_VALUE|RULE_HEX_BYTE_VALUE);

fragment RULE_OCTAL_BYTE_VALUE : '\\' RULE_OCTAL_DIGIT RULE_OCTAL_DIGIT RULE_OCTAL_DIGIT;

fragment RULE_HEX_BYTE_VALUE : '\\' 'x' RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_LITTLE_U_VALUE : '\\' 'u' RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_BIG_U_VALUE : '\\' 'U' RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_ESCAPED_CHAR : '\\' ('a'|'b'|'f'|'n'|'r'|'t'|'v'|'\\'|'\''|'"');

RULE_STRING_LIT : (RULE_RAW_STRING_LIT|RULE_INTERPRETED_STRING_LIT);

fragment RULE_RAW_STRING_LIT : '\'' (RULE_UNICODE_CHAR|RULE_NEWLINE)* '\'';

fragment RULE_INTERPRETED_STRING_LIT : '"' (RULE_UNICODE_VALUE|RULE_BYTE_VALUE)* '"';

RULE_REL_OP : ('=='|'!='|'<'|'<='|'>'|'>=');

RULE_ADD_OP : ('+'|'-'|'|'|'^');

RULE_MUL_OP : ('*'|'/'|'%'|'<<'|'>>'|'&'|'&^');

RULE_UNARY_OP : ('+'|'-'|'!'|'^'|'*'|'&'|'<-');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
